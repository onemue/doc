(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function t(t){for(var r,a,s=t[0],c=t[1],l=t[2],p=0,f=[];p<s.length;p++)a=s[p],Object.prototype.hasOwnProperty.call(i,a)&&i[a]&&f.push(i[a][0]),i[a]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(n[r]=c[r]);for(u&&u(t);f.length;)f.shift()();return o.push.apply(o,l||[]),e()}function e(){for(var n,t=0;t<o.length;t++){for(var e=o[t],r=!0,s=1;s<e.length;s++){var c=e[s];0!==i[c]&&(r=!1)}r&&(o.splice(t--,1),n=a(a.s=e[0]))}return n}var r={},i={1:0},o=[];function a(t){if(r[t])return r[t].exports;var e=r[t]={i:t,l:!1,exports:{}};return n[t].call(e.exports,e,e.exports,a),e.l=!0,e.exports}a.e=function(n){var t=[],e=i[n];if(0!==e)if(e)t.push(e[2]);else{var r=new Promise((function(t,r){e=i[n]=[t,r]}));t.push(e[2]=r);var o,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(n){return a.p+"assets/js/"+({}[n]||n)+"."+{2:"2e8f894a",3:"ea118fbe",4:"6fbf7596",5:"f7d53cbe",6:"db4bfcd5",7:"2123913f",8:"c52818c0",9:"20e728b8",10:"f6f629b0",11:"84b24849",12:"76af45bb",13:"c0ae4be6",14:"4f6283b3",15:"002291f6",16:"5dfc5cc5",17:"14f17db6",18:"971e9caa",19:"889fb802",20:"d1be27fd",21:"83fd3971",22:"6bc785a8",23:"c9474e02",24:"054109cd",25:"c7f91c21"}[n]+".js"}(n);var c=new Error;o=function(t){s.onerror=s.onload=null,clearTimeout(l);var e=i[n];if(0!==e){if(e){var r=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;c.message="Loading chunk "+n+" failed.\n("+r+": "+o+")",c.name="ChunkLoadError",c.type=r,c.request=o,e[1](c)}i[n]=void 0}};var l=setTimeout((function(){o({type:"timeout",target:s})}),12e4);s.onerror=s.onload=o,document.head.appendChild(s)}return Promise.all(t)},a.m=n,a.c=r,a.d=function(n,t,e){a.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,t){if(1&t&&(n=a(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(a.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var r in n)a.d(e,r,function(t){return n[t]}.bind(null,r));return e},a.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(t,"a",t),t},a.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},a.p="/docs/",a.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=t,s=s.slice();for(var l=0;l<s.length;l++)t(s[l]);var u=c;o.push([213,0]),e()}([function(n,t){var e=function(n){return n&&n.Math==Math&&n};n.exports=e("object"==typeof globalThis&&globalThis)||e("object"==typeof window&&window)||e("object"==typeof self&&self)||e("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,t,e){var r=e(0),i=e(37).f,o=e(19),a=e(15),s=e(92),c=e(99),l=e(126);n.exports=function(n,t){var e,u,p,f,d,h=n.target,m=n.global,g=n.stat;if(e=m?r:g?r[h]||s(h,{}):(r[h]||{}).prototype)for(u in t){if(f=t[u],p=n.noTargetGet?(d=i(e,u))&&d.value:e[u],!l(m?u:h+(g?".":"#")+u,n.forced)&&void 0!==p){if(typeof f==typeof p)continue;c(f,p)}(n.sham||p&&p.sham)&&o(f,"sham",!0),a(e,u,f,n)}}},function(n,t,e){var r=e(47),i=Function.prototype,o=i.bind,a=i.call,s=r&&o.bind(a,a);n.exports=r?function(n){return n&&s(n)}:function(n){return n&&function(){return a.apply(n,arguments)}}},function(n,t){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,t,e){var r=e(0),i=e(63),o=e(10),a=e(64),s=e(93),c=e(131),l=i("wks"),u=r.Symbol,p=u&&u.for,f=c?u:u&&u.withoutSetter||a;n.exports=function(n){if(!o(l,n)||!s&&"string"!=typeof l[n]){var t="Symbol."+n;s&&o(u,n)?l[n]=u[n]:l[n]=c&&p?p(t):f(t)}return l[n]}},function(n,t){n.exports=function(n){return"function"==typeof n}},function(n,t,e){var r=e(5);n.exports=function(n){return"object"==typeof n?null!==n:r(n)}},function(n,t,e){var r=e(102),i=e(15),o=e(230);r||i(Object.prototype,"toString",o,{unsafe:!0})},function(n,t,e){var r=e(0),i=e(6),o=r.String,a=r.TypeError;n.exports=function(n){if(i(n))return n;throw a(o(n)+" is not an object")}},function(n,t,e){var r=e(3);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,t,e){var r=e(2),i=e(14),o=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,t){return o(i(n),t)}},function(n,t,e){var r=e(47),i=Function.prototype.call;n.exports=r?i.bind(i):function(){return i.apply(i,arguments)}},function(n,t,e){var r=e(0),i=e(9),o=e(133),a=e(132),s=e(8),c=e(67),l=r.TypeError,u=Object.defineProperty,p=Object.getOwnPropertyDescriptor;t.f=i?a?function(n,t,e){if(s(n),t=c(t),s(e),"function"==typeof n&&"prototype"===t&&"value"in e&&"writable"in e&&!e.writable){var r=p(n,t);r&&r.writable&&(n[t]=e.value,e={configurable:"configurable"in e?e.configurable:r.configurable,enumerable:"enumerable"in e?e.enumerable:r.enumerable,writable:!1})}return u(n,t,e)}:u:function(n,t,e){if(s(n),t=c(t),s(e),o)try{return u(n,t,e)}catch(n){}if("get"in e||"set"in e)throw l("Accessors not supported");return"value"in e&&(n[t]=e.value),n}},function(n,t,e){var r=e(0),i=e(5),o=function(n){return i(n)?n:void 0};n.exports=function(n,t){return arguments.length<2?o(r[n]):r[n]&&r[n][t]}},function(n,t,e){var r=e(0),i=e(32),o=r.Object;n.exports=function(n){return o(i(n))}},function(n,t,e){var r=e(0),i=e(5),o=e(10),a=e(19),s=e(92),c=e(71),l=e(33),u=e(88).CONFIGURABLE,p=l.get,f=l.enforce,d=String(String).split("String");(n.exports=function(n,t,e,c){var l,p=!!c&&!!c.unsafe,h=!!c&&!!c.enumerable,m=!!c&&!!c.noTargetGet,g=c&&void 0!==c.name?c.name:t;i(e)&&("Symbol("===String(g).slice(0,7)&&(g="["+String(g).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!o(e,"name")||u&&e.name!==g)&&a(e,"name",g),(l=f(e)).source||(l.source=d.join("string"==typeof g?g:""))),n!==r?(p?!m&&n[t]&&(h=!0):delete n[t],h?n[t]=e:a(n,t,e)):h?n[t]=e:s(t,e)})(Function.prototype,"toString",(function(){return i(this)&&p(this).source||c(this)}))},function(n,t,e){var r=e(46),i=e(32);n.exports=function(n){return r(i(n))}},function(n,t,e){var r=e(0),i=e(61),o=r.String;n.exports=function(n){if("Symbol"===i(n))throw TypeError("Cannot convert a Symbol value to a string");return o(n)}},function(n,t){n.exports=!1},function(n,t,e){var r=e(9),i=e(12),o=e(36);n.exports=r?function(n,t,e){return i.f(n,t,o(1,e))}:function(n,t,e){return n[t]=e,n}},function(n,t,e){"use strict";var r=e(149).charAt,i=e(17),o=e(33),a=e(136),s=o.set,c=o.getterFor("String Iterator");a(String,"String",(function(n){s(this,{type:"String Iterator",string:i(n),index:0})}),(function(){var n,t=c(this),e=t.string,i=t.index;return i>=e.length?{value:void 0,done:!0}:(n=r(e,i),t.index+=n.length,{value:n,done:!1})}))},function(n,t){var e=Array.isArray;n.exports=e},function(n,t,e){var r=e(164),i="object"==typeof self&&self&&self.Object===Object&&self,o=r||i||Function("return this")();n.exports=o},function(n,t,e){var r=e(87);n.exports=function(n){return r(n.length)}},function(n,t,e){var r=e(2),i=r({}.toString),o=r("".slice);n.exports=function(n){return o(i(n),8,-1)}},function(n,t,e){var r=e(0),i=e(150),o=e(151),a=e(124),s=e(19),c=e(4),l=c("iterator"),u=c("toStringTag"),p=a.values,f=function(n,t){if(n){if(n[l]!==p)try{s(n,l,p)}catch(t){n[l]=p}if(n[u]||s(n,u,t),i[t])for(var e in a)if(n[e]!==a[e])try{s(n,e,a[e])}catch(t){n[e]=a[e]}}};for(var d in i)f(r[d]&&r[d].prototype,d);f(o,"DOMTokenList")},function(n,t,e){var r,i=e(8),o=e(125),a=e(97),s=e(49),c=e(135),l=e(66),u=e(70),p=u("IE_PROTO"),f=function(){},d=function(n){return"<script>"+n+"<\/script>"},h=function(n){n.write(d("")),n.close();var t=n.parentWindow.Object;return n=null,t},m=function(){try{r=new ActiveXObject("htmlfile")}catch(n){}var n,t;m="undefined"!=typeof document?document.domain&&r?h(r):((t=l("iframe")).style.display="none",c.appendChild(t),t.src=String("javascript:"),(n=t.contentWindow.document).open(),n.write(d("document.F=Object")),n.close(),n.F):h(r);for(var e=a.length;e--;)delete m.prototype[a[e]];return m()};s[p]=!0,n.exports=Object.create||function(n,t){var e;return null!==n?(f.prototype=i(n),e=new f,f.prototype=null,e[p]=n):e=m(),void 0===t?e:o.f(e,t)}},function(n,t,e){var r=e(15),i=e(246),o=Error.prototype;o.toString!==i&&r(o,"toString",i)},function(n,t,e){var r=e(0),i=e(5),o=e(68),a=r.TypeError;n.exports=function(n){if(i(n))return n;throw a(o(n)+" is not a function")}},function(n,t,e){var r=e(1),i=e(0),o=e(35),a=e(242),s=i.WebAssembly,c=7!==Error("e",{cause:7}).cause,l=function(n,t){var e={};e[n]=a(n,t,c),r({global:!0,forced:c},e)},u=function(n,t){if(s&&s[n]){var e={};e[n]=a("WebAssembly."+n,t,c),r({target:"WebAssembly",stat:!0,forced:c},e)}};l("Error",(function(n){return function(t){return o(n,this,arguments)}})),l("EvalError",(function(n){return function(t){return o(n,this,arguments)}})),l("RangeError",(function(n){return function(t){return o(n,this,arguments)}})),l("ReferenceError",(function(n){return function(t){return o(n,this,arguments)}})),l("SyntaxError",(function(n){return function(t){return o(n,this,arguments)}})),l("TypeError",(function(n){return function(t){return o(n,this,arguments)}})),l("URIError",(function(n){return function(t){return o(n,this,arguments)}})),u("CompileError",(function(n){return function(t){return o(n,this,arguments)}})),u("LinkError",(function(n){return function(t){return o(n,this,arguments)}})),u("RuntimeError",(function(n){return function(t){return o(n,this,arguments)}}))},function(n,t,e){var r=e(267),i=e(270);n.exports=function(n,t){var e=i(n,t);return r(e)?e:void 0}},function(n,t,e){"use strict";var r=e(1),i=e(90);r({target:"RegExp",proto:!0,forced:/./.exec!==i},{exec:i})},function(n,t,e){var r=e(0).TypeError;n.exports=function(n){if(null==n)throw r("Can't call method on "+n);return n}},function(n,t,e){var r,i,o,a=e(216),s=e(0),c=e(2),l=e(6),u=e(19),p=e(10),f=e(91),d=e(70),h=e(49),m=s.TypeError,g=s.WeakMap;if(a||f.state){var v=f.state||(f.state=new g),_=c(v.get),x=c(v.has),y=c(v.set);r=function(n,t){if(x(v,n))throw new m("Object already initialized");return t.facade=n,y(v,n,t),t},i=function(n){return _(v,n)||{}},o=function(n){return x(v,n)}}else{var w=d("state");h[w]=!0,r=function(n,t){if(p(n,w))throw new m("Object already initialized");return t.facade=n,u(n,w,t),t},i=function(n){return p(n,w)?n[w]:{}},o=function(n){return p(n,w)}}n.exports={set:r,get:i,has:o,enforce:function(n){return o(n)?i(n):r(n,{})},getterFor:function(n){return function(t){var e;if(!l(t)||(e=i(t)).type!==n)throw m("Incompatible receiver, "+n+" required");return e}}}},function(n,t,e){var r=e(2);n.exports=r({}.isPrototypeOf)},function(n,t,e){var r=e(47),i=Function.prototype,o=i.apply,a=i.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(o):function(){return a.apply(o,arguments)})},function(n,t){n.exports=function(n,t){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:t}}},function(n,t,e){var r=e(9),i=e(11),o=e(98),a=e(36),s=e(16),c=e(67),l=e(10),u=e(133),p=Object.getOwnPropertyDescriptor;t.f=r?p:function(n,t){if(n=s(n),t=c(t),u)try{return p(n,t)}catch(n){}if(l(n,t))return a(!i(o.f,n,t),n[t])}},function(n,t){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,t,e){"use strict";var r=e(1),i=e(41).filter;r({target:"Array",proto:!0,forced:!e(76)("filter")},{filter:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,t,e){var r=e(2),i=e(28),o=e(47),a=r(r.bind);n.exports=function(n,t){return i(n),void 0===t?n:o?a(n,t):function(){return n.apply(t,arguments)}}},function(n,t,e){var r=e(40),i=e(2),o=e(46),a=e(14),s=e(23),c=e(129),l=i([].push),u=function(n){var t=1==n,e=2==n,i=3==n,u=4==n,p=6==n,f=7==n,d=5==n||p;return function(h,m,g,v){for(var _,x,y=a(h),w=o(y),b=r(m,g),k=s(w),$=0,S=v||c,z=t?S(h,k):e||f?S(h,0):void 0;k>$;$++)if((d||$ in w)&&(x=b(_=w[$],$,y),n))if(t)z[$]=x;else if(x)switch(n){case 3:return!0;case 5:return _;case 6:return $;case 2:l(z,_)}else switch(n){case 4:return!1;case 7:l(z,_)}return p?-1:i||u?u:z}};n.exports={forEach:u(0),map:u(1),filter:u(2),some:u(3),every:u(4),find:u(5),findIndex:u(6),filterReject:u(7)}},function(n,t,e){"use strict";var r=e(3);n.exports=function(n,t){var e=[][n];return!!e&&r((function(){e.call(null,t||function(){return 1},1)}))}},function(n,t,e){var r=e(12).f,i=e(10),o=e(4)("toStringTag");n.exports=function(n,t,e){n&&!e&&(n=n.prototype),n&&!i(n,o)&&r(n,o,{configurable:!0,value:t})}},function(n,t,e){var r=e(24);n.exports=Array.isArray||function(n){return"Array"==r(n)}},function(n,t,e){var r=e(53),i=e(252),o=e(253),a=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":a&&a in Object(n)?i(n):o(n)}},function(n,t,e){var r=e(0),i=e(2),o=e(3),a=e(24),s=r.Object,c=i("".split);n.exports=o((function(){return!s("z").propertyIsEnumerable(0)}))?function(n){return"String"==a(n)?c(n,""):s(n)}:s},function(n,t,e){var r=e(3);n.exports=!r((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,t,e){var r,i,o=e(0),a=e(65),s=o.process,c=o.Deno,l=s&&s.versions||c&&c.version,u=l&&l.v8;u&&(i=(r=u.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!i&&a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(i=+r[1]),n.exports=i},function(n,t){n.exports={}},function(n,t){n.exports={}},function(n,t,e){var r=e(2),i=e(8),o=e(217);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,t=!1,e={};try{(n=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(e,[]),t=e instanceof Array}catch(n){}return function(e,r){return i(e),o(r),t?n(e,r):e.__proto__=r,e}}():void 0)},function(n,t,e){"use strict";var r=e(67),i=e(12),o=e(36);n.exports=function(n,t,e){var a=r(t);a in n?i.f(n,a,o(0,e)):n[a]=e}},function(n,t,e){var r=e(22).Symbol;n.exports=r},function(n,t,e){"use strict";e.d(t,"a",(function(){return o}));e(122);var r=e(55);e(62),e(77),e(7),e(103),e(20),e(25),e(160);var i=e(83);e(29),e(27);function o(n){return function(n){if(Array.isArray(n))return Object(r.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Object(i.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,t,e){"use strict";function r(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}e.d(t,"a",(function(){return r}))},function(n,t,e){"use strict";function r(n,t,e,r,i,o,a,s){var c,l="function"==typeof n?n.options:n;if(t&&(l.render=t,l.staticRenderFns=e,l._compiled=!0),r&&(l.functional=!0),o&&(l._scopeId="data-v-"+o),a?(c=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),i&&i.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(a)},l._ssrRegister=c):i&&(c=s?function(){i.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:i),c)if(l.functional){l._injectStyles=c;var u=l.render;l.render=function(n,t){return c.call(t),u(n,t)}}else{var p=l.beforeCreate;l.beforeCreate=p?[].concat(p,c):[c]}return{exports:n,options:l}}e.d(t,"a",(function(){return r}))},function(n,t,e){var r=e(28);n.exports=function(n,t){var e=n[t];return null==e?void 0:r(e)}},function(n,t){var e=Math.ceil,r=Math.floor;n.exports=function(n){var t=+n;return t!=t||0===t?0:(t>0?r:e)(t)}},function(n,t,e){"use strict";var r=e(1),i=e(0),o=e(44),a=e(72),s=e(6),c=e(96),l=e(23),u=e(16),p=e(52),f=e(4),d=e(76),h=e(73),m=d("slice"),g=f("species"),v=i.Array,_=Math.max;r({target:"Array",proto:!0,forced:!m},{slice:function(n,t){var e,r,i,f=u(this),d=l(f),m=c(n,d),x=c(void 0===t?d:t,d);if(o(f)&&(e=f.constructor,(a(e)&&(e===v||o(e.prototype))||s(e)&&null===(e=e[g]))&&(e=void 0),e===v||void 0===e))return h(f,m,x);for(r=new(void 0===e?v:e)(_(x-m,0)),i=0;m<x;m++,i++)m in f&&p(r,i,f[m]);return r.length=i,r}})},function(n,t,e){var r=e(134),i=e(97).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(n){return r(n,i)}},function(n,t,e){var r=e(0),i=e(102),o=e(5),a=e(24),s=e(4)("toStringTag"),c=r.Object,l="Arguments"==a(function(){return arguments}());n.exports=i?a:function(n){var t,e,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(e=function(n,t){try{return n[t]}catch(n){}}(t=c(n),s))?e:l?a(t):"Object"==(r=a(t))&&o(t.callee)?"Arguments":r}},function(n,t,e){"use strict";var r=e(1),i=e(0),o=e(13),a=e(35),s=e(11),c=e(2),l=e(18),u=e(9),p=e(93),f=e(3),d=e(10),h=e(44),m=e(5),g=e(6),v=e(34),_=e(94),x=e(8),y=e(14),w=e(16),b=e(67),k=e(17),$=e(36),S=e(26),z=e(69),j=e(60),T=e(157),C=e(100),E=e(37),P=e(12),A=e(125),I=e(98),O=e(73),N=e(15),q=e(63),L=e(70),R=e(49),D=e(64),M=e(4),U=e(158),F=e(159),B=e(43),H=e(33),G=e(41).forEach,W=L("hidden"),V=M("toPrimitive"),K=H.set,Q=H.getterFor("Symbol"),Y=Object.prototype,J=i.Symbol,X=J&&J.prototype,Z=i.TypeError,nn=i.QObject,tn=o("JSON","stringify"),en=E.f,rn=P.f,on=T.f,an=I.f,sn=c([].push),cn=q("symbols"),ln=q("op-symbols"),un=q("string-to-symbol-registry"),pn=q("symbol-to-string-registry"),fn=q("wks"),dn=!nn||!nn.prototype||!nn.prototype.findChild,hn=u&&f((function(){return 7!=S(rn({},"a",{get:function(){return rn(this,"a",{value:7}).a}})).a}))?function(n,t,e){var r=en(Y,t);r&&delete Y[t],rn(n,t,e),r&&n!==Y&&rn(Y,t,r)}:rn,mn=function(n,t){var e=cn[n]=S(X);return K(e,{type:"Symbol",tag:n,description:t}),u||(e.description=t),e},gn=function(n,t,e){n===Y&&gn(ln,t,e),x(n);var r=b(t);return x(e),d(cn,r)?(e.enumerable?(d(n,W)&&n[W][r]&&(n[W][r]=!1),e=S(e,{enumerable:$(0,!1)})):(d(n,W)||rn(n,W,$(1,{})),n[W][r]=!0),hn(n,r,e)):rn(n,r,e)},vn=function(n,t){x(n);var e=w(t),r=z(e).concat(wn(e));return G(r,(function(t){u&&!s(_n,e,t)||gn(n,t,e[t])})),n},_n=function(n){var t=b(n),e=s(an,this,t);return!(this===Y&&d(cn,t)&&!d(ln,t))&&(!(e||!d(this,t)||!d(cn,t)||d(this,W)&&this[W][t])||e)},xn=function(n,t){var e=w(n),r=b(t);if(e!==Y||!d(cn,r)||d(ln,r)){var i=en(e,r);return!i||!d(cn,r)||d(e,W)&&e[W][r]||(i.enumerable=!0),i}},yn=function(n){var t=on(w(n)),e=[];return G(t,(function(n){d(cn,n)||d(R,n)||sn(e,n)})),e},wn=function(n){var t=n===Y,e=on(t?ln:w(n)),r=[];return G(e,(function(n){!d(cn,n)||t&&!d(Y,n)||sn(r,cn[n])})),r};(p||(N(X=(J=function(){if(v(X,this))throw Z("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?k(arguments[0]):void 0,t=D(n),e=function(n){this===Y&&s(e,ln,n),d(this,W)&&d(this[W],t)&&(this[W][t]=!1),hn(this,t,$(1,n))};return u&&dn&&hn(Y,t,{configurable:!0,set:e}),mn(t,n)}).prototype,"toString",(function(){return Q(this).tag})),N(J,"withoutSetter",(function(n){return mn(D(n),n)})),I.f=_n,P.f=gn,A.f=vn,E.f=xn,j.f=T.f=yn,C.f=wn,U.f=function(n){return mn(M(n),n)},u&&(rn(X,"description",{configurable:!0,get:function(){return Q(this).description}}),l||N(Y,"propertyIsEnumerable",_n,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!p,sham:!p},{Symbol:J}),G(z(fn),(function(n){F(n)})),r({target:"Symbol",stat:!0,forced:!p},{for:function(n){var t=k(n);if(d(un,t))return un[t];var e=J(t);return un[t]=e,pn[e]=t,e},keyFor:function(n){if(!_(n))throw Z(n+" is not a symbol");if(d(pn,n))return pn[n]},useSetter:function(){dn=!0},useSimple:function(){dn=!1}}),r({target:"Object",stat:!0,forced:!p,sham:!u},{create:function(n,t){return void 0===t?S(n):vn(S(n),t)},defineProperty:gn,defineProperties:vn,getOwnPropertyDescriptor:xn}),r({target:"Object",stat:!0,forced:!p},{getOwnPropertyNames:yn,getOwnPropertySymbols:wn}),r({target:"Object",stat:!0,forced:f((function(){C.f(1)}))},{getOwnPropertySymbols:function(n){return C.f(y(n))}}),tn)&&r({target:"JSON",stat:!0,forced:!p||f((function(){var n=J();return"[null]"!=tn([n])||"{}"!=tn({a:n})||"{}"!=tn(Object(n))}))},{stringify:function(n,t,e){var r=O(arguments),i=t;if((g(t)||void 0!==n)&&!_(n))return h(t)||(t=function(n,t){if(m(i)&&(t=s(i,this,n,t)),!_(t))return t}),r[1]=t,a(tn,null,r)}});if(!X[V]){var bn=X.valueOf;N(X,V,(function(n){return s(bn,this)}))}B(J,"Symbol"),R[W]=!0},function(n,t,e){var r=e(18),i=e(91);(n.exports=function(n,t){return i[n]||(i[n]=void 0!==t?t:{})})("versions",[]).push({version:"3.21.1",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,t,e){var r=e(2),i=0,o=Math.random(),a=r(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+a(++i+o,36)}},function(n,t,e){var r=e(13);n.exports=r("navigator","userAgent")||""},function(n,t,e){var r=e(0),i=e(6),o=r.document,a=i(o)&&i(o.createElement);n.exports=function(n){return a?o.createElement(n):{}}},function(n,t,e){var r=e(214),i=e(94);n.exports=function(n){var t=r(n,"string");return i(t)?t:t+""}},function(n,t,e){var r=e(0).String;n.exports=function(n){try{return r(n)}catch(n){return"Object"}}},function(n,t,e){var r=e(134),i=e(97);n.exports=Object.keys||function(n){return r(n,i)}},function(n,t,e){var r=e(63),i=e(64),o=r("keys");n.exports=function(n){return o[n]||(o[n]=i(n))}},function(n,t,e){var r=e(2),i=e(5),o=e(91),a=r(Function.toString);i(o.inspectSource)||(o.inspectSource=function(n){return a(n)}),n.exports=o.inspectSource},function(n,t,e){var r=e(2),i=e(3),o=e(5),a=e(61),s=e(13),c=e(71),l=function(){},u=[],p=s("Reflect","construct"),f=/^\s*(?:class|function)\b/,d=r(f.exec),h=!f.exec(l),m=function(n){if(!o(n))return!1;try{return p(l,u,n),!0}catch(n){return!1}},g=function(n){if(!o(n))return!1;switch(a(n)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return h||!!d(f,c(n))}catch(n){return!0}};g.sham=!0,n.exports=!p||i((function(){var n;return m(m.call)||!m(Object)||!m((function(){n=!0}))||n}))?g:m},function(n,t,e){var r=e(2);n.exports=r([].slice)},function(n,t,e){var r=e(24),i=e(0);n.exports="process"==r(i.process)},function(n,t,e){"use strict";e.d(t,"a",(function(){return i}));e(7);function r(n,t,e,r,i,o,a){try{var s=n[o](a),c=s.value}catch(n){return void e(n)}s.done?t(c):Promise.resolve(c).then(r,i)}function i(n){return function(){var t=this,e=arguments;return new Promise((function(i,o){var a=n.apply(t,e);function s(n){r(a,i,o,s,c,"next",n)}function c(n){r(a,i,o,s,c,"throw",n)}s(void 0)}))}}},function(n,t,e){var r=e(3),i=e(4),o=e(48),a=i("species");n.exports=function(n){return o>=51||!r((function(){var t=[];return(t.constructor={})[a]=function(){return{foo:1}},1!==t[n](Boolean).foo}))}},function(n,t,e){"use strict";var r=e(1),i=e(9),o=e(0),a=e(2),s=e(10),c=e(5),l=e(34),u=e(17),p=e(12).f,f=e(99),d=o.Symbol,h=d&&d.prototype;if(i&&c(d)&&(!("description"in h)||void 0!==d().description)){var m={},g=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:u(arguments[0]),t=l(h,this)?new d(n):void 0===n?d():d(n);return""===n&&(m[t]=!0),t};f(g,d),g.prototype=h,h.constructor=g;var v="Symbol(test)"==String(d("test")),_=a(h.toString),x=a(h.valueOf),y=/^Symbol\((.*)\)[^)]+$/,w=a("".replace),b=a("".slice);p(h,"description",{configurable:!0,get:function(){var n=x(this),t=_(n);if(s(m,n))return"";var e=v?b(t,7,-1):w(t,y,"$1");return""===e?void 0:e}}),r({global:!0,forced:!0},{Symbol:g})}},function(n,t,e){var r=e(257),i=e(258),o=e(259),a=e(260),s=e(261);function c(n){var t=-1,e=null==n?0:n.length;for(this.clear();++t<e;){var r=n[t];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=a,c.prototype.set=s,n.exports=c},function(n,t,e){var r=e(166);n.exports=function(n,t){for(var e=n.length;e--;)if(r(n[e][0],t))return e;return-1}},function(n,t,e){var r=e(30)(Object,"create");n.exports=r},function(n,t,e){var r=e(279);n.exports=function(n,t){var e=n.__data__;return r(t)?e["string"==typeof t?"string":"hash"]:e.map}},function(n,t,e){var r=e(112);n.exports=function(n){if("string"==typeof n||r(n))return n;var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},function(n,t,e){"use strict";e.d(t,"a",(function(){return i}));e(59),e(7),e(104),e(160),e(20),e(31),e(115);var r=e(55);function i(n,t){if(n){if("string"==typeof n)return Object(r.a)(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?Object(r.a)(n,t):void 0}}},function(n,t,e){var r,i;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(i="function"==typeof(r=function(){var n,t,e={version:"0.2.0"},r=e.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function i(n,t,e){return n<t?t:n>e?e:n}function o(n){return 100*(-1+n)}e.configure=function(n){var t,e;for(t in n)void 0!==(e=n[t])&&n.hasOwnProperty(t)&&(r[t]=e);return this},e.status=null,e.set=function(n){var t=e.isStarted();n=i(n,r.minimum,1),e.status=1===n?null:n;var c=e.render(!t),l=c.querySelector(r.barSelector),u=r.speed,p=r.easing;return c.offsetWidth,a((function(t){""===r.positionUsing&&(r.positionUsing=e.getPositioningCSS()),s(l,function(n,t,e){var i;return(i="translate3d"===r.positionUsing?{transform:"translate3d("+o(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+o(n)+"%,0)"}:{"margin-left":o(n)+"%"}).transition="all "+t+"ms "+e,i}(n,u,p)),1===n?(s(c,{transition:"none",opacity:1}),c.offsetWidth,setTimeout((function(){s(c,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){e.remove(),t()}),u)}),u)):setTimeout(t,u)})),this},e.isStarted=function(){return"number"==typeof e.status},e.start=function(){e.status||e.set(0);var n=function(){setTimeout((function(){e.status&&(e.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},e.done=function(n){return n||e.status?e.inc(.3+.5*Math.random()).set(1):this},e.inc=function(n){var t=e.status;return t?("number"!=typeof n&&(n=(1-t)*i(Math.random()*t,.1,.95)),t=i(t+n,0,.994),e.set(t)):e.start()},e.trickle=function(){return e.inc(Math.random()*r.trickleRate)},n=0,t=0,e.promise=function(r){return r&&"resolved"!==r.state()?(0===t&&e.start(),n++,t++,r.always((function(){0==--t?(n=0,e.done()):e.set((n-t)/n)})),this):this},e.render=function(n){if(e.isRendered())return document.getElementById("nprogress");l(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=r.template;var i,a=t.querySelector(r.barSelector),c=n?"-100":o(e.status||0),u=document.querySelector(r.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+c+"%,0,0)"}),r.showSpinner||(i=t.querySelector(r.spinnerSelector))&&f(i),u!=document.body&&l(u,"nprogress-custom-parent"),u.appendChild(t),t},e.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&f(n)},e.isRendered=function(){return!!document.getElementById("nprogress")},e.getPositioningCSS=function(){var n=document.body.style,t="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return t+"Perspective"in n?"translate3d":t+"Transform"in n?"translate":"margin"};var a=function(){var n=[];function t(){var e=n.shift();e&&e(t)}return function(e){n.push(e),1==n.length&&t()}}(),s=function(){var n=["Webkit","O","Moz","ms"],t={};function e(e){return e=e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,t){return t.toUpperCase()})),t[e]||(t[e]=function(t){var e=document.body.style;if(t in e)return t;for(var r,i=n.length,o=t.charAt(0).toUpperCase()+t.slice(1);i--;)if((r=n[i]+o)in e)return r;return t}(e))}function r(n,t,r){t=e(t),n.style[t]=r}return function(n,t){var e,i,o=arguments;if(2==o.length)for(e in t)void 0!==(i=t[e])&&t.hasOwnProperty(e)&&r(n,e,i);else r(n,o[1],o[2])}}();function c(n,t){return("string"==typeof n?n:p(n)).indexOf(" "+t+" ")>=0}function l(n,t){var e=p(n),r=e+t;c(e,t)||(n.className=r.substring(1))}function u(n,t){var e,r=p(n);c(n,t)&&(e=r.replace(" "+t+" "," "),n.className=e.substring(1,e.length-1))}function p(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function f(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return e})?r.call(t,e,t,n):r)||(n.exports=i)},function(n,t,e){"use strict";var r=e(1),i=e(41).map;r({target:"Array",proto:!0,forced:!e(76)("map")},{map:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,t,e){"use strict";var r=e(35),i=e(11),o=e(2),a=e(192),s=e(3),c=e(8),l=e(5),u=e(58),p=e(87),f=e(17),d=e(32),h=e(199),m=e(57),g=e(247),v=e(193),_=e(4)("replace"),x=Math.max,y=Math.min,w=o([].concat),b=o([].push),k=o("".indexOf),$=o("".slice),S="$0"==="a".replace(/./,"$0"),z=!!/./[_]&&""===/./[_]("a","$0");a("replace",(function(n,t,e){var o=z?"$":"$0";return[function(n,e){var r=d(this),o=null==n?void 0:m(n,_);return o?i(o,n,r,e):i(t,f(r),n,e)},function(n,i){var a=c(this),s=f(n);if("string"==typeof i&&-1===k(i,o)&&-1===k(i,"$<")){var d=e(t,a,s,i);if(d.done)return d.value}var m=l(i);m||(i=f(i));var _=a.global;if(_){var S=a.unicode;a.lastIndex=0}for(var z=[];;){var j=v(a,s);if(null===j)break;if(b(z,j),!_)break;""===f(j[0])&&(a.lastIndex=h(s,p(a.lastIndex),S))}for(var T,C="",E=0,P=0;P<z.length;P++){for(var A=f((j=z[P])[0]),I=x(y(u(j.index),s.length),0),O=[],N=1;N<j.length;N++)b(O,void 0===(T=j[N])?T:String(T));var q=j.groups;if(m){var L=w([A],O,I,s);void 0!==q&&b(L,q);var R=f(r(i,void 0,L))}else R=g(A,s,I,O,q,i);I>=E&&(C+=$(s,E,I)+R,E=I+A.length)}return C+$(s,E)}]}),!!s((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")}))||!S||z)},function(n,t,e){var r=e(58),i=Math.min;n.exports=function(n){return n>0?i(r(n),9007199254740991):0}},function(n,t,e){var r=e(9),i=e(10),o=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,s=i(o,"name"),c=s&&"something"===function(){}.name,l=s&&(!r||r&&a(o,"name").configurable);n.exports={EXISTS:s,PROPER:c,CONFIGURABLE:l}},function(n,t,e){var r=e(61),i=e(57),o=e(50),a=e(4)("iterator");n.exports=function(n){if(null!=n)return i(n,a)||i(n,"@@iterator")||o[r(n)]}},function(n,t,e){"use strict";var r,i,o=e(11),a=e(2),s=e(17),c=e(197),l=e(191),u=e(63),p=e(26),f=e(33).get,d=e(198),h=e(208),m=u("native-string-replace",String.prototype.replace),g=RegExp.prototype.exec,v=g,_=a("".charAt),x=a("".indexOf),y=a("".replace),w=a("".slice),b=(i=/b*/g,o(g,r=/a/,"a"),o(g,i,"a"),0!==r.lastIndex||0!==i.lastIndex),k=l.BROKEN_CARET,$=void 0!==/()??/.exec("")[1];(b||$||k||d||h)&&(v=function(n){var t,e,r,i,a,l,u,d=this,h=f(d),S=s(n),z=h.raw;if(z)return z.lastIndex=d.lastIndex,t=o(v,z,S),d.lastIndex=z.lastIndex,t;var j=h.groups,T=k&&d.sticky,C=o(c,d),E=d.source,P=0,A=S;if(T&&(C=y(C,"y",""),-1===x(C,"g")&&(C+="g"),A=w(S,d.lastIndex),d.lastIndex>0&&(!d.multiline||d.multiline&&"\n"!==_(S,d.lastIndex-1))&&(E="(?: "+E+")",A=" "+A,P++),e=new RegExp("^(?:"+E+")",C)),$&&(e=new RegExp("^"+E+"$(?!\\s)",C)),b&&(r=d.lastIndex),i=o(g,T?e:d,A),T?i?(i.input=w(i.input,P),i[0]=w(i[0],P),i.index=d.lastIndex,d.lastIndex+=i[0].length):d.lastIndex=0:b&&i&&(d.lastIndex=d.global?i.index+i[0].length:r),$&&i&&i.length>1&&o(m,i[0],e,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(i[a]=void 0)})),i&&j)for(i.groups=l=p(null),a=0;a<j.length;a++)l[(u=j[a])[0]]=i[u[1]];return i}),n.exports=v},function(n,t,e){var r=e(0),i=e(92),o=r["__core-js_shared__"]||i("__core-js_shared__",{});n.exports=o},function(n,t,e){var r=e(0),i=Object.defineProperty;n.exports=function(n,t){try{i(r,n,{value:t,configurable:!0,writable:!0})}catch(e){r[n]=t}return t}},function(n,t,e){var r=e(48),i=e(3);n.exports=!!Object.getOwnPropertySymbols&&!i((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,t,e){var r=e(0),i=e(13),o=e(5),a=e(34),s=e(131),c=r.Object;n.exports=s?function(n){return"symbol"==typeof n}:function(n){var t=i("Symbol");return o(t)&&a(t.prototype,c(n))}},function(n,t,e){var r=e(16),i=e(96),o=e(23),a=function(n){return function(t,e,a){var s,c=r(t),l=o(c),u=i(a,l);if(n&&e!=e){for(;l>u;)if((s=c[u++])!=s)return!0}else for(;l>u;u++)if((n||u in c)&&c[u]===e)return n||u||0;return!n&&-1}};n.exports={includes:a(!0),indexOf:a(!1)}},function(n,t,e){var r=e(58),i=Math.max,o=Math.min;n.exports=function(n,t){var e=r(n);return e<0?i(e+t,0):o(e,t)}},function(n,t){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,t,e){"use strict";var r={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,o=i&&!r.call({1:2},1);t.f=o?function(n){var t=i(this,n);return!!t&&t.enumerable}:r},function(n,t,e){var r=e(10),i=e(137),o=e(37),a=e(12);n.exports=function(n,t,e){for(var s=i(t),c=a.f,l=o.f,u=0;u<s.length;u++){var p=s[u];r(n,p)||e&&r(e,p)||c(n,p,l(t,p))}}},function(n,t){t.f=Object.getOwnPropertySymbols},function(n,t,e){var r=e(0),i=e(10),o=e(5),a=e(14),s=e(70),c=e(139),l=s("IE_PROTO"),u=r.Object,p=u.prototype;n.exports=c?u.getPrototypeOf:function(n){var t=a(n);if(i(t,l))return t[l];var e=t.constructor;return o(e)&&t instanceof e?e.prototype:t instanceof u?p:null}},function(n,t,e){var r={};r[e(4)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,t,e){e(159)("iterator")},function(n,t,e){var r=e(9),i=e(88).EXISTS,o=e(2),a=e(12).f,s=Function.prototype,c=o(s.toString),l=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,u=o(l.exec);r&&!i&&a(s,"name",{configurable:!0,get:function(){try{return u(l,c(this))[1]}catch(n){return""}}})},function(n,t,e){var r=e(251),i=e(38),o=Object.prototype,a=o.hasOwnProperty,s=o.propertyIsEnumerable,c=r(function(){return arguments}())?r:function(n){return i(n)&&a.call(n,"callee")&&!s.call(n,"callee")};n.exports=c},function(n,t,e){var r=e(30)(e(22),"Map");n.exports=r},function(n,t){n.exports=function(n){var t=typeof n;return null!=n&&("object"==t||"function"==t)}},function(n,t,e){var r=e(271),i=e(278),o=e(280),a=e(281),s=e(282);function c(n){var t=-1,e=null==n?0:n.length;for(this.clear();++t<e;){var r=n[t];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=a,c.prototype.set=s,n.exports=c},function(n,t){n.exports=function(n){var t=-1,e=Array(n.size);return n.forEach((function(n){e[++t]=n})),e}},function(n,t){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,t,e){var r=e(21),i=e(112),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;n.exports=function(n,t){if(r(n))return!1;var e=typeof n;return!("number"!=e&&"symbol"!=e&&"boolean"!=e&&null!=n&&!i(n))||(a.test(n)||!o.test(n)||null!=t&&n in Object(t))}},function(n,t,e){var r=e(45),i=e(38);n.exports=function(n){return"symbol"==typeof n||i(n)&&"[object Symbol]"==r(n)}},function(n,t){n.exports=function(n){return n}},function(n,t,e){"use strict";e.d(t,"a",(function(){return i}));e(122);e(62),e(77),e(7),e(103),e(20),e(25);var r=e(83);e(29),e(27);function i(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var r,i,o=[],a=!0,s=!1;try{for(e=e.call(n);!(a=(r=e.next()).done)&&(o.push(r.value),!t||o.length!==t);a=!0);}catch(n){s=!0,i=n}finally{try{a||null==e.return||e.return()}finally{if(s)throw i}}return o}}(n,t)||Object(r.a)(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,t,e){"use strict";e(31);var r,i,o=e(1),a=e(0),s=e(11),c=e(2),l=e(5),u=e(6),p=(r=!1,(i=/[ac]/).exec=function(){return r=!0,/./.exec.apply(this,arguments)},!0===i.test("abc")&&r),f=a.Error,d=c(/./.test);o({target:"RegExp",proto:!0,forced:!p},{test:function(n){var t=this.exec;if(!l(t))return d(this,n);var e=s(t,this,n);if(null!==e&&!u(e))throw new f("RegExp exec method returned something other than an Object or null");return!!e}})},function(n,t,e){"use strict";var r=e(1),i=e(41).some;r({target:"Array",proto:!0,forced:!e(42)("some")},{some:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,t,e){var r=e(1),i=e(14),o=e(69);r({target:"Object",stat:!0,forced:e(3)((function(){o(1)}))},{keys:function(n){return o(i(n))}})},function(n,t,e){"use strict";var r=e(1),i=e(155);r({target:"Array",proto:!0,forced:[].forEach!=i},{forEach:i})},function(n,t,e){var r=e(0),i=e(150),o=e(151),a=e(155),s=e(19),c=function(n){if(n&&n.forEach!==a)try{s(n,"forEach",a)}catch(t){n.forEach=a}};for(var l in i)i[l]&&c(r[l]&&r[l].prototype);c(o)},function(n,t,e){var r=e(4),i=e(26),o=e(12),a=r("unscopables"),s=Array.prototype;null==s[a]&&o.f(s,a,{configurable:!0,value:i(null)}),n.exports=function(n){s[a][n]=!0}},function(n,t,e){var r=function(n){"use strict";var t=Object.prototype,e=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},i=r.iterator||"@@iterator",o=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function s(n,t,e){return Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}),n[t]}try{s({},"")}catch(n){s=function(n,t,e){return n[t]=e}}function c(n,t,e,r){var i=t&&t.prototype instanceof p?t:p,o=Object.create(i.prototype),a=new k(r||[]);return o._invoke=function(n,t,e){var r="suspendedStart";return function(i,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===i)throw o;return S()}for(e.method=i,e.arg=o;;){var a=e.delegate;if(a){var s=y(a,e);if(s){if(s===u)continue;return s}}if("next"===e.method)e.sent=e._sent=e.arg;else if("throw"===e.method){if("suspendedStart"===r)throw r="completed",e.arg;e.dispatchException(e.arg)}else"return"===e.method&&e.abrupt("return",e.arg);r="executing";var c=l(n,t,e);if("normal"===c.type){if(r=e.done?"completed":"suspendedYield",c.arg===u)continue;return{value:c.arg,done:e.done}}"throw"===c.type&&(r="completed",e.method="throw",e.arg=c.arg)}}}(n,e,a),o}function l(n,t,e){try{return{type:"normal",arg:n.call(t,e)}}catch(n){return{type:"throw",arg:n}}}n.wrap=c;var u={};function p(){}function f(){}function d(){}var h={};s(h,i,(function(){return this}));var m=Object.getPrototypeOf,g=m&&m(m($([])));g&&g!==t&&e.call(g,i)&&(h=g);var v=d.prototype=p.prototype=Object.create(h);function _(n){["next","throw","return"].forEach((function(t){s(n,t,(function(n){return this._invoke(t,n)}))}))}function x(n,t){var r;this._invoke=function(i,o){function a(){return new t((function(r,a){!function r(i,o,a,s){var c=l(n[i],n,o);if("throw"!==c.type){var u=c.arg,p=u.value;return p&&"object"==typeof p&&e.call(p,"__await")?t.resolve(p.__await).then((function(n){r("next",n,a,s)}),(function(n){r("throw",n,a,s)})):t.resolve(p).then((function(n){u.value=n,a(u)}),(function(n){return r("throw",n,a,s)}))}s(c.arg)}(i,o,r,a)}))}return r=r?r.then(a,a):a()}}function y(n,t){var e=n.iterator[t.method];if(void 0===e){if(t.delegate=null,"throw"===t.method){if(n.iterator.return&&(t.method="return",t.arg=void 0,y(n,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=l(e,n.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,u;var i=r.arg;return i?i.done?(t[n.resultName]=i.value,t.next=n.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function w(n){var t={tryLoc:n[0]};1 in n&&(t.catchLoc=n[1]),2 in n&&(t.finallyLoc=n[2],t.afterLoc=n[3]),this.tryEntries.push(t)}function b(n){var t=n.completion||{};t.type="normal",delete t.arg,n.completion=t}function k(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(w,this),this.reset(!0)}function $(n){if(n){var t=n[i];if(t)return t.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,o=function t(){for(;++r<n.length;)if(e.call(n,r))return t.value=n[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:S}}function S(){return{value:void 0,done:!0}}return f.prototype=d,s(v,"constructor",d),s(d,"constructor",f),f.displayName=s(d,a,"GeneratorFunction"),n.isGeneratorFunction=function(n){var t="function"==typeof n&&n.constructor;return!!t&&(t===f||"GeneratorFunction"===(t.displayName||t.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,d):(n.__proto__=d,s(n,a,"GeneratorFunction")),n.prototype=Object.create(v),n},n.awrap=function(n){return{__await:n}},_(x.prototype),s(x.prototype,o,(function(){return this})),n.AsyncIterator=x,n.async=function(t,e,r,i,o){void 0===o&&(o=Promise);var a=new x(c(t,e,r,i),o);return n.isGeneratorFunction(e)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},_(v),s(v,a,"Generator"),s(v,i,(function(){return this})),s(v,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var t=[];for(var e in n)t.push(e);return t.reverse(),function e(){for(;t.length;){var r=t.pop();if(r in n)return e.value=r,e.done=!1,e}return e.done=!0,e}},n.values=$,k.prototype={constructor:k,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(b),!n)for(var t in this)"t"===t.charAt(0)&&e.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var t=this;function r(e,r){return a.type="throw",a.arg=n,t.next=e,r&&(t.method="next",t.arg=void 0),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],a=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var s=e.call(o,"catchLoc"),c=e.call(o,"finallyLoc");if(s&&c){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(n,t){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&e.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=n,a.arg=t,o?(this.method="next",this.next=o.finallyLoc,u):this.complete(a)},complete:function(n,t){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&t&&(this.next=t),u},finish:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var e=this.tryEntries[t];if(e.finallyLoc===n)return this.complete(e.completion,e.afterLoc),b(e),u}},catch:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var e=this.tryEntries[t];if(e.tryLoc===n){var r=e.completion;if("throw"===r.type){var i=r.arg;b(e)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(n,t,e){return this.delegate={iterator:$(n),resultName:t,nextLoc:e},"next"===this.method&&(this.arg=void 0),u}},n}(n.exports);try{regeneratorRuntime=r}catch(n){"object"==typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}},function(n,t,e){e(1)({target:"Array",stat:!0},{isArray:e(44)})},function(n,t,e){var r=e(1),i=e(9),o=e(12).f;r({target:"Object",stat:!0,forced:Object.defineProperty!==o,sham:!i},{defineProperty:o})},function(n,t,e){"use strict";var r=e(16),i=e(120),o=e(50),a=e(33),s=e(12).f,c=e(136),l=e(18),u=e(9),p=a.set,f=a.getterFor("Array Iterator");n.exports=c(Array,"Array",(function(n,t){p(this,{type:"Array Iterator",target:r(n),index:0,kind:t})}),(function(){var n=f(this),t=n.target,e=n.kind,r=n.index++;return!t||r>=t.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==e?{value:r,done:!1}:"values"==e?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values");var d=o.Arguments=o.Array;if(i("keys"),i("values"),i("entries"),!l&&u&&"values"!==d.name)try{s(d,"name",{value:"values"})}catch(n){}},function(n,t,e){var r=e(9),i=e(132),o=e(12),a=e(8),s=e(16),c=e(69);t.f=r&&!i?Object.defineProperties:function(n,t){a(n);for(var e,r=s(t),i=c(t),l=i.length,u=0;l>u;)o.f(n,e=i[u++],r[e]);return n}},function(n,t,e){var r=e(3),i=e(5),o=/#|\.prototype\./,a=function(n,t){var e=c[s(n)];return e==u||e!=l&&(i(t)?r(t):!!t)},s=a.normalize=function(n){return String(n).replace(o,".").toLowerCase()},c=a.data={},l=a.NATIVE="N",u=a.POLYFILL="P";n.exports=a},function(n,t,e){var r=e(0),i=e(11),o=e(28),a=e(8),s=e(68),c=e(89),l=r.TypeError;n.exports=function(n,t){var e=arguments.length<2?c(n):t;if(o(e))return a(i(e,n));throw l(s(n)+" is not iterable")}},function(n,t,e){var r=e(8),i=e(144),o=e(4)("species");n.exports=function(n,t){var e,a=r(n).constructor;return void 0===a||null==(e=r(a)[o])?t:i(e)}},function(n,t,e){var r=e(231);n.exports=function(n,t){return new(r(n))(0===t?0:t)}},function(n,t){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,t,e){var r=e(93);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,t,e){var r=e(9),i=e(3);n.exports=r&&i((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,t,e){var r=e(9),i=e(3),o=e(66);n.exports=!r&&!i((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(n,t,e){var r=e(2),i=e(10),o=e(16),a=e(95).indexOf,s=e(49),c=r([].push);n.exports=function(n,t){var e,r=o(n),l=0,u=[];for(e in r)!i(s,e)&&i(r,e)&&c(u,e);for(;t.length>l;)i(r,e=t[l++])&&(~a(u,e)||c(u,e));return u}},function(n,t,e){var r=e(13);n.exports=r("document","documentElement")},function(n,t,e){"use strict";var r=e(1),i=e(11),o=e(18),a=e(88),s=e(5),c=e(202),l=e(101),u=e(51),p=e(43),f=e(19),d=e(15),h=e(4),m=e(50),g=e(138),v=a.PROPER,_=a.CONFIGURABLE,x=g.IteratorPrototype,y=g.BUGGY_SAFARI_ITERATORS,w=h("iterator"),b=function(){return this};n.exports=function(n,t,e,a,h,g,k){c(e,t,a);var $,S,z,j=function(n){if(n===h&&A)return A;if(!y&&n in E)return E[n];switch(n){case"keys":case"values":case"entries":return function(){return new e(this,n)}}return function(){return new e(this)}},T=t+" Iterator",C=!1,E=n.prototype,P=E[w]||E["@@iterator"]||h&&E[h],A=!y&&P||j(h),I="Array"==t&&E.entries||P;if(I&&($=l(I.call(new n)))!==Object.prototype&&$.next&&(o||l($)===x||(u?u($,x):s($[w])||d($,w,b)),p($,T,!0,!0),o&&(m[T]=b)),v&&"values"==h&&P&&"values"!==P.name&&(!o&&_?f(E,"name","values"):(C=!0,A=function(){return i(P,this)})),h)if(S={values:j("values"),keys:g?A:j("keys"),entries:j("entries")},k)for(z in S)(y||C||!(z in E))&&d(E,z,S[z]);else r({target:t,proto:!0,forced:y||C},S);return o&&!k||E[w]===A||d(E,w,A,{name:h}),m[t]=A,S}},function(n,t,e){var r=e(13),i=e(2),o=e(60),a=e(100),s=e(8),c=i([].concat);n.exports=r("Reflect","ownKeys")||function(n){var t=o.f(s(n)),e=a.f;return e?c(t,e(n)):t}},function(n,t,e){"use strict";var r,i,o,a=e(3),s=e(5),c=e(26),l=e(101),u=e(15),p=e(4),f=e(18),d=p("iterator"),h=!1;[].keys&&("next"in(o=[].keys())?(i=l(l(o)))!==Object.prototype&&(r=i):h=!0),null==r||a((function(){var n={};return r[d].call(n)!==n}))?r={}:f&&(r=c(r)),s(r[d])||u(r,d,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:h}},function(n,t,e){var r=e(3);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,t,e){var r=e(0);n.exports=r.Promise},function(n,t,e){var r=e(4),i=e(50),o=r("iterator"),a=Array.prototype;n.exports=function(n){return void 0!==n&&(i.Array===n||a[o]===n)}},function(n,t,e){var r=e(11),i=e(8),o=e(57);n.exports=function(n,t,e){var a,s;i(n);try{if(!(a=o(n,"return"))){if("throw"===t)throw e;return e}a=r(a,n)}catch(n){s=!0,a=n}if("throw"===t)throw e;if(s)throw a;return i(a),e}},function(n,t,e){var r=e(4)("iterator"),i=!1;try{var o=0,a={next:function(){return{done:!!o++}},return:function(){i=!0}};a[r]=function(){return this},Array.from(a,(function(){throw 2}))}catch(n){}n.exports=function(n,t){if(!t&&!i)return!1;var e=!1;try{var o={};o[r]=function(){return{next:function(){return{done:e=!0}}}},n(o)}catch(n){}return e}},function(n,t,e){var r=e(0),i=e(72),o=e(68),a=r.TypeError;n.exports=function(n){if(i(n))return n;throw a(o(n)+" is not a constructor")}},function(n,t,e){var r,i,o,a,s=e(0),c=e(35),l=e(40),u=e(5),p=e(10),f=e(3),d=e(135),h=e(73),m=e(66),g=e(206),v=e(146),_=e(74),x=s.setImmediate,y=s.clearImmediate,w=s.process,b=s.Dispatch,k=s.Function,$=s.MessageChannel,S=s.String,z=0,j={};try{r=s.location}catch(n){}var T=function(n){if(p(j,n)){var t=j[n];delete j[n],t()}},C=function(n){return function(){T(n)}},E=function(n){T(n.data)},P=function(n){s.postMessage(S(n),r.protocol+"//"+r.host)};x&&y||(x=function(n){g(arguments.length,1);var t=u(n)?n:k(n),e=h(arguments,1);return j[++z]=function(){c(t,void 0,e)},i(z),z},y=function(n){delete j[n]},_?i=function(n){w.nextTick(C(n))}:b&&b.now?i=function(n){b.now(C(n))}:$&&!v?(a=(o=new $).port2,o.port1.onmessage=E,i=l(a.postMessage,a)):s.addEventListener&&u(s.postMessage)&&!s.importScripts&&r&&"file:"!==r.protocol&&!f(P)?(i=P,s.addEventListener("message",E,!1)):i="onreadystatechange"in m("script")?function(n){d.appendChild(m("script")).onreadystatechange=function(){d.removeChild(this),T(n)}}:function(n){setTimeout(C(n),0)}),n.exports={set:x,clear:y}},function(n,t,e){var r=e(65);n.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},function(n,t,e){var r=e(8),i=e(6),o=e(148);n.exports=function(n,t){if(r(n),i(t)&&t.constructor===n)return t;var e=o.f(n);return(0,e.resolve)(t),e.promise}},function(n,t,e){"use strict";var r=e(28),i=function(n){var t,e;this.promise=new n((function(n,r){if(void 0!==t||void 0!==e)throw TypeError("Bad Promise constructor");t=n,e=r})),this.resolve=r(t),this.reject=r(e)};n.exports.f=function(n){return new i(n)}},function(n,t,e){var r=e(2),i=e(58),o=e(17),a=e(32),s=r("".charAt),c=r("".charCodeAt),l=r("".slice),u=function(n){return function(t,e){var r,u,p=o(a(t)),f=i(e),d=p.length;return f<0||f>=d?n?"":void 0:(r=c(p,f))<55296||r>56319||f+1===d||(u=c(p,f+1))<56320||u>57343?n?s(p,f):r:n?l(p,f,f+2):u-56320+(r-55296<<10)+65536}};n.exports={codeAt:u(!1),charAt:u(!0)}},function(n,t){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,t,e){var r=e(66)("span").classList,i=r&&r.constructor&&r.constructor.prototype;n.exports=i===Object.prototype?void 0:i},function(n,t,e){var r=e(1),i=e(3),o=e(14),a=e(101),s=e(139);r({target:"Object",stat:!0,forced:i((function(){a(1)})),sham:!s},{getPrototypeOf:function(n){return a(o(n))}})},function(n,t,e){var r=e(0),i=e(195),o=r.TypeError;n.exports=function(n){if(i(n))throw o("The method doesn't accept regular expressions");return n}},function(n,t,e){var r=e(4)("match");n.exports=function(n){var t=/./;try{"/./"[n](t)}catch(e){try{return t[r]=!1,"/./"[n](t)}catch(n){}}return!1}},function(n,t,e){"use strict";var r=e(41).forEach,i=e(42)("forEach");n.exports=i?[].forEach:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,t,e){var r=e(3);n.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,t,e){var r=e(24),i=e(16),o=e(60).f,a=e(196),s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return s&&"Window"==r(n)?function(n){try{return o(n)}catch(n){return a(s)}}(n):o(i(n))}},function(n,t,e){var r=e(4);t.f=r},function(n,t,e){var r=e(239),i=e(10),o=e(158),a=e(12).f;n.exports=function(n){var t=r.Symbol||(r.Symbol={});i(t,n)||a(t,n,{value:o.f(n)})}},function(n,t,e){var r=e(1),i=e(240);r({target:"Array",stat:!0,forced:!e(143)((function(n){Array.from(n)}))},{from:i})},function(n,t,e){var r=e(17);n.exports=function(n,t){return void 0===n?arguments.length<2?"":t:r(n)}},function(n,t,e){e(1)({target:"Object",stat:!0,sham:!e(9)},{create:e(26)})},function(n,t){n.exports=function(n,t){for(var e=-1,r=t.length,i=n.length;++e<r;)n[i+e]=t[e];return n}},function(n,t){var e="object"==typeof global&&global&&global.Object===Object&&global;n.exports=e},function(n,t,e){var r=e(78),i=e(262),o=e(263),a=e(264),s=e(265),c=e(266);function l(n){var t=this.__data__=new r(n);this.size=t.size}l.prototype.clear=i,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=s,l.prototype.set=c,n.exports=l},function(n,t){n.exports=function(n,t){return n===t||n!=n&&t!=t}},function(n,t,e){var r=e(45),i=e(107);n.exports=function(n){if(!i(n))return!1;var t=r(n);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(n,t){var e=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return e.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,t,e){var r=e(283),i=e(38);n.exports=function n(t,e,o,a,s){return t===e||(null==t||null==e||!i(t)&&!i(e)?t!=t&&e!=e:r(t,e,o,a,n,s))}},function(n,t,e){var r=e(171),i=e(286),o=e(172);n.exports=function(n,t,e,a,s,c){var l=1&e,u=n.length,p=t.length;if(u!=p&&!(l&&p>u))return!1;var f=c.get(n),d=c.get(t);if(f&&d)return f==t&&d==n;var h=-1,m=!0,g=2&e?new r:void 0;for(c.set(n,t),c.set(t,n);++h<u;){var v=n[h],_=t[h];if(a)var x=l?a(_,v,h,t,n,c):a(v,_,h,n,t,c);if(void 0!==x){if(x)continue;m=!1;break}if(g){if(!i(t,(function(n,t){if(!o(g,t)&&(v===n||s(v,n,e,a,c)))return g.push(t)}))){m=!1;break}}else if(v!==_&&!s(v,_,e,a,c)){m=!1;break}}return c.delete(n),c.delete(t),m}},function(n,t,e){var r=e(108),i=e(284),o=e(285);function a(n){var t=-1,e=null==n?0:n.length;for(this.__data__=new r;++t<e;)this.add(n[t])}a.prototype.add=a.prototype.push=i,a.prototype.has=o,n.exports=a},function(n,t){n.exports=function(n,t){return n.has(t)}},function(n,t,e){var r=e(296),i=e(302),o=e(177);n.exports=function(n){return o(n)?r(n):i(n)}},function(n,t,e){(function(n){var r=e(22),i=e(298),o=t&&!t.nodeType&&t,a=o&&"object"==typeof n&&n&&!n.nodeType&&n,s=a&&a.exports===o?r.Buffer:void 0,c=(s?s.isBuffer:void 0)||i;n.exports=c}).call(this,e(130)(n))},function(n,t){var e=/^(?:0|[1-9]\d*)$/;n.exports=function(n,t){var r=typeof n;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&e.test(n))&&n>-1&&n%1==0&&n<t}},function(n,t,e){var r=e(299),i=e(300),o=e(301),a=o&&o.isTypedArray,s=a?i(a):r;n.exports=s},function(n,t,e){var r=e(167),i=e(110);n.exports=function(n){return null!=n&&i(n.length)&&!r(n)}},function(n,t,e){var r=e(30)(e(22),"Set");n.exports=r},function(n,t,e){var r=e(107);n.exports=function(n){return n==n&&!r(n)}},function(n,t){n.exports=function(n,t){return function(e){return null!=e&&(e[n]===t&&(void 0!==t||n in Object(e)))}}},function(n,t,e){var r=e(182),i=e(82);n.exports=function(n,t){for(var e=0,o=(t=r(t,n)).length;null!=n&&e<o;)n=n[i(t[e++])];return e&&e==o?n:void 0}},function(n,t,e){var r=e(21),i=e(111),o=e(313),a=e(316);n.exports=function(n,t){return r(n)?n:i(n,t)?[n]:o(a(n))}},function(n,t,e){e(1)({target:"Object",stat:!0},{setPrototypeOf:e(51)})},function(n,t,e){var r=e(1),i=e(13),o=e(35),a=e(345),s=e(144),c=e(8),l=e(6),u=e(26),p=e(3),f=i("Reflect","construct"),d=Object.prototype,h=[].push,m=p((function(){function n(){}return!(f((function(){}),[],n)instanceof n)})),g=!p((function(){f((function(){}))})),v=m||g;r({target:"Reflect",stat:!0,forced:v,sham:v},{construct:function(n,t){s(n),c(t);var e=arguments.length<3?n:s(arguments[2]);if(g&&!m)return f(n,t,e);if(n==e){switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3])}var r=[null];return o(h,r,t),new(o(a,n,r))}var i=e.prototype,p=u(l(i)?i:d),v=o(n,p,t);return l(v)?v:p}})},function(n,t,e){var r=e(1),i=e(0),o=e(43);r({global:!0},{Reflect:{}}),o(i.Reflect,"Reflect",!0)},function(n,t,e){},function(n,t,e){},function(n,t,e){var r=e(249),i=e(254),o=e(325),a=e(333),s=e(342),c=e(212),l=o((function(n){var t=c(n);return s(t)&&(t=void 0),a(r(n,1,s,!0),i(t,2))}));n.exports=l},function(n,t,e){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var t,e=""+n,i=r.exec(e);if(!i)return e;var o="",a=0,s=0;for(a=i.index;a<e.length;a++){switch(e.charCodeAt(a)){case 34:t="&quot;";break;case 38:t="&amp;";break;case 39:t="&#39;";break;case 60:t="&lt;";break;case 62:t="&gt;";break;default:continue}s!==a&&(o+=e.substring(s,a)),s=a+1,o+=t}return s!==a?o+e.substring(s,a):o}},function(n,t){var e=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,o=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,c="object"==typeof self&&self&&self.Object===Object&&self,l=s||c||Function("return this")(),u=Object.prototype.toString,p=Math.max,f=Math.min,d=function(){return l.Date.now()};function h(n){var t=typeof n;return!!n&&("object"==t||"function"==t)}function m(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==u.call(n)}(n))return NaN;if(h(n)){var t="function"==typeof n.valueOf?n.valueOf():n;n=h(t)?t+"":t}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(e,"");var s=i.test(n);return s||o.test(n)?a(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,t,e){var r,i,o,a,s,c,l=0,u=!1,g=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function _(t){var e=r,o=i;return r=i=void 0,l=t,a=n.apply(o,e)}function x(n){return l=n,s=setTimeout(w,t),u?_(n):a}function y(n){var e=n-c;return void 0===c||e>=t||e<0||g&&n-l>=o}function w(){var n=d();if(y(n))return b(n);s=setTimeout(w,function(n){var e=t-(n-c);return g?f(e,o-(n-l)):e}(n))}function b(n){return s=void 0,v&&r?_(n):(r=i=void 0,a)}function k(){var n=d(),e=y(n);if(r=arguments,i=this,c=n,e){if(void 0===s)return x(c);if(g)return s=setTimeout(w,t),_(c)}return void 0===s&&(s=setTimeout(w,t)),a}return t=m(t)||0,h(e)&&(u=!!e.leading,o=(g="maxWait"in e)?p(m(e.maxWait)||0,t):o,v="trailing"in e?!!e.trailing:v),k.cancel=function(){void 0!==s&&clearTimeout(s),l=0,r=c=i=s=void 0},k.flush=function(){return void 0===s?a:b(d())},k}},function(n,t,e){var r=e(3),i=e(0).RegExp,o=r((function(){var n=i("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),a=o||r((function(){return!i("a","y").sticky})),s=o||r((function(){var n=i("^r","gy");return n.lastIndex=2,null!=n.exec("str")}));n.exports={BROKEN_CARET:s,MISSED_STICKY:a,UNSUPPORTED_Y:o}},function(n,t,e){"use strict";e(31);var r=e(2),i=e(15),o=e(90),a=e(3),s=e(4),c=e(19),l=s("species"),u=RegExp.prototype;n.exports=function(n,t,e,p){var f=s(n),d=!a((function(){var t={};return t[f]=function(){return 7},7!=""[n](t)})),h=d&&!a((function(){var t=!1,e=/a/;return"split"===n&&((e={}).constructor={},e.constructor[l]=function(){return e},e.flags="",e[f]=/./[f]),e.exec=function(){return t=!0,null},e[f](""),!t}));if(!d||!h||e){var m=r(/./[f]),g=t(f,""[n],(function(n,t,e,i,a){var s=r(n),c=t.exec;return c===o||c===u.exec?d&&!a?{done:!0,value:m(t,e,i)}:{done:!0,value:s(e,t,i)}:{done:!1}}));i(String.prototype,n,g[0]),i(u,f,g[1])}p&&c(u[f],"sham",!0)}},function(n,t,e){var r=e(0),i=e(11),o=e(8),a=e(5),s=e(24),c=e(90),l=r.TypeError;n.exports=function(n,t){var e=n.exec;if(a(e)){var r=i(e,n,t);return null!==r&&o(r),r}if("RegExp"===s(n))return i(c,n,t);throw l("RegExp#exec called on incompatible receiver")}},function(n,t,e){"use strict";var r=e(1),i=e(2),o=e(95).indexOf,a=e(42),s=i([].indexOf),c=!!s&&1/s([1],1,-0)<0,l=a("indexOf");r({target:"Array",proto:!0,forced:c||!l},{indexOf:function(n){var t=arguments.length>1?arguments[1]:void 0;return c?s(this,n,t)||0:o(this,n,t)}})},function(n,t,e){var r=e(6),i=e(24),o=e(4)("match");n.exports=function(n){var t;return r(n)&&(void 0!==(t=n[o])?!!t:"RegExp"==i(n))}},function(n,t,e){var r=e(0),i=e(96),o=e(23),a=e(52),s=r.Array,c=Math.max;n.exports=function(n,t,e){for(var r=o(n),l=i(t,r),u=i(void 0===e?r:e,r),p=s(c(u-l,0)),f=0;l<u;l++,f++)a(p,f,n[l]);return p.length=f,p}},function(n,t,e){"use strict";var r=e(8);n.exports=function(){var n=r(this),t="";return n.global&&(t+="g"),n.ignoreCase&&(t+="i"),n.multiline&&(t+="m"),n.dotAll&&(t+="s"),n.unicode&&(t+="u"),n.sticky&&(t+="y"),t}},function(n,t,e){var r=e(3),i=e(0).RegExp;n.exports=r((function(){var n=i(".","s");return!(n.dotAll&&n.exec("\n")&&"s"===n.flags)}))},function(n,t,e){"use strict";var r=e(149).charAt;n.exports=function(n,t,e){return t+(e?r(n,t).length:1)}},function(n,t,e){"use strict";var r=e(1),i=e(2),o=e(46),a=e(16),s=e(42),c=i([].join),l=o!=Object,u=s("join",",");r({target:"Array",proto:!0,forced:l||!u},{join:function(n){return c(a(this),void 0===n?",":n)}})},function(n,t,e){"use strict";var r=e(1),i=e(0),o=e(3),a=e(44),s=e(6),c=e(14),l=e(23),u=e(52),p=e(129),f=e(76),d=e(4),h=e(48),m=d("isConcatSpreadable"),g=i.TypeError,v=h>=51||!o((function(){var n=[];return n[m]=!1,n.concat()[0]!==n})),_=f("concat"),x=function(n){if(!s(n))return!1;var t=n[m];return void 0!==t?!!t:a(n)};r({target:"Array",proto:!0,forced:!v||!_},{concat:function(n){var t,e,r,i,o,a=c(this),s=p(a,0),f=0;for(t=-1,r=arguments.length;t<r;t++)if(x(o=-1===t?a:arguments[t])){if(f+(i=l(o))>9007199254740991)throw g("Maximum allowed index exceeded");for(e=0;e<i;e++,f++)e in o&&u(s,f,o[e])}else{if(f>=9007199254740991)throw g("Maximum allowed index exceeded");u(s,f++,o)}return s.length=f,s}})},function(n,t,e){"use strict";var r=e(138).IteratorPrototype,i=e(26),o=e(36),a=e(43),s=e(50),c=function(){return this};n.exports=function(n,t,e,l){var u=t+" Iterator";return n.prototype=i(r,{next:o(+!l,e)}),a(n,u,!1,!0),s[u]=c,n}},function(n,t,e){var r=e(15);n.exports=function(n,t,e){for(var i in t)r(n,i,t[i],e);return n}},function(n,t,e){"use strict";var r=e(13),i=e(12),o=e(4),a=e(9),s=o("species");n.exports=function(n){var t=r(n),e=i.f;a&&t&&!t[s]&&e(t,s,{configurable:!0,get:function(){return this}})}},function(n,t,e){var r=e(0),i=e(34),o=r.TypeError;n.exports=function(n,t){if(i(t,n))return n;throw o("Incorrect invocation")}},function(n,t,e){var r=e(0).TypeError;n.exports=function(n,t){if(n<t)throw r("Not enough arguments");return n}},function(n,t,e){var r=e(1),i=e(9),o=e(137),a=e(16),s=e(37),c=e(52);r({target:"Object",stat:!0,sham:!i},{getOwnPropertyDescriptors:function(n){for(var t,e,r=a(n),i=s.f,l=o(r),u={},p=0;l.length>p;)void 0!==(e=i(r,t=l[p++]))&&c(u,t,e);return u}})},function(n,t,e){var r=e(3),i=e(0).RegExp;n.exports=r((function(){var n=i("(?<a>b)","g");return"b"!==n.exec("b").groups.a||"bc"!=="b".replace(n,"$<a>c")}))},function(n,t,e){var r=e(5),i=e(6),o=e(51);n.exports=function(n,t,e){var a,s;return o&&r(a=t.constructor)&&a!==e&&i(s=a.prototype)&&s!==e.prototype&&o(n,s),n}},function(n,t,e){"use strict";var r=e(1),i=e(95).includes,o=e(120);r({target:"Array",proto:!0},{includes:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}}),o("includes")},function(n,t,e){"use strict";var r=e(1),i=e(2),o=e(153),a=e(32),s=e(17),c=e(154),l=i("".indexOf);r({target:"String",proto:!0,forced:!c("includes")},{includes:function(n){return!!~l(s(a(this)),s(o(n)),arguments.length>1?arguments[1]:void 0)}})},function(n,t){n.exports=function(n){var t=null==n?0:n.length;return t?n[t-1]:void 0}},function(n,t,e){n.exports=e(348)},function(n,t,e){var r=e(0),i=e(11),o=e(6),a=e(94),s=e(57),c=e(215),l=e(4),u=r.TypeError,p=l("toPrimitive");n.exports=function(n,t){if(!o(n)||a(n))return n;var e,r=s(n,p);if(r){if(void 0===t&&(t="default"),e=i(r,n,t),!o(e)||a(e))return e;throw u("Can't convert object to primitive value")}return void 0===t&&(t="number"),c(n,t)}},function(n,t,e){var r=e(0),i=e(11),o=e(5),a=e(6),s=r.TypeError;n.exports=function(n,t){var e,r;if("string"===t&&o(e=n.toString)&&!a(r=i(e,n)))return r;if(o(e=n.valueOf)&&!a(r=i(e,n)))return r;if("string"!==t&&o(e=n.toString)&&!a(r=i(e,n)))return r;throw s("Can't convert object to primitive value")}},function(n,t,e){var r=e(0),i=e(5),o=e(71),a=r.WeakMap;n.exports=i(a)&&/native code/.test(o(a))},function(n,t,e){var r=e(0),i=e(5),o=r.String,a=r.TypeError;n.exports=function(n){if("object"==typeof n||i(n))return n;throw a("Can't set "+o(n)+" as a prototype")}},function(n,t,e){"use strict";var r,i,o,a,s=e(1),c=e(18),l=e(0),u=e(13),p=e(11),f=e(140),d=e(15),h=e(203),m=e(51),g=e(43),v=e(204),_=e(28),x=e(5),y=e(6),w=e(205),b=e(71),k=e(219),$=e(143),S=e(128),z=e(145).set,j=e(220),T=e(147),C=e(223),E=e(148),P=e(224),A=e(225),I=e(33),O=e(126),N=e(4),q=e(226),L=e(74),R=e(48),D=N("species"),M="Promise",U=I.getterFor(M),F=I.set,B=I.getterFor(M),H=f&&f.prototype,G=f,W=H,V=l.TypeError,K=l.document,Q=l.process,Y=E.f,J=Y,X=!!(K&&K.createEvent&&l.dispatchEvent),Z=x(l.PromiseRejectionEvent),nn=!1,tn=O(M,(function(){var n=b(G),t=n!==String(G);if(!t&&66===R)return!0;if(c&&!W.finally)return!0;if(R>=51&&/native code/.test(n))return!1;var e=new G((function(n){n(1)})),r=function(n){n((function(){}),(function(){}))};return(e.constructor={})[D]=r,!(nn=e.then((function(){}))instanceof r)||!t&&q&&!Z})),en=tn||!$((function(n){G.all(n).catch((function(){}))})),rn=function(n){var t;return!(!y(n)||!x(t=n.then))&&t},on=function(n,t){var e,r,i,o=t.value,a=1==t.state,s=a?n.ok:n.fail,c=n.resolve,l=n.reject,u=n.domain;try{s?(a||(2===t.rejection&&un(t),t.rejection=1),!0===s?e=o:(u&&u.enter(),e=s(o),u&&(u.exit(),i=!0)),e===n.promise?l(V("Promise-chain cycle")):(r=rn(e))?p(r,e,c,l):c(e)):l(o)}catch(n){u&&!i&&u.exit(),l(n)}},an=function(n,t){n.notified||(n.notified=!0,j((function(){for(var e,r=n.reactions;e=r.get();)on(e,n);n.notified=!1,t&&!n.rejection&&cn(n)})))},sn=function(n,t,e){var r,i;X?((r=K.createEvent("Event")).promise=t,r.reason=e,r.initEvent(n,!1,!0),l.dispatchEvent(r)):r={promise:t,reason:e},!Z&&(i=l["on"+n])?i(r):"unhandledrejection"===n&&C("Unhandled promise rejection",e)},cn=function(n){p(z,l,(function(){var t,e=n.facade,r=n.value;if(ln(n)&&(t=P((function(){L?Q.emit("unhandledRejection",r,e):sn("unhandledrejection",e,r)})),n.rejection=L||ln(n)?2:1,t.error))throw t.value}))},ln=function(n){return 1!==n.rejection&&!n.parent},un=function(n){p(z,l,(function(){var t=n.facade;L?Q.emit("rejectionHandled",t):sn("rejectionhandled",t,n.value)}))},pn=function(n,t,e){return function(r){n(t,r,e)}},fn=function(n,t,e){n.done||(n.done=!0,e&&(n=e),n.value=t,n.state=2,an(n,!0))},dn=function(n,t,e){if(!n.done){n.done=!0,e&&(n=e);try{if(n.facade===t)throw V("Promise can't be resolved itself");var r=rn(t);r?j((function(){var e={done:!1};try{p(r,t,pn(dn,e,n),pn(fn,e,n))}catch(t){fn(e,t,n)}})):(n.value=t,n.state=1,an(n,!1))}catch(t){fn({done:!1},t,n)}}};if(tn&&(W=(G=function(n){w(this,W),_(n),p(r,this);var t=U(this);try{n(pn(dn,t),pn(fn,t))}catch(n){fn(t,n)}}).prototype,(r=function(n){F(this,{type:M,done:!1,notified:!1,parent:!1,reactions:new A,rejection:!1,state:0,value:void 0})}).prototype=h(W,{then:function(n,t){var e=B(this),r=Y(S(this,G));return e.parent=!0,r.ok=!x(n)||n,r.fail=x(t)&&t,r.domain=L?Q.domain:void 0,0==e.state?e.reactions.add(r):j((function(){on(r,e)})),r.promise},catch:function(n){return this.then(void 0,n)}}),i=function(){var n=new r,t=U(n);this.promise=n,this.resolve=pn(dn,t),this.reject=pn(fn,t)},E.f=Y=function(n){return n===G||n===o?new i(n):J(n)},!c&&x(f)&&H!==Object.prototype)){a=H.then,nn||(d(H,"then",(function(n,t){var e=this;return new G((function(n,t){p(a,e,n,t)})).then(n,t)}),{unsafe:!0}),d(H,"catch",W.catch,{unsafe:!0}));try{delete H.constructor}catch(n){}m&&m(H,W)}s({global:!0,wrap:!0,forced:tn},{Promise:G}),g(G,M,!1,!0),v(M),o=u(M),s({target:M,stat:!0,forced:tn},{reject:function(n){var t=Y(this);return p(t.reject,void 0,n),t.promise}}),s({target:M,stat:!0,forced:c||tn},{resolve:function(n){return T(c&&this===o?G:this,n)}}),s({target:M,stat:!0,forced:en},{all:function(n){var t=this,e=Y(t),r=e.resolve,i=e.reject,o=P((function(){var e=_(t.resolve),o=[],a=0,s=1;k(n,(function(n){var c=a++,l=!1;s++,p(e,t,n).then((function(n){l||(l=!0,o[c]=n,--s||r(o))}),i)})),--s||r(o)}));return o.error&&i(o.value),e.promise},race:function(n){var t=this,e=Y(t),r=e.reject,i=P((function(){var i=_(t.resolve);k(n,(function(n){p(i,t,n).then(e.resolve,r)}))}));return i.error&&r(i.value),e.promise}})},function(n,t,e){var r=e(0),i=e(40),o=e(11),a=e(8),s=e(68),c=e(141),l=e(23),u=e(34),p=e(127),f=e(89),d=e(142),h=r.TypeError,m=function(n,t){this.stopped=n,this.result=t},g=m.prototype;n.exports=function(n,t,e){var r,v,_,x,y,w,b,k=e&&e.that,$=!(!e||!e.AS_ENTRIES),S=!(!e||!e.IS_ITERATOR),z=!(!e||!e.INTERRUPTED),j=i(t,k),T=function(n){return r&&d(r,"normal",n),new m(!0,n)},C=function(n){return $?(a(n),z?j(n[0],n[1],T):j(n[0],n[1])):z?j(n,T):j(n)};if(S)r=n;else{if(!(v=f(n)))throw h(s(n)+" is not iterable");if(c(v)){for(_=0,x=l(n);x>_;_++)if((y=C(n[_]))&&u(g,y))return y;return new m(!1)}r=p(n,v)}for(w=r.next;!(b=o(w,r)).done;){try{y=C(b.value)}catch(n){d(r,"throw",n)}if("object"==typeof y&&y&&u(g,y))return y}return new m(!1)}},function(n,t,e){var r,i,o,a,s,c,l,u,p=e(0),f=e(40),d=e(37).f,h=e(145).set,m=e(146),g=e(221),v=e(222),_=e(74),x=p.MutationObserver||p.WebKitMutationObserver,y=p.document,w=p.process,b=p.Promise,k=d(p,"queueMicrotask"),$=k&&k.value;$||(r=function(){var n,t;for(_&&(n=w.domain)&&n.exit();i;){t=i.fn,i=i.next;try{t()}catch(n){throw i?a():o=void 0,n}}o=void 0,n&&n.enter()},m||_||v||!x||!y?!g&&b&&b.resolve?((l=b.resolve(void 0)).constructor=b,u=f(l.then,l),a=function(){u(r)}):_?a=function(){w.nextTick(r)}:(h=f(h,p),a=function(){h(r)}):(s=!0,c=y.createTextNode(""),new x(r).observe(c,{characterData:!0}),a=function(){c.data=s=!s})),n.exports=$||function(n){var t={fn:n,next:void 0};o&&(o.next=t),i||(i=t,a()),o=t}},function(n,t,e){var r=e(65),i=e(0);n.exports=/ipad|iphone|ipod/i.test(r)&&void 0!==i.Pebble},function(n,t,e){var r=e(65);n.exports=/web0s(?!.*chrome)/i.test(r)},function(n,t,e){var r=e(0);n.exports=function(n,t){var e=r.console;e&&e.error&&(1==arguments.length?e.error(n):e.error(n,t))}},function(n,t){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,t){var e=function(){this.head=null,this.tail=null};e.prototype={add:function(n){var t={item:n,next:null};this.head?this.tail.next=t:this.head=t,this.tail=t},get:function(){var n=this.head;if(n)return this.head=n.next,this.tail===n&&(this.tail=null),n.item}},n.exports=e},function(n,t){n.exports="object"==typeof window},function(n,t,e){var r=e(1),i=e(228);r({target:"Object",stat:!0,forced:Object.assign!==i},{assign:i})},function(n,t,e){"use strict";var r=e(9),i=e(2),o=e(11),a=e(3),s=e(69),c=e(100),l=e(98),u=e(14),p=e(46),f=Object.assign,d=Object.defineProperty,h=i([].concat);n.exports=!f||a((function(){if(r&&1!==f({b:1},f(d({},"a",{enumerable:!0,get:function(){d(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},t={},e=Symbol();return n[e]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){t[n]=n})),7!=f({},n)[e]||"abcdefghijklmnopqrst"!=s(f({},t)).join("")}))?function(n,t){for(var e=u(n),i=arguments.length,a=1,f=c.f,d=l.f;i>a;)for(var m,g=p(arguments[a++]),v=f?h(s(g),f(g)):s(g),_=v.length,x=0;_>x;)m=v[x++],r&&!o(d,g,m)||(e[m]=g[m]);return e}:f},function(n,t,e){"use strict";var r=e(1),i=e(18),o=e(140),a=e(3),s=e(13),c=e(5),l=e(128),u=e(147),p=e(15);if(r({target:"Promise",proto:!0,real:!0,forced:!!o&&a((function(){o.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var t=l(this,s("Promise")),e=c(n);return this.then(e?function(e){return u(t,n()).then((function(){return e}))}:n,e?function(e){return u(t,n()).then((function(){throw e}))}:n)}}),!i&&c(o)){var f=s("Promise").prototype.finally;o.prototype.finally!==f&&p(o.prototype,"finally",f,{unsafe:!0})}},function(n,t,e){"use strict";var r=e(102),i=e(61);n.exports=r?{}.toString:function(){return"[object "+i(this)+"]"}},function(n,t,e){var r=e(0),i=e(44),o=e(72),a=e(6),s=e(4)("species"),c=r.Array;n.exports=function(n){var t;return i(n)&&(t=n.constructor,(o(t)&&(t===c||i(t.prototype))||a(t)&&null===(t=t[s]))&&(t=void 0)),void 0===t?c:t}},function(n,t,e){"use strict";var r=e(1),i=e(233).left,o=e(42),a=e(48),s=e(74);r({target:"Array",proto:!0,forced:!o("reduce")||!s&&a>79&&a<83},{reduce:function(n){var t=arguments.length;return i(this,n,t,t>1?arguments[1]:void 0)}})},function(n,t,e){var r=e(0),i=e(28),o=e(14),a=e(46),s=e(23),c=r.TypeError,l=function(n){return function(t,e,r,l){i(e);var u=o(t),p=a(u),f=s(u),d=n?f-1:0,h=n?-1:1;if(r<2)for(;;){if(d in p){l=p[d],d+=h;break}if(d+=h,n?d<0:f<=d)throw c("Reduce of empty array with no initial value")}for(;n?d>=0:f>d;d+=h)d in p&&(l=e(l,p[d],d,u));return l}};n.exports={left:l(!1),right:l(!0)}},function(n,t,e){"use strict";var r,i=e(1),o=e(2),a=e(37).f,s=e(87),c=e(17),l=e(153),u=e(32),p=e(154),f=e(18),d=o("".startsWith),h=o("".slice),m=Math.min,g=p("startsWith");i({target:"String",proto:!0,forced:!!(f||g||(r=a(String.prototype,"startsWith"),!r||r.writable))&&!g},{startsWith:function(n){var t=c(u(this));l(n);var e=s(m(arguments.length>1?arguments[1]:void 0,t.length)),r=c(n);return d?d(t,r,e):h(t,e,e+r.length)===r}})},function(n,t,e){var r=e(1),i=e(156),o=e(3),a=e(6),s=e(236).onFreeze,c=Object.freeze;r({target:"Object",stat:!0,forced:o((function(){c(1)})),sham:!i},{freeze:function(n){return c&&a(n)?c(s(n)):n}})},function(n,t,e){var r=e(1),i=e(2),o=e(49),a=e(6),s=e(10),c=e(12).f,l=e(60),u=e(157),p=e(237),f=e(64),d=e(156),h=!1,m=f("meta"),g=0,v=function(n){c(n,m,{value:{objectID:"O"+g++,weakData:{}}})},_=n.exports={enable:function(){_.enable=function(){},h=!0;var n=l.f,t=i([].splice),e={};e[m]=1,n(e).length&&(l.f=function(e){for(var r=n(e),i=0,o=r.length;i<o;i++)if(r[i]===m){t(r,i,1);break}return r},r({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:u.f}))},fastKey:function(n,t){if(!a(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!s(n,m)){if(!p(n))return"F";if(!t)return"E";v(n)}return n[m].objectID},getWeakData:function(n,t){if(!s(n,m)){if(!p(n))return!0;if(!t)return!1;v(n)}return n[m].weakData},onFreeze:function(n){return d&&h&&p(n)&&!s(n,m)&&v(n),n}};o[m]=!0},function(n,t,e){var r=e(3),i=e(6),o=e(24),a=e(238),s=Object.isExtensible,c=r((function(){s(1)}));n.exports=c||a?function(n){return!!i(n)&&((!a||"ArrayBuffer"!=o(n))&&(!s||s(n)))}:s},function(n,t,e){var r=e(3);n.exports=r((function(){if("function"==typeof ArrayBuffer){var n=new ArrayBuffer(8);Object.isExtensible(n)&&Object.defineProperty(n,"a",{value:8})}}))},function(n,t,e){var r=e(0);n.exports=r},function(n,t,e){"use strict";var r=e(0),i=e(40),o=e(11),a=e(14),s=e(241),c=e(141),l=e(72),u=e(23),p=e(52),f=e(127),d=e(89),h=r.Array;n.exports=function(n){var t=a(n),e=l(this),r=arguments.length,m=r>1?arguments[1]:void 0,g=void 0!==m;g&&(m=i(m,r>2?arguments[2]:void 0));var v,_,x,y,w,b,k=d(t),$=0;if(!k||this==h&&c(k))for(v=u(t),_=e?new this(v):h(v);v>$;$++)b=g?m(t[$],$):t[$],p(_,$,b);else for(w=(y=f(t,k)).next,_=e?new this:[];!(x=o(w,y)).done;$++)b=g?s(y,m,[x.value,$],!0):x.value,p(_,$,b);return _.length=$,_}},function(n,t,e){var r=e(8),i=e(142);n.exports=function(n,t,e,o){try{return o?t(r(e)[0],e[1]):t(e)}catch(t){i(n,"throw",t)}}},function(n,t,e){"use strict";var r=e(13),i=e(10),o=e(19),a=e(34),s=e(51),c=e(99),l=e(209),u=e(161),p=e(243),f=e(244),d=e(245),h=e(18);n.exports=function(n,t,e,m){var g=m?2:1,v=n.split("."),_=v[v.length-1],x=r.apply(null,v);if(x){var y=x.prototype;if(!h&&i(y,"cause")&&delete y.cause,!e)return x;var w=r("Error"),b=t((function(n,t){var e=u(m?t:n,void 0),r=m?new x(n):new x;return void 0!==e&&o(r,"message",e),d&&o(r,"stack",f(r.stack,2)),this&&a(y,this)&&l(r,this,b),arguments.length>g&&p(r,arguments[g]),r}));if(b.prototype=y,"Error"!==_&&(s?s(b,w):c(b,w,{name:!0})),c(b,x),!h)try{y.name!==_&&o(y,"name",_),y.constructor=b}catch(n){}return b}}},function(n,t,e){var r=e(6),i=e(19);n.exports=function(n,t){r(t)&&"cause"in t&&i(n,"cause",t.cause)}},function(n,t,e){var r=e(2)("".replace),i=String(Error("zxcasd").stack),o=/\n\s*at [^:]*:[^\n]*/,a=o.test(i);n.exports=function(n,t){if(a&&"string"==typeof n)for(;t--;)n=r(n,o,"");return n}},function(n,t,e){var r=e(3),i=e(36);n.exports=!r((function(){var n=Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",i(1,7)),7!==n.stack)}))},function(n,t,e){"use strict";var r=e(9),i=e(3),o=e(8),a=e(26),s=e(161),c=Error.prototype.toString,l=i((function(){if(r){var n=a(Object.defineProperty({},"name",{get:function(){return this===n}}));if("true"!==c.call(n))return!0}return"2: 1"!==c.call({message:1,name:2})||"Error"!==c.call({})}));n.exports=l?function(){var n=o(this),t=s(n.name,"Error"),e=s(n.message);return t?e?t+": "+e:t:e}:c},function(n,t,e){var r=e(2),i=e(14),o=Math.floor,a=r("".charAt),s=r("".replace),c=r("".slice),l=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,u=/\$([$&'`]|\d{1,2})/g;n.exports=function(n,t,e,r,p,f){var d=e+n.length,h=r.length,m=u;return void 0!==p&&(p=i(p),m=l),s(f,m,(function(i,s){var l;switch(a(s,0)){case"$":return"$";case"&":return n;case"`":return c(t,0,e);case"'":return c(t,d);case"<":l=p[c(s,1,-1)];break;default:var u=+s;if(0===u)return i;if(u>h){var f=o(u/10);return 0===f?i:f<=h?void 0===r[f-1]?a(s,1):r[f-1]+a(s,1):i}l=r[u-1]}return void 0===l?"":l}))}},function(n,t,e){var r=e(1),i=e(0),o=e(13),a=e(35),s=e(2),c=e(3),l=i.Array,u=o("JSON","stringify"),p=s(/./.exec),f=s("".charAt),d=s("".charCodeAt),h=s("".replace),m=s(1..toString),g=/[\uD800-\uDFFF]/g,v=/^[\uD800-\uDBFF]$/,_=/^[\uDC00-\uDFFF]$/,x=function(n,t,e){var r=f(e,t-1),i=f(e,t+1);return p(v,n)&&!p(_,i)||p(_,n)&&!p(v,r)?"\\u"+m(d(n,0),16):n},y=c((function(){return'"\\udf06\\ud834"'!==u("\udf06\ud834")||'"\\udead"'!==u("\udead")}));u&&r({target:"JSON",stat:!0,forced:y},{stringify:function(n,t,e){for(var r=0,i=arguments.length,o=l(i);r<i;r++)o[r]=arguments[r];var s=a(u,null,o);return"string"==typeof s?h(s,g,x):s}})},function(n,t,e){var r=e(163),i=e(250);n.exports=function n(t,e,o,a,s){var c=-1,l=t.length;for(o||(o=i),s||(s=[]);++c<l;){var u=t[c];e>0&&o(u)?e>1?n(u,e-1,o,a,s):r(s,u):a||(s[s.length]=u)}return s}},function(n,t,e){var r=e(53),i=e(105),o=e(21),a=r?r.isConcatSpreadable:void 0;n.exports=function(n){return o(n)||i(n)||!!(a&&n&&n[a])}},function(n,t,e){var r=e(45),i=e(38);n.exports=function(n){return i(n)&&"[object Arguments]"==r(n)}},function(n,t,e){var r=e(53),i=Object.prototype,o=i.hasOwnProperty,a=i.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var t=o.call(n,s),e=n[s];try{n[s]=void 0;var r=!0}catch(n){}var i=a.call(n);return r&&(t?n[s]=e:delete n[s]),i}},function(n,t){var e=Object.prototype.toString;n.exports=function(n){return e.call(n)}},function(n,t,e){var r=e(255),i=e(311),o=e(113),a=e(21),s=e(322);n.exports=function(n){return"function"==typeof n?n:null==n?o:"object"==typeof n?a(n)?i(n[0],n[1]):r(n):s(n)}},function(n,t,e){var r=e(256),i=e(310),o=e(180);n.exports=function(n){var t=i(n);return 1==t.length&&t[0][2]?o(t[0][0],t[0][1]):function(e){return e===n||r(e,n,t)}}},function(n,t,e){var r=e(165),i=e(169);n.exports=function(n,t,e,o){var a=e.length,s=a,c=!o;if(null==n)return!s;for(n=Object(n);a--;){var l=e[a];if(c&&l[2]?l[1]!==n[l[0]]:!(l[0]in n))return!1}for(;++a<s;){var u=(l=e[a])[0],p=n[u],f=l[1];if(c&&l[2]){if(void 0===p&&!(u in n))return!1}else{var d=new r;if(o)var h=o(p,f,u,n,t,d);if(!(void 0===h?i(f,p,3,o,d):h))return!1}}return!0}},function(n,t){n.exports=function(){this.__data__=[],this.size=0}},function(n,t,e){var r=e(79),i=Array.prototype.splice;n.exports=function(n){var t=this.__data__,e=r(t,n);return!(e<0)&&(e==t.length-1?t.pop():i.call(t,e,1),--this.size,!0)}},function(n,t,e){var r=e(79);n.exports=function(n){var t=this.__data__,e=r(t,n);return e<0?void 0:t[e][1]}},function(n,t,e){var r=e(79);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,t,e){var r=e(79);n.exports=function(n,t){var e=this.__data__,i=r(e,n);return i<0?(++this.size,e.push([n,t])):e[i][1]=t,this}},function(n,t,e){var r=e(78);n.exports=function(){this.__data__=new r,this.size=0}},function(n,t){n.exports=function(n){var t=this.__data__,e=t.delete(n);return this.size=t.size,e}},function(n,t){n.exports=function(n){return this.__data__.get(n)}},function(n,t){n.exports=function(n){return this.__data__.has(n)}},function(n,t,e){var r=e(78),i=e(106),o=e(108);n.exports=function(n,t){var e=this.__data__;if(e instanceof r){var a=e.__data__;if(!i||a.length<199)return a.push([n,t]),this.size=++e.size,this;e=this.__data__=new o(a)}return e.set(n,t),this.size=e.size,this}},function(n,t,e){var r=e(167),i=e(268),o=e(107),a=e(168),s=/^\[object .+?Constructor\]$/,c=Function.prototype,l=Object.prototype,u=c.toString,p=l.hasOwnProperty,f=RegExp("^"+u.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!o(n)||i(n))&&(r(n)?f:s).test(a(n))}},function(n,t,e){var r,i=e(269),o=(r=/[^.]+$/.exec(i&&i.keys&&i.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!o&&o in n}},function(n,t,e){var r=e(22)["__core-js_shared__"];n.exports=r},function(n,t){n.exports=function(n,t){return null==n?void 0:n[t]}},function(n,t,e){var r=e(272),i=e(78),o=e(106);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(o||i),string:new r}}},function(n,t,e){var r=e(273),i=e(274),o=e(275),a=e(276),s=e(277);function c(n){var t=-1,e=null==n?0:n.length;for(this.clear();++t<e;){var r=n[t];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=a,c.prototype.set=s,n.exports=c},function(n,t,e){var r=e(80);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,t){n.exports=function(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t}},function(n,t,e){var r=e(80),i=Object.prototype.hasOwnProperty;n.exports=function(n){var t=this.__data__;if(r){var e=t[n];return"__lodash_hash_undefined__"===e?void 0:e}return i.call(t,n)?t[n]:void 0}},function(n,t,e){var r=e(80),i=Object.prototype.hasOwnProperty;n.exports=function(n){var t=this.__data__;return r?void 0!==t[n]:i.call(t,n)}},function(n,t,e){var r=e(80);n.exports=function(n,t){var e=this.__data__;return this.size+=this.has(n)?0:1,e[n]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},function(n,t,e){var r=e(81);n.exports=function(n){var t=r(this,n).delete(n);return this.size-=t?1:0,t}},function(n,t){n.exports=function(n){var t=typeof n;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==n:null===n}},function(n,t,e){var r=e(81);n.exports=function(n){return r(this,n).get(n)}},function(n,t,e){var r=e(81);n.exports=function(n){return r(this,n).has(n)}},function(n,t,e){var r=e(81);n.exports=function(n,t){var e=r(this,n),i=e.size;return e.set(n,t),this.size+=e.size==i?0:1,this}},function(n,t,e){var r=e(165),i=e(170),o=e(287),a=e(290),s=e(306),c=e(21),l=e(174),u=e(176),p="[object Object]",f=Object.prototype.hasOwnProperty;n.exports=function(n,t,e,d,h,m){var g=c(n),v=c(t),_=g?"[object Array]":s(n),x=v?"[object Array]":s(t),y=(_="[object Arguments]"==_?p:_)==p,w=(x="[object Arguments]"==x?p:x)==p,b=_==x;if(b&&l(n)){if(!l(t))return!1;g=!0,y=!1}if(b&&!y)return m||(m=new r),g||u(n)?i(n,t,e,d,h,m):o(n,t,_,e,d,h,m);if(!(1&e)){var k=y&&f.call(n,"__wrapped__"),$=w&&f.call(t,"__wrapped__");if(k||$){var S=k?n.value():n,z=$?t.value():t;return m||(m=new r),h(S,z,e,d,m)}}return!!b&&(m||(m=new r),a(n,t,e,d,h,m))}},function(n,t){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,t){n.exports=function(n){return this.__data__.has(n)}},function(n,t){n.exports=function(n,t){for(var e=-1,r=null==n?0:n.length;++e<r;)if(t(n[e],e,n))return!0;return!1}},function(n,t,e){var r=e(53),i=e(288),o=e(166),a=e(170),s=e(289),c=e(109),l=r?r.prototype:void 0,u=l?l.valueOf:void 0;n.exports=function(n,t,e,r,l,p,f){switch(e){case"[object DataView]":if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;n=n.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=t.byteLength||!p(new i(n),new i(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+n,+t);case"[object Error]":return n.name==t.name&&n.message==t.message;case"[object RegExp]":case"[object String]":return n==t+"";case"[object Map]":var d=s;case"[object Set]":var h=1&r;if(d||(d=c),n.size!=t.size&&!h)return!1;var m=f.get(n);if(m)return m==t;r|=2,f.set(n,t);var g=a(d(n),d(t),r,l,p,f);return f.delete(n),g;case"[object Symbol]":if(u)return u.call(n)==u.call(t)}return!1}},function(n,t,e){var r=e(22).Uint8Array;n.exports=r},function(n,t){n.exports=function(n){var t=-1,e=Array(n.size);return n.forEach((function(n,r){e[++t]=[r,n]})),e}},function(n,t,e){var r=e(291),i=Object.prototype.hasOwnProperty;n.exports=function(n,t,e,o,a,s){var c=1&e,l=r(n),u=l.length;if(u!=r(t).length&&!c)return!1;for(var p=u;p--;){var f=l[p];if(!(c?f in t:i.call(t,f)))return!1}var d=s.get(n),h=s.get(t);if(d&&h)return d==t&&h==n;var m=!0;s.set(n,t),s.set(t,n);for(var g=c;++p<u;){var v=n[f=l[p]],_=t[f];if(o)var x=c?o(_,v,f,t,n,s):o(v,_,f,n,t,s);if(!(void 0===x?v===_||a(v,_,e,o,s):x)){m=!1;break}g||(g="constructor"==f)}if(m&&!g){var y=n.constructor,w=t.constructor;y==w||!("constructor"in n)||!("constructor"in t)||"function"==typeof y&&y instanceof y&&"function"==typeof w&&w instanceof w||(m=!1)}return s.delete(n),s.delete(t),m}},function(n,t,e){var r=e(292),i=e(293),o=e(173);n.exports=function(n){return r(n,o,i)}},function(n,t,e){var r=e(163),i=e(21);n.exports=function(n,t,e){var o=t(n);return i(n)?o:r(o,e(n))}},function(n,t,e){var r=e(294),i=e(295),o=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(n){return null==n?[]:(n=Object(n),r(a(n),(function(t){return o.call(n,t)})))}:i;n.exports=s},function(n,t){n.exports=function(n,t){for(var e=-1,r=null==n?0:n.length,i=0,o=[];++e<r;){var a=n[e];t(a,e,n)&&(o[i++]=a)}return o}},function(n,t){n.exports=function(){return[]}},function(n,t,e){var r=e(297),i=e(105),o=e(21),a=e(174),s=e(175),c=e(176),l=Object.prototype.hasOwnProperty;n.exports=function(n,t){var e=o(n),u=!e&&i(n),p=!e&&!u&&a(n),f=!e&&!u&&!p&&c(n),d=e||u||p||f,h=d?r(n.length,String):[],m=h.length;for(var g in n)!t&&!l.call(n,g)||d&&("length"==g||p&&("offset"==g||"parent"==g)||f&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,m))||h.push(g);return h}},function(n,t){n.exports=function(n,t){for(var e=-1,r=Array(n);++e<n;)r[e]=t(e);return r}},function(n,t){n.exports=function(){return!1}},function(n,t,e){var r=e(45),i=e(110),o=e(38),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,n.exports=function(n){return o(n)&&i(n.length)&&!!a[r(n)]}},function(n,t){n.exports=function(n){return function(t){return n(t)}}},function(n,t,e){(function(n){var r=e(164),i=t&&!t.nodeType&&t,o=i&&"object"==typeof n&&n&&!n.nodeType&&n,a=o&&o.exports===i&&r.process,s=function(){try{var n=o&&o.require&&o.require("util").types;return n||a&&a.binding&&a.binding("util")}catch(n){}}();n.exports=s}).call(this,e(130)(n))},function(n,t,e){var r=e(303),i=e(304),o=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return i(n);var t=[];for(var e in Object(n))o.call(n,e)&&"constructor"!=e&&t.push(e);return t}},function(n,t){var e=Object.prototype;n.exports=function(n){var t=n&&n.constructor;return n===("function"==typeof t&&t.prototype||e)}},function(n,t,e){var r=e(305)(Object.keys,Object);n.exports=r},function(n,t){n.exports=function(n,t){return function(e){return n(t(e))}}},function(n,t,e){var r=e(307),i=e(106),o=e(308),a=e(178),s=e(309),c=e(45),l=e(168),u=l(r),p=l(i),f=l(o),d=l(a),h=l(s),m=c;(r&&"[object DataView]"!=m(new r(new ArrayBuffer(1)))||i&&"[object Map]"!=m(new i)||o&&"[object Promise]"!=m(o.resolve())||a&&"[object Set]"!=m(new a)||s&&"[object WeakMap]"!=m(new s))&&(m=function(n){var t=c(n),e="[object Object]"==t?n.constructor:void 0,r=e?l(e):"";if(r)switch(r){case u:return"[object DataView]";case p:return"[object Map]";case f:return"[object Promise]";case d:return"[object Set]";case h:return"[object WeakMap]"}return t}),n.exports=m},function(n,t,e){var r=e(30)(e(22),"DataView");n.exports=r},function(n,t,e){var r=e(30)(e(22),"Promise");n.exports=r},function(n,t,e){var r=e(30)(e(22),"WeakMap");n.exports=r},function(n,t,e){var r=e(179),i=e(173);n.exports=function(n){for(var t=i(n),e=t.length;e--;){var o=t[e],a=n[o];t[e]=[o,a,r(a)]}return t}},function(n,t,e){var r=e(169),i=e(312),o=e(319),a=e(111),s=e(179),c=e(180),l=e(82);n.exports=function(n,t){return a(n)&&s(t)?c(l(n),t):function(e){var a=i(e,n);return void 0===a&&a===t?o(e,n):r(t,a,3)}}},function(n,t,e){var r=e(181);n.exports=function(n,t,e){var i=null==n?void 0:r(n,t);return void 0===i?e:i}},function(n,t,e){var r=e(314),i=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,a=r((function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(""),n.replace(i,(function(n,e,r,i){t.push(r?i.replace(o,"$1"):e||n)})),t}));n.exports=a},function(n,t,e){var r=e(315);n.exports=function(n){var t=r(n,(function(n){return 500===e.size&&e.clear(),n})),e=t.cache;return t}},function(n,t,e){var r=e(108);function i(n,t){if("function"!=typeof n||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var e=function(){var r=arguments,i=t?t.apply(this,r):r[0],o=e.cache;if(o.has(i))return o.get(i);var a=n.apply(this,r);return e.cache=o.set(i,a)||o,a};return e.cache=new(i.Cache||r),e}i.Cache=r,n.exports=i},function(n,t,e){var r=e(317);n.exports=function(n){return null==n?"":r(n)}},function(n,t,e){var r=e(53),i=e(318),o=e(21),a=e(112),s=r?r.prototype:void 0,c=s?s.toString:void 0;n.exports=function n(t){if("string"==typeof t)return t;if(o(t))return i(t,n)+"";if(a(t))return c?c.call(t):"";var e=t+"";return"0"==e&&1/t==-1/0?"-0":e}},function(n,t){n.exports=function(n,t){for(var e=-1,r=null==n?0:n.length,i=Array(r);++e<r;)i[e]=t(n[e],e,n);return i}},function(n,t,e){var r=e(320),i=e(321);n.exports=function(n,t){return null!=n&&i(n,t,r)}},function(n,t){n.exports=function(n,t){return null!=n&&t in Object(n)}},function(n,t,e){var r=e(182),i=e(105),o=e(21),a=e(175),s=e(110),c=e(82);n.exports=function(n,t,e){for(var l=-1,u=(t=r(t,n)).length,p=!1;++l<u;){var f=c(t[l]);if(!(p=null!=n&&e(n,f)))break;n=n[f]}return p||++l!=u?p:!!(u=null==n?0:n.length)&&s(u)&&a(f,u)&&(o(n)||i(n))}},function(n,t,e){var r=e(323),i=e(324),o=e(111),a=e(82);n.exports=function(n){return o(n)?r(a(n)):i(n)}},function(n,t){n.exports=function(n){return function(t){return null==t?void 0:t[n]}}},function(n,t,e){var r=e(181);n.exports=function(n){return function(t){return r(t,n)}}},function(n,t,e){var r=e(113),i=e(326),o=e(328);n.exports=function(n,t){return o(i(n,t,r),n+"")}},function(n,t,e){var r=e(327),i=Math.max;n.exports=function(n,t,e){return t=i(void 0===t?n.length-1:t,0),function(){for(var o=arguments,a=-1,s=i(o.length-t,0),c=Array(s);++a<s;)c[a]=o[t+a];a=-1;for(var l=Array(t+1);++a<t;)l[a]=o[a];return l[t]=e(c),r(n,this,l)}}},function(n,t){n.exports=function(n,t,e){switch(e.length){case 0:return n.call(t);case 1:return n.call(t,e[0]);case 2:return n.call(t,e[0],e[1]);case 3:return n.call(t,e[0],e[1],e[2])}return n.apply(t,e)}},function(n,t,e){var r=e(329),i=e(332)(r);n.exports=i},function(n,t,e){var r=e(330),i=e(331),o=e(113),a=i?function(n,t){return i(n,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:o;n.exports=a},function(n,t){n.exports=function(n){return function(){return n}}},function(n,t,e){var r=e(30),i=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=i},function(n,t){var e=Date.now;n.exports=function(n){var t=0,r=0;return function(){var i=e(),o=16-(i-r);if(r=i,o>0){if(++t>=800)return arguments[0]}else t=0;return n.apply(void 0,arguments)}}},function(n,t,e){var r=e(171),i=e(334),o=e(339),a=e(172),s=e(340),c=e(109);n.exports=function(n,t,e){var l=-1,u=i,p=n.length,f=!0,d=[],h=d;if(e)f=!1,u=o;else if(p>=200){var m=t?null:s(n);if(m)return c(m);f=!1,u=a,h=new r}else h=t?[]:d;n:for(;++l<p;){var g=n[l],v=t?t(g):g;if(g=e||0!==g?g:0,f&&v==v){for(var _=h.length;_--;)if(h[_]===v)continue n;t&&h.push(v),d.push(g)}else u(h,v,e)||(h!==d&&h.push(v),d.push(g))}return d}},function(n,t,e){var r=e(335);n.exports=function(n,t){return!!(null==n?0:n.length)&&r(n,t,0)>-1}},function(n,t,e){var r=e(336),i=e(337),o=e(338);n.exports=function(n,t,e){return t==t?o(n,t,e):r(n,i,e)}},function(n,t){n.exports=function(n,t,e,r){for(var i=n.length,o=e+(r?1:-1);r?o--:++o<i;)if(t(n[o],o,n))return o;return-1}},function(n,t){n.exports=function(n){return n!=n}},function(n,t){n.exports=function(n,t,e){for(var r=e-1,i=n.length;++r<i;)if(n[r]===t)return r;return-1}},function(n,t){n.exports=function(n,t,e){for(var r=-1,i=null==n?0:n.length;++r<i;)if(e(t,n[r]))return!0;return!1}},function(n,t,e){var r=e(178),i=e(341),o=e(109),a=r&&1/o(new r([,-0]))[1]==1/0?function(n){return new r(n)}:i;n.exports=a},function(n,t){n.exports=function(){}},function(n,t,e){var r=e(177),i=e(38);n.exports=function(n){return i(n)&&r(n)}},function(n,t,e){},function(n,t,e){},function(n,t,e){"use strict";var r=e(0),i=e(2),o=e(28),a=e(6),s=e(10),c=e(73),l=e(47),u=r.Function,p=i([].concat),f=i([].join),d={},h=function(n,t,e){if(!s(d,t)){for(var r=[],i=0;i<t;i++)r[i]="a["+i+"]";d[t]=u("C,a","return new C("+f(r,",")+")")}return d[t](n,e)};n.exports=l?u.bind:function(n){var t=o(this),e=t.prototype,r=c(arguments,1),i=function(){var e=p(r,c(arguments));return this instanceof i?h(t,e.length,e):t.apply(n,e)};return a(e)&&(i.prototype=e),i}},function(n,t,e){"use strict";e(186)},function(n,t,e){"use strict";e(187)},function(n,t,e){"use strict";e.r(t);e(124),e(218),e(227),e(229);var r=e(75),i=(e(121),e(59),e(7),e(20),e(25),e(85),e(39),Object.freeze({}));function o(n){return null==n}function a(n){return null!=n}function s(n){return!0===n}function c(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function l(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function p(n){return"[object Object]"===u.call(n)}function f(n){return"[object RegExp]"===u.call(n)}function d(n){var t=parseFloat(String(n));return t>=0&&Math.floor(t)===t&&isFinite(n)}function h(n){return a(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function m(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===u?JSON.stringify(n,null,2):String(n)}function g(n){var t=parseFloat(n);return isNaN(t)?n:t}function v(n,t){for(var e=Object.create(null),r=n.split(","),i=0;i<r.length;i++)e[r[i]]=!0;return t?function(n){return e[n.toLowerCase()]}:function(n){return e[n]}}v("slot,component",!0);var _=v("key,ref,slot,slot-scope,is");function x(n,t){if(n.length){var e=n.indexOf(t);if(e>-1)return n.splice(e,1)}}var y=Object.prototype.hasOwnProperty;function w(n,t){return y.call(n,t)}function b(n){var t=Object.create(null);return function(e){return t[e]||(t[e]=n(e))}}var k=/-(\w)/g,$=b((function(n){return n.replace(k,(function(n,t){return t?t.toUpperCase():""}))})),S=b((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),z=/\B([A-Z])/g,j=b((function(n){return n.replace(z,"-$1").toLowerCase()}));var T=Function.prototype.bind?function(n,t){return n.bind(t)}:function(n,t){function e(e){var r=arguments.length;return r?r>1?n.apply(t,arguments):n.call(t,e):n.call(t)}return e._length=n.length,e};function C(n,t){t=t||0;for(var e=n.length-t,r=new Array(e);e--;)r[e]=n[e+t];return r}function E(n,t){for(var e in t)n[e]=t[e];return n}function P(n){for(var t={},e=0;e<n.length;e++)n[e]&&E(t,n[e]);return t}function A(n,t,e){}var I=function(n,t,e){return!1},O=function(n){return n};function N(n,t){if(n===t)return!0;var e=l(n),r=l(t);if(!e||!r)return!e&&!r&&String(n)===String(t);try{var i=Array.isArray(n),o=Array.isArray(t);if(i&&o)return n.length===t.length&&n.every((function(n,e){return N(n,t[e])}));if(n instanceof Date&&t instanceof Date)return n.getTime()===t.getTime();if(i||o)return!1;var a=Object.keys(n),s=Object.keys(t);return a.length===s.length&&a.every((function(e){return N(n[e],t[e])}))}catch(n){return!1}}function q(n,t){for(var e=0;e<n.length;e++)if(N(n[e],t))return e;return-1}function L(n){var t=!1;return function(){t||(t=!0,n.apply(this,arguments))}}var R=["component","directive","filter"],D=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],M={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:I,isReservedAttr:I,isUnknownElement:I,getTagNamespace:A,parsePlatformTagName:O,mustUseProp:I,async:!0,_lifecycleHooks:D},U=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function F(n,t,e,r){Object.defineProperty(n,t,{value:e,enumerable:!!r,writable:!0,configurable:!0})}var B=new RegExp("[^"+U.source+".$_\\d]");var H,G="__proto__"in{},W="undefined"!=typeof window,V="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,K=V&&WXEnvironment.platform.toLowerCase(),Q=W&&window.navigator.userAgent.toLowerCase(),Y=Q&&/msie|trident/.test(Q),J=Q&&Q.indexOf("msie 9.0")>0,X=Q&&Q.indexOf("edge/")>0,Z=(Q&&Q.indexOf("android"),Q&&/iphone|ipad|ipod|ios/.test(Q)||"ios"===K),nn=(Q&&/chrome\/\d+/.test(Q),Q&&/phantomjs/.test(Q),Q&&Q.match(/firefox\/(\d+)/)),tn={}.watch,en=!1;if(W)try{var rn={};Object.defineProperty(rn,"passive",{get:function(){en=!0}}),window.addEventListener("test-passive",null,rn)}catch(n){}var on=function(){return void 0===H&&(H=!W&&!V&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),H},an=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function sn(n){return"function"==typeof n&&/native code/.test(n.toString())}var cn,ln="undefined"!=typeof Symbol&&sn(Symbol)&&"undefined"!=typeof Reflect&&sn(Reflect.ownKeys);cn="undefined"!=typeof Set&&sn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var un=A,pn=0,fn=function(){this.id=pn++,this.subs=[]};fn.prototype.addSub=function(n){this.subs.push(n)},fn.prototype.removeSub=function(n){x(this.subs,n)},fn.prototype.depend=function(){fn.target&&fn.target.addDep(this)},fn.prototype.notify=function(){var n=this.subs.slice();for(var t=0,e=n.length;t<e;t++)n[t].update()},fn.target=null;var dn=[];function hn(n){dn.push(n),fn.target=n}function mn(){dn.pop(),fn.target=dn[dn.length-1]}var gn=function(n,t,e,r,i,o,a,s){this.tag=n,this.data=t,this.children=e,this.text=r,this.elm=i,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},vn={child:{configurable:!0}};vn.child.get=function(){return this.componentInstance},Object.defineProperties(gn.prototype,vn);var _n=function(n){void 0===n&&(n="");var t=new gn;return t.text=n,t.isComment=!0,t};function xn(n){return new gn(void 0,void 0,void 0,String(n))}function yn(n){var t=new gn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return t.ns=n.ns,t.isStatic=n.isStatic,t.key=n.key,t.isComment=n.isComment,t.fnContext=n.fnContext,t.fnOptions=n.fnOptions,t.fnScopeId=n.fnScopeId,t.asyncMeta=n.asyncMeta,t.isCloned=!0,t}var wn=Array.prototype,bn=Object.create(wn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var t=wn[n];F(bn,n,(function(){for(var e=[],r=arguments.length;r--;)e[r]=arguments[r];var i,o=t.apply(this,e),a=this.__ob__;switch(n){case"push":case"unshift":i=e;break;case"splice":i=e.slice(2)}return i&&a.observeArray(i),a.dep.notify(),o}))}));var kn=Object.getOwnPropertyNames(bn),$n=!0;function Sn(n){$n=n}var zn=function(n){this.value=n,this.dep=new fn,this.vmCount=0,F(n,"__ob__",this),Array.isArray(n)?(G?function(n,t){n.__proto__=t}(n,bn):function(n,t,e){for(var r=0,i=e.length;r<i;r++){var o=e[r];F(n,o,t[o])}}(n,bn,kn),this.observeArray(n)):this.walk(n)};function jn(n,t){var e;if(l(n)&&!(n instanceof gn))return w(n,"__ob__")&&n.__ob__ instanceof zn?e=n.__ob__:$n&&!on()&&(Array.isArray(n)||p(n))&&Object.isExtensible(n)&&!n._isVue&&(e=new zn(n)),t&&e&&e.vmCount++,e}function Tn(n,t,e,r,i){var o=new fn,a=Object.getOwnPropertyDescriptor(n,t);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set;s&&!c||2!==arguments.length||(e=n[t]);var l=!i&&jn(e);Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(n):e;return fn.target&&(o.depend(),l&&(l.dep.depend(),Array.isArray(t)&&Pn(t))),t},set:function(t){var r=s?s.call(n):e;t===r||t!=t&&r!=r||s&&!c||(c?c.call(n,t):e=t,l=!i&&jn(t),o.notify())}})}}function Cn(n,t,e){if(Array.isArray(n)&&d(t))return n.length=Math.max(n.length,t),n.splice(t,1,e),e;if(t in n&&!(t in Object.prototype))return n[t]=e,e;var r=n.__ob__;return n._isVue||r&&r.vmCount?e:r?(Tn(r.value,t,e),r.dep.notify(),e):(n[t]=e,e)}function En(n,t){if(Array.isArray(n)&&d(t))n.splice(t,1);else{var e=n.__ob__;n._isVue||e&&e.vmCount||w(n,t)&&(delete n[t],e&&e.dep.notify())}}function Pn(n){for(var t=void 0,e=0,r=n.length;e<r;e++)(t=n[e])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Pn(t)}zn.prototype.walk=function(n){for(var t=Object.keys(n),e=0;e<t.length;e++)Tn(n,t[e])},zn.prototype.observeArray=function(n){for(var t=0,e=n.length;t<e;t++)jn(n[t])};var An=M.optionMergeStrategies;function In(n,t){if(!t)return n;for(var e,r,i,o=ln?Reflect.ownKeys(t):Object.keys(t),a=0;a<o.length;a++)"__ob__"!==(e=o[a])&&(r=n[e],i=t[e],w(n,e)?r!==i&&p(r)&&p(i)&&In(r,i):Cn(n,e,i));return n}function On(n,t,e){return e?function(){var r="function"==typeof t?t.call(e,e):t,i="function"==typeof n?n.call(e,e):n;return r?In(r,i):i}:t?n?function(){return In("function"==typeof t?t.call(this,this):t,"function"==typeof n?n.call(this,this):n)}:t:n}function Nn(n,t){var e=t?n?n.concat(t):Array.isArray(t)?t:[t]:n;return e?function(n){for(var t=[],e=0;e<n.length;e++)-1===t.indexOf(n[e])&&t.push(n[e]);return t}(e):e}function qn(n,t,e,r){var i=Object.create(n||null);return t?E(i,t):i}An.data=function(n,t,e){return e?On(n,t,e):t&&"function"!=typeof t?n:On(n,t)},D.forEach((function(n){An[n]=Nn})),R.forEach((function(n){An[n+"s"]=qn})),An.watch=function(n,t,e,r){if(n===tn&&(n=void 0),t===tn&&(t=void 0),!t)return Object.create(n||null);if(!n)return t;var i={};for(var o in E(i,n),t){var a=i[o],s=t[o];a&&!Array.isArray(a)&&(a=[a]),i[o]=a?a.concat(s):Array.isArray(s)?s:[s]}return i},An.props=An.methods=An.inject=An.computed=function(n,t,e,r){if(!n)return t;var i=Object.create(null);return E(i,n),t&&E(i,t),i},An.provide=On;var Ln=function(n,t){return void 0===t?n:t};function Rn(n,t,e){if("function"==typeof t&&(t=t.options),function(n,t){var e=n.props;if(e){var r,i,o={};if(Array.isArray(e))for(r=e.length;r--;)"string"==typeof(i=e[r])&&(o[$(i)]={type:null});else if(p(e))for(var a in e)i=e[a],o[$(a)]=p(i)?i:{type:i};else 0;n.props=o}}(t),function(n,t){var e=n.inject;if(e){var r=n.inject={};if(Array.isArray(e))for(var i=0;i<e.length;i++)r[e[i]]={from:e[i]};else if(p(e))for(var o in e){var a=e[o];r[o]=p(a)?E({from:o},a):{from:a}}else 0}}(t),function(n){var t=n.directives;if(t)for(var e in t){var r=t[e];"function"==typeof r&&(t[e]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(n=Rn(n,t.extends,e)),t.mixins))for(var r=0,i=t.mixins.length;r<i;r++)n=Rn(n,t.mixins[r],e);var o,a={};for(o in n)s(o);for(o in t)w(n,o)||s(o);function s(r){var i=An[r]||Ln;a[r]=i(n[r],t[r],e,r)}return a}function Dn(n,t,e,r){if("string"==typeof e){var i=n[t];if(w(i,e))return i[e];var o=$(e);if(w(i,o))return i[o];var a=S(o);return w(i,a)?i[a]:i[e]||i[o]||i[a]}}function Mn(n,t,e,r){var i=t[n],o=!w(e,n),a=e[n],s=Hn(Boolean,i.type);if(s>-1)if(o&&!w(i,"default"))a=!1;else if(""===a||a===j(n)){var c=Hn(String,i.type);(c<0||s<c)&&(a=!0)}if(void 0===a){a=function(n,t,e){if(!w(t,"default"))return;var r=t.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[e]&&void 0!==n._props[e])return n._props[e];return"function"==typeof r&&"Function"!==Fn(t.type)?r.call(n):r}(r,i,n);var l=$n;Sn(!0),jn(a),Sn(l)}return a}var Un=/^\s*function (\w+)/;function Fn(n){var t=n&&n.toString().match(Un);return t?t[1]:""}function Bn(n,t){return Fn(n)===Fn(t)}function Hn(n,t){if(!Array.isArray(t))return Bn(t,n)?0:-1;for(var e=0,r=t.length;e<r;e++)if(Bn(t[e],n))return e;return-1}function Gn(n,t,e){hn();try{if(t)for(var r=t;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var o=0;o<i.length;o++)try{if(!1===i[o].call(r,n,t,e))return}catch(n){Vn(n,r,"errorCaptured hook")}}Vn(n,t,e)}finally{mn()}}function Wn(n,t,e,r,i){var o;try{(o=e?n.apply(t,e):n.call(t))&&!o._isVue&&h(o)&&!o._handled&&(o.catch((function(n){return Gn(n,r,i+" (Promise/async)")})),o._handled=!0)}catch(n){Gn(n,r,i)}return o}function Vn(n,t,e){if(M.errorHandler)try{return M.errorHandler.call(null,n,t,e)}catch(t){t!==n&&Kn(t,null,"config.errorHandler")}Kn(n,t,e)}function Kn(n,t,e){if(!W&&!V||"undefined"==typeof console)throw n;console.error(n)}var Qn,Yn=!1,Jn=[],Xn=!1;function Zn(){Xn=!1;var n=Jn.slice(0);Jn.length=0;for(var t=0;t<n.length;t++)n[t]()}if("undefined"!=typeof Promise&&sn(Promise)){var nt=Promise.resolve();Qn=function(){nt.then(Zn),Z&&setTimeout(A)},Yn=!0}else if(Y||"undefined"==typeof MutationObserver||!sn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Qn="undefined"!=typeof setImmediate&&sn(setImmediate)?function(){setImmediate(Zn)}:function(){setTimeout(Zn,0)};else{var tt=1,et=new MutationObserver(Zn),rt=document.createTextNode(String(tt));et.observe(rt,{characterData:!0}),Qn=function(){tt=(tt+1)%2,rt.data=String(tt)},Yn=!0}function it(n,t){var e;if(Jn.push((function(){if(n)try{n.call(t)}catch(n){Gn(n,t,"nextTick")}else e&&e(t)})),Xn||(Xn=!0,Qn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){e=n}))}var ot=new cn;function at(n){!function n(t,e){var r,i,o=Array.isArray(t);if(!o&&!l(t)||Object.isFrozen(t)||t instanceof gn)return;if(t.__ob__){var a=t.__ob__.dep.id;if(e.has(a))return;e.add(a)}if(o)for(r=t.length;r--;)n(t[r],e);else for(i=Object.keys(t),r=i.length;r--;)n(t[i[r]],e)}(n,ot),ot.clear()}var st=b((function(n){var t="&"===n.charAt(0),e="~"===(n=t?n.slice(1):n).charAt(0),r="!"===(n=e?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:e,capture:r,passive:t}}));function ct(n,t){function e(){var n=arguments,r=e.fns;if(!Array.isArray(r))return Wn(r,null,arguments,t,"v-on handler");for(var i=r.slice(),o=0;o<i.length;o++)Wn(i[o],null,n,t,"v-on handler")}return e.fns=n,e}function lt(n,t,e,r,i,a){var c,l,u,p;for(c in n)l=n[c],u=t[c],p=st(c),o(l)||(o(u)?(o(l.fns)&&(l=n[c]=ct(l,a)),s(p.once)&&(l=n[c]=i(p.name,l,p.capture)),e(p.name,l,p.capture,p.passive,p.params)):l!==u&&(u.fns=l,n[c]=u));for(c in t)o(n[c])&&r((p=st(c)).name,t[c],p.capture)}function ut(n,t,e){var r;n instanceof gn&&(n=n.data.hook||(n.data.hook={}));var i=n[t];function c(){e.apply(this,arguments),x(r.fns,c)}o(i)?r=ct([c]):a(i.fns)&&s(i.merged)?(r=i).fns.push(c):r=ct([i,c]),r.merged=!0,n[t]=r}function pt(n,t,e,r,i){if(a(t)){if(w(t,e))return n[e]=t[e],i||delete t[e],!0;if(w(t,r))return n[e]=t[r],i||delete t[r],!0}return!1}function ft(n){return c(n)?[xn(n)]:Array.isArray(n)?function n(t,e){var r,i,l,u,p=[];for(r=0;r<t.length;r++)o(i=t[r])||"boolean"==typeof i||(l=p.length-1,u=p[l],Array.isArray(i)?i.length>0&&(dt((i=n(i,(e||"")+"_"+r))[0])&&dt(u)&&(p[l]=xn(u.text+i[0].text),i.shift()),p.push.apply(p,i)):c(i)?dt(u)?p[l]=xn(u.text+i):""!==i&&p.push(xn(i)):dt(i)&&dt(u)?p[l]=xn(u.text+i.text):(s(t._isVList)&&a(i.tag)&&o(i.key)&&a(e)&&(i.key="__vlist"+e+"_"+r+"__"),p.push(i)));return p}(n):void 0}function dt(n){return a(n)&&a(n.text)&&!1===n.isComment}function ht(n,t){if(n){for(var e=Object.create(null),r=ln?Reflect.ownKeys(n):Object.keys(n),i=0;i<r.length;i++){var o=r[i];if("__ob__"!==o){for(var a=n[o].from,s=t;s;){if(s._provided&&w(s._provided,a)){e[o]=s._provided[a];break}s=s.$parent}if(!s)if("default"in n[o]){var c=n[o].default;e[o]="function"==typeof c?c.call(t):c}else 0}}return e}}function mt(n,t){if(!n||!n.length)return{};for(var e={},r=0,i=n.length;r<i;r++){var o=n[r],a=o.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,o.context!==t&&o.fnContext!==t||!a||null==a.slot)(e.default||(e.default=[])).push(o);else{var s=a.slot,c=e[s]||(e[s]=[]);"template"===o.tag?c.push.apply(c,o.children||[]):c.push(o)}}for(var l in e)e[l].every(gt)&&delete e[l];return e}function gt(n){return n.isComment&&!n.asyncFactory||" "===n.text}function vt(n){return n.isComment&&n.asyncFactory}function _t(n,t,e){var r,o=Object.keys(t).length>0,a=n?!!n.$stable:!o,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(a&&e&&e!==i&&s===e.$key&&!o&&!e.$hasNormal)return e;for(var c in r={},n)n[c]&&"$"!==c[0]&&(r[c]=xt(t,c,n[c]))}else r={};for(var l in t)l in r||(r[l]=yt(t,l));return n&&Object.isExtensible(n)&&(n._normalized=r),F(r,"$stable",a),F(r,"$key",s),F(r,"$hasNormal",o),r}function xt(n,t,e){var r=function(){var n=arguments.length?e.apply(null,arguments):e({}),t=(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:ft(n))&&n[0];return n&&(!t||1===n.length&&t.isComment&&!vt(t))?void 0:n};return e.proxy&&Object.defineProperty(n,t,{get:r,enumerable:!0,configurable:!0}),r}function yt(n,t){return function(){return n[t]}}function wt(n,t){var e,r,i,o,s;if(Array.isArray(n)||"string"==typeof n)for(e=new Array(n.length),r=0,i=n.length;r<i;r++)e[r]=t(n[r],r);else if("number"==typeof n)for(e=new Array(n),r=0;r<n;r++)e[r]=t(r+1,r);else if(l(n))if(ln&&n[Symbol.iterator]){e=[];for(var c=n[Symbol.iterator](),u=c.next();!u.done;)e.push(t(u.value,e.length)),u=c.next()}else for(o=Object.keys(n),e=new Array(o.length),r=0,i=o.length;r<i;r++)s=o[r],e[r]=t(n[s],s,r);return a(e)||(e=[]),e._isVList=!0,e}function bt(n,t,e,r){var i,o=this.$scopedSlots[n];o?(e=e||{},r&&(e=E(E({},r),e)),i=o(e)||("function"==typeof t?t():t)):i=this.$slots[n]||("function"==typeof t?t():t);var a=e&&e.slot;return a?this.$createElement("template",{slot:a},i):i}function kt(n){return Dn(this.$options,"filters",n)||O}function $t(n,t){return Array.isArray(n)?-1===n.indexOf(t):n!==t}function St(n,t,e,r,i){var o=M.keyCodes[t]||e;return i&&r&&!M.keyCodes[t]?$t(i,r):o?$t(o,n):r?j(r)!==t:void 0===n}function zt(n,t,e,r,i){if(e)if(l(e)){var o;Array.isArray(e)&&(e=P(e));var a=function(a){if("class"===a||"style"===a||_(a))o=n;else{var s=n.attrs&&n.attrs.type;o=r||M.mustUseProp(t,s,a)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var c=$(a),l=j(a);c in o||l in o||(o[a]=e[a],i&&((n.on||(n.on={}))["update:"+a]=function(n){e[a]=n}))};for(var s in e)a(s)}else;return n}function jt(n,t){var e=this._staticTrees||(this._staticTrees=[]),r=e[n];return r&&!t||Ct(r=e[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),r}function Tt(n,t,e){return Ct(n,"__once__"+t+(e?"_"+e:""),!0),n}function Ct(n,t,e){if(Array.isArray(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&Et(n[r],t+"_"+r,e);else Et(n,t,e)}function Et(n,t,e){n.isStatic=!0,n.key=t,n.isOnce=e}function Pt(n,t){if(t)if(p(t)){var e=n.on=n.on?E({},n.on):{};for(var r in t){var i=e[r],o=t[r];e[r]=i?[].concat(i,o):o}}else;return n}function At(n,t,e,r){t=t||{$stable:!e};for(var i=0;i<n.length;i++){var o=n[i];Array.isArray(o)?At(o,t,e):o&&(o.proxy&&(o.fn.proxy=!0),t[o.key]=o.fn)}return r&&(t.$key=r),t}function It(n,t){for(var e=0;e<t.length;e+=2){var r=t[e];"string"==typeof r&&r&&(n[t[e]]=t[e+1])}return n}function Ot(n,t){return"string"==typeof n?t+n:n}function Nt(n){n._o=Tt,n._n=g,n._s=m,n._l=wt,n._t=bt,n._q=N,n._i=q,n._m=jt,n._f=kt,n._k=St,n._b=zt,n._v=xn,n._e=_n,n._u=At,n._g=Pt,n._d=It,n._p=Ot}function qt(n,t,e,r,o){var a,c=this,l=o.options;w(r,"_uid")?(a=Object.create(r))._original=r:(a=r,r=r._original);var u=s(l._compiled),p=!u;this.data=n,this.props=t,this.children=e,this.parent=r,this.listeners=n.on||i,this.injections=ht(l.inject,r),this.slots=function(){return c.$slots||_t(n.scopedSlots,c.$slots=mt(e,r)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return _t(n.scopedSlots,this.slots())}}),u&&(this.$options=l,this.$slots=this.slots(),this.$scopedSlots=_t(n.scopedSlots,this.$slots)),l._scopeId?this._c=function(n,t,e,i){var o=Bt(a,n,t,e,i,p);return o&&!Array.isArray(o)&&(o.fnScopeId=l._scopeId,o.fnContext=r),o}:this._c=function(n,t,e,r){return Bt(a,n,t,e,r,p)}}function Lt(n,t,e,r,i){var o=yn(n);return o.fnContext=e,o.fnOptions=r,t.slot&&((o.data||(o.data={})).slot=t.slot),o}function Rt(n,t){for(var e in t)n[$(e)]=t[e]}Nt(qt.prototype);var Dt={init:function(n,t){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var e=n;Dt.prepatch(e,e)}else{(n.componentInstance=function(n,t){var e={_isComponent:!0,_parentVnode:n,parent:t},r=n.data.inlineTemplate;a(r)&&(e.render=r.render,e.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(e)}(n,Xt)).$mount(t?n.elm:void 0,t)}},prepatch:function(n,t){var e=t.componentOptions;!function(n,t,e,r,o){0;var a=r.data.scopedSlots,s=n.$scopedSlots,c=!!(a&&!a.$stable||s!==i&&!s.$stable||a&&n.$scopedSlots.$key!==a.$key||!a&&n.$scopedSlots.$key),l=!!(o||n.$options._renderChildren||c);n.$options._parentVnode=r,n.$vnode=r,n._vnode&&(n._vnode.parent=r);if(n.$options._renderChildren=o,n.$attrs=r.data.attrs||i,n.$listeners=e||i,t&&n.$options.props){Sn(!1);for(var u=n._props,p=n.$options._propKeys||[],f=0;f<p.length;f++){var d=p[f],h=n.$options.props;u[d]=Mn(d,h,t,n)}Sn(!0),n.$options.propsData=t}e=e||i;var m=n.$options._parentListeners;n.$options._parentListeners=e,Jt(n,e,m),l&&(n.$slots=mt(o,r.context),n.$forceUpdate());0}(t.componentInstance=n.componentInstance,e.propsData,e.listeners,t,e.children)},insert:function(n){var t,e=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,ee(r,"mounted")),n.data.keepAlive&&(e._isMounted?((t=r)._inactive=!1,ie.push(t)):te(r,!0))},destroy:function(n){var t=n.componentInstance;t._isDestroyed||(n.data.keepAlive?function n(t,e){if(e&&(t._directInactive=!0,ne(t)))return;if(!t._inactive){t._inactive=!0;for(var r=0;r<t.$children.length;r++)n(t.$children[r]);ee(t,"deactivated")}}(t,!0):t.$destroy())}},Mt=Object.keys(Dt);function Ut(n,t,e,r,c){if(!o(n)){var u=e.$options._base;if(l(n)&&(n=u.extend(n)),"function"==typeof n){var p;if(o(n.cid)&&void 0===(n=function(n,t){if(s(n.error)&&a(n.errorComp))return n.errorComp;if(a(n.resolved))return n.resolved;var e=Gt;e&&a(n.owners)&&-1===n.owners.indexOf(e)&&n.owners.push(e);if(s(n.loading)&&a(n.loadingComp))return n.loadingComp;if(e&&!a(n.owners)){var r=n.owners=[e],i=!0,c=null,u=null;e.$on("hook:destroyed",(function(){return x(r,e)}));var p=function(n){for(var t=0,e=r.length;t<e;t++)r[t].$forceUpdate();n&&(r.length=0,null!==c&&(clearTimeout(c),c=null),null!==u&&(clearTimeout(u),u=null))},f=L((function(e){n.resolved=Wt(e,t),i?r.length=0:p(!0)})),d=L((function(t){a(n.errorComp)&&(n.error=!0,p(!0))})),m=n(f,d);return l(m)&&(h(m)?o(n.resolved)&&m.then(f,d):h(m.component)&&(m.component.then(f,d),a(m.error)&&(n.errorComp=Wt(m.error,t)),a(m.loading)&&(n.loadingComp=Wt(m.loading,t),0===m.delay?n.loading=!0:c=setTimeout((function(){c=null,o(n.resolved)&&o(n.error)&&(n.loading=!0,p(!1))}),m.delay||200)),a(m.timeout)&&(u=setTimeout((function(){u=null,o(n.resolved)&&d(null)}),m.timeout)))),i=!1,n.loading?n.loadingComp:n.resolved}}(p=n,u)))return function(n,t,e,r,i){var o=_n();return o.asyncFactory=n,o.asyncMeta={data:t,context:e,children:r,tag:i},o}(p,t,e,r,c);t=t||{},$e(n),a(t.model)&&function(n,t){var e=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(t.attrs||(t.attrs={}))[e]=t.model.value;var i=t.on||(t.on={}),o=i[r],s=t.model.callback;a(o)?(Array.isArray(o)?-1===o.indexOf(s):o!==s)&&(i[r]=[s].concat(o)):i[r]=s}(n.options,t);var f=function(n,t,e){var r=t.options.props;if(!o(r)){var i={},s=n.attrs,c=n.props;if(a(s)||a(c))for(var l in r){var u=j(l);pt(i,c,l,u,!0)||pt(i,s,l,u,!1)}return i}}(t,n);if(s(n.options.functional))return function(n,t,e,r,o){var s=n.options,c={},l=s.props;if(a(l))for(var u in l)c[u]=Mn(u,l,t||i);else a(e.attrs)&&Rt(c,e.attrs),a(e.props)&&Rt(c,e.props);var p=new qt(e,c,o,r,n),f=s.render.call(null,p._c,p);if(f instanceof gn)return Lt(f,e,p.parent,s,p);if(Array.isArray(f)){for(var d=ft(f)||[],h=new Array(d.length),m=0;m<d.length;m++)h[m]=Lt(d[m],e,p.parent,s,p);return h}}(n,f,t,e,r);var d=t.on;if(t.on=t.nativeOn,s(n.options.abstract)){var m=t.slot;t={},m&&(t.slot=m)}!function(n){for(var t=n.hook||(n.hook={}),e=0;e<Mt.length;e++){var r=Mt[e],i=t[r],o=Dt[r];i===o||i&&i._merged||(t[r]=i?Ft(o,i):o)}}(t);var g=n.options.name||c;return new gn("vue-component-"+n.cid+(g?"-"+g:""),t,void 0,void 0,void 0,e,{Ctor:n,propsData:f,listeners:d,tag:c,children:r},p)}}}function Ft(n,t){var e=function(e,r){n(e,r),t(e,r)};return e._merged=!0,e}function Bt(n,t,e,r,i,u){return(Array.isArray(e)||c(e))&&(i=r,r=e,e=void 0),s(u)&&(i=2),function(n,t,e,r,i){if(a(e)&&a(e.__ob__))return _n();a(e)&&a(e.is)&&(t=e.is);if(!t)return _n();0;Array.isArray(r)&&"function"==typeof r[0]&&((e=e||{}).scopedSlots={default:r[0]},r.length=0);2===i?r=ft(r):1===i&&(r=function(n){for(var t=0;t<n.length;t++)if(Array.isArray(n[t]))return Array.prototype.concat.apply([],n);return n}(r));var c,u;if("string"==typeof t){var p;u=n.$vnode&&n.$vnode.ns||M.getTagNamespace(t),c=M.isReservedTag(t)?new gn(M.parsePlatformTagName(t),e,r,void 0,void 0,n):e&&e.pre||!a(p=Dn(n.$options,"components",t))?new gn(t,e,r,void 0,void 0,n):Ut(p,e,n,r,t)}else c=Ut(t,e,n,r);return Array.isArray(c)?c:a(c)?(a(u)&&function n(t,e,r){t.ns=e,"foreignObject"===t.tag&&(e=void 0,r=!0);if(a(t.children))for(var i=0,c=t.children.length;i<c;i++){var l=t.children[i];a(l.tag)&&(o(l.ns)||s(r)&&"svg"!==l.tag)&&n(l,e,r)}}(c,u),a(e)&&function(n){l(n.style)&&at(n.style);l(n.class)&&at(n.class)}(e),c):_n()}(n,t,e,r,i)}var Ht,Gt=null;function Wt(n,t){return(n.__esModule||ln&&"Module"===n[Symbol.toStringTag])&&(n=n.default),l(n)?t.extend(n):n}function Vt(n){if(Array.isArray(n))for(var t=0;t<n.length;t++){var e=n[t];if(a(e)&&(a(e.componentOptions)||vt(e)))return e}}function Kt(n,t){Ht.$on(n,t)}function Qt(n,t){Ht.$off(n,t)}function Yt(n,t){var e=Ht;return function r(){var i=t.apply(null,arguments);null!==i&&e.$off(n,r)}}function Jt(n,t,e){Ht=n,lt(t,e||{},Kt,Qt,Yt,n),Ht=void 0}var Xt=null;function Zt(n){var t=Xt;return Xt=n,function(){Xt=t}}function ne(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function te(n,t){if(t){if(n._directInactive=!1,ne(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var e=0;e<n.$children.length;e++)te(n.$children[e]);ee(n,"activated")}}function ee(n,t){hn();var e=n.$options[t],r=t+" hook";if(e)for(var i=0,o=e.length;i<o;i++)Wn(e[i],n,null,n,r);n._hasHookEvent&&n.$emit("hook:"+t),mn()}var re=[],ie=[],oe={},ae=!1,se=!1,ce=0;var le=0,ue=Date.now;if(W&&!Y){var pe=window.performance;pe&&"function"==typeof pe.now&&ue()>document.createEvent("Event").timeStamp&&(ue=function(){return pe.now()})}function fe(){var n,t;for(le=ue(),se=!0,re.sort((function(n,t){return n.id-t.id})),ce=0;ce<re.length;ce++)(n=re[ce]).before&&n.before(),t=n.id,oe[t]=null,n.run();var e=ie.slice(),r=re.slice();ce=re.length=ie.length=0,oe={},ae=se=!1,function(n){for(var t=0;t<n.length;t++)n[t]._inactive=!0,te(n[t],!0)}(e),function(n){var t=n.length;for(;t--;){var e=n[t],r=e.vm;r._watcher===e&&r._isMounted&&!r._isDestroyed&&ee(r,"updated")}}(r),an&&M.devtools&&an.emit("flush")}var de=0,he=function(n,t,e,r,i){this.vm=n,i&&(n._watcher=this),n._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=e,this.id=++de,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new cn,this.newDepIds=new cn,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(n){if(!B.test(n)){var t=n.split(".");return function(n){for(var e=0;e<t.length;e++){if(!n)return;n=n[t[e]]}return n}}}(t),this.getter||(this.getter=A)),this.value=this.lazy?void 0:this.get()};he.prototype.get=function(){var n;hn(this);var t=this.vm;try{n=this.getter.call(t,t)}catch(n){if(!this.user)throw n;Gn(n,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&at(n),mn(),this.cleanupDeps()}return n},he.prototype.addDep=function(n){var t=n.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(n),this.depIds.has(t)||n.addSub(this))},he.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var t=this.deps[n];this.newDepIds.has(t.id)||t.removeSub(this)}var e=this.depIds;this.depIds=this.newDepIds,this.newDepIds=e,this.newDepIds.clear(),e=this.deps,this.deps=this.newDeps,this.newDeps=e,this.newDeps.length=0},he.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var t=n.id;if(null==oe[t]){if(oe[t]=!0,se){for(var e=re.length-1;e>ce&&re[e].id>n.id;)e--;re.splice(e+1,0,n)}else re.push(n);ae||(ae=!0,it(fe))}}(this)},he.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||l(n)||this.deep){var t=this.value;if(this.value=n,this.user){var e='callback for watcher "'+this.expression+'"';Wn(this.cb,this.vm,[n,t],this.vm,e)}else this.cb.call(this.vm,n,t)}}},he.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},he.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},he.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||x(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var me={enumerable:!0,configurable:!0,get:A,set:A};function ge(n,t,e){me.get=function(){return this[t][e]},me.set=function(n){this[t][e]=n},Object.defineProperty(n,e,me)}function ve(n){n._watchers=[];var t=n.$options;t.props&&function(n,t){var e=n.$options.propsData||{},r=n._props={},i=n.$options._propKeys=[];n.$parent&&Sn(!1);var o=function(o){i.push(o);var a=Mn(o,t,e,n);Tn(r,o,a),o in n||ge(n,"_props",o)};for(var a in t)o(a);Sn(!0)}(n,t.props),t.methods&&function(n,t){n.$options.props;for(var e in t)n[e]="function"!=typeof t[e]?A:T(t[e],n)}(n,t.methods),t.data?function(n){var t=n.$options.data;p(t=n._data="function"==typeof t?function(n,t){hn();try{return n.call(t,t)}catch(n){return Gn(n,t,"data()"),{}}finally{mn()}}(t,n):t||{})||(t={});var e=Object.keys(t),r=n.$options.props,i=(n.$options.methods,e.length);for(;i--;){var o=e[i];0,r&&w(r,o)||(a=void 0,36!==(a=(o+"").charCodeAt(0))&&95!==a&&ge(n,"_data",o))}var a;jn(t,!0)}(n):jn(n._data={},!0),t.computed&&function(n,t){var e=n._computedWatchers=Object.create(null),r=on();for(var i in t){var o=t[i],a="function"==typeof o?o:o.get;0,r||(e[i]=new he(n,a||A,A,_e)),i in n||xe(n,i,o)}}(n,t.computed),t.watch&&t.watch!==tn&&function(n,t){for(var e in t){var r=t[e];if(Array.isArray(r))for(var i=0;i<r.length;i++)be(n,e,r[i]);else be(n,e,r)}}(n,t.watch)}var _e={lazy:!0};function xe(n,t,e){var r=!on();"function"==typeof e?(me.get=r?ye(t):we(e),me.set=A):(me.get=e.get?r&&!1!==e.cache?ye(t):we(e.get):A,me.set=e.set||A),Object.defineProperty(n,t,me)}function ye(n){return function(){var t=this._computedWatchers&&this._computedWatchers[n];if(t)return t.dirty&&t.evaluate(),fn.target&&t.depend(),t.value}}function we(n){return function(){return n.call(this,this)}}function be(n,t,e,r){return p(e)&&(r=e,e=e.handler),"string"==typeof e&&(e=n[e]),n.$watch(t,e,r)}var ke=0;function $e(n){var t=n.options;if(n.super){var e=$e(n.super);if(e!==n.superOptions){n.superOptions=e;var r=function(n){var t,e=n.options,r=n.sealedOptions;for(var i in e)e[i]!==r[i]&&(t||(t={}),t[i]=e[i]);return t}(n);r&&E(n.extendOptions,r),(t=n.options=Rn(e,n.extendOptions)).name&&(t.components[t.name]=n)}}return t}function Se(n){this._init(n)}function ze(n){n.cid=0;var t=1;n.extend=function(n){n=n||{};var e=this,r=e.cid,i=n._Ctor||(n._Ctor={});if(i[r])return i[r];var o=n.name||e.options.name;var a=function(n){this._init(n)};return(a.prototype=Object.create(e.prototype)).constructor=a,a.cid=t++,a.options=Rn(e.options,n),a.super=e,a.options.props&&function(n){var t=n.options.props;for(var e in t)ge(n.prototype,"_props",e)}(a),a.options.computed&&function(n){var t=n.options.computed;for(var e in t)xe(n.prototype,e,t[e])}(a),a.extend=e.extend,a.mixin=e.mixin,a.use=e.use,R.forEach((function(n){a[n]=e[n]})),o&&(a.options.components[o]=a),a.superOptions=e.options,a.extendOptions=n,a.sealedOptions=E({},a.options),i[r]=a,a}}function je(n){return n&&(n.Ctor.options.name||n.tag)}function Te(n,t){return Array.isArray(n)?n.indexOf(t)>-1:"string"==typeof n?n.split(",").indexOf(t)>-1:!!f(n)&&n.test(t)}function Ce(n,t){var e=n.cache,r=n.keys,i=n._vnode;for(var o in e){var a=e[o];if(a){var s=a.name;s&&!t(s)&&Ee(e,o,r,i)}}}function Ee(n,t,e,r){var i=n[t];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),n[t]=null,x(e,t)}Se.prototype._init=function(n){var t=this;t._uid=ke++,t._isVue=!0,n&&n._isComponent?function(n,t){var e=n.$options=Object.create(n.constructor.options),r=t._parentVnode;e.parent=t.parent,e._parentVnode=r;var i=r.componentOptions;e.propsData=i.propsData,e._parentListeners=i.listeners,e._renderChildren=i.children,e._componentTag=i.tag,t.render&&(e.render=t.render,e.staticRenderFns=t.staticRenderFns)}(t,n):t.$options=Rn($e(t.constructor),n||{},t),t._renderProxy=t,t._self=t,function(n){var t=n.$options,e=t.parent;if(e&&!t.abstract){for(;e.$options.abstract&&e.$parent;)e=e.$parent;e.$children.push(n)}n.$parent=e,n.$root=e?e.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(t),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var t=n.$options._parentListeners;t&&Jt(n,t)}(t),function(n){n._vnode=null,n._staticTrees=null;var t=n.$options,e=n.$vnode=t._parentVnode,r=e&&e.context;n.$slots=mt(t._renderChildren,r),n.$scopedSlots=i,n._c=function(t,e,r,i){return Bt(n,t,e,r,i,!1)},n.$createElement=function(t,e,r,i){return Bt(n,t,e,r,i,!0)};var o=e&&e.data;Tn(n,"$attrs",o&&o.attrs||i,null,!0),Tn(n,"$listeners",t._parentListeners||i,null,!0)}(t),ee(t,"beforeCreate"),function(n){var t=ht(n.$options.inject,n);t&&(Sn(!1),Object.keys(t).forEach((function(e){Tn(n,e,t[e])})),Sn(!0))}(t),ve(t),function(n){var t=n.$options.provide;t&&(n._provided="function"==typeof t?t.call(n):t)}(t),ee(t,"created"),t.$options.el&&t.$mount(t.$options.el)},function(n){var t={get:function(){return this._data}},e={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",t),Object.defineProperty(n.prototype,"$props",e),n.prototype.$set=Cn,n.prototype.$delete=En,n.prototype.$watch=function(n,t,e){if(p(t))return be(this,n,t,e);(e=e||{}).user=!0;var r=new he(this,n,t,e);if(e.immediate){var i='callback for immediate watcher "'+r.expression+'"';hn(),Wn(t,this,[r.value],this,i),mn()}return function(){r.teardown()}}}(Se),function(n){var t=/^hook:/;n.prototype.$on=function(n,e){var r=this;if(Array.isArray(n))for(var i=0,o=n.length;i<o;i++)r.$on(n[i],e);else(r._events[n]||(r._events[n]=[])).push(e),t.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,t){var e=this;function r(){e.$off(n,r),t.apply(e,arguments)}return r.fn=t,e.$on(n,r),e},n.prototype.$off=function(n,t){var e=this;if(!arguments.length)return e._events=Object.create(null),e;if(Array.isArray(n)){for(var r=0,i=n.length;r<i;r++)e.$off(n[r],t);return e}var o,a=e._events[n];if(!a)return e;if(!t)return e._events[n]=null,e;for(var s=a.length;s--;)if((o=a[s])===t||o.fn===t){a.splice(s,1);break}return e},n.prototype.$emit=function(n){var t=this,e=t._events[n];if(e){e=e.length>1?C(e):e;for(var r=C(arguments,1),i='event handler for "'+n+'"',o=0,a=e.length;o<a;o++)Wn(e[o],t,r,t,i)}return t}}(Se),function(n){n.prototype._update=function(n,t){var e=this,r=e.$el,i=e._vnode,o=Zt(e);e._vnode=n,e.$el=i?e.__patch__(i,n):e.__patch__(e.$el,n,t,!1),o(),r&&(r.__vue__=null),e.$el&&(e.$el.__vue__=e),e.$vnode&&e.$parent&&e.$vnode===e.$parent._vnode&&(e.$parent.$el=e.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){ee(n,"beforeDestroy"),n._isBeingDestroyed=!0;var t=n.$parent;!t||t._isBeingDestroyed||n.$options.abstract||x(t.$children,n),n._watcher&&n._watcher.teardown();for(var e=n._watchers.length;e--;)n._watchers[e].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),ee(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Se),function(n){Nt(n.prototype),n.prototype.$nextTick=function(n){return it(n,this)},n.prototype._render=function(){var n,t=this,e=t.$options,r=e.render,i=e._parentVnode;i&&(t.$scopedSlots=_t(i.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=i;try{Gt=t,n=r.call(t._renderProxy,t.$createElement)}catch(e){Gn(e,t,"render"),n=t._vnode}finally{Gt=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof gn||(n=_n()),n.parent=i,n}}(Se);var Pe=[String,RegExp,Array],Ae={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Pe,exclude:Pe,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,t=this.keys,e=this.vnodeToCache,r=this.keyToCache;if(e){var i=e.tag,o=e.componentInstance,a=e.componentOptions;n[r]={name:je(a),tag:i,componentInstance:o},t.push(r),this.max&&t.length>parseInt(this.max)&&Ee(n,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Ee(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(t){Ce(n,(function(n){return Te(t,n)}))})),this.$watch("exclude",(function(t){Ce(n,(function(n){return!Te(t,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,t=Vt(n),e=t&&t.componentOptions;if(e){var r=je(e),i=this.include,o=this.exclude;if(i&&(!r||!Te(i,r))||o&&r&&Te(o,r))return t;var a=this.cache,s=this.keys,c=null==t.key?e.Ctor.cid+(e.tag?"::"+e.tag:""):t.key;a[c]?(t.componentInstance=a[c].componentInstance,x(s,c),s.push(c)):(this.vnodeToCache=t,this.keyToCache=c),t.data.keepAlive=!0}return t||n&&n[0]}}};!function(n){var t={get:function(){return M}};Object.defineProperty(n,"config",t),n.util={warn:un,extend:E,mergeOptions:Rn,defineReactive:Tn},n.set=Cn,n.delete=En,n.nextTick=it,n.observable=function(n){return jn(n),n},n.options=Object.create(null),R.forEach((function(t){n.options[t+"s"]=Object.create(null)})),n.options._base=n,E(n.options.components,Ae),function(n){n.use=function(n){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(n)>-1)return this;var e=C(arguments,1);return e.unshift(this),"function"==typeof n.install?n.install.apply(n,e):"function"==typeof n&&n.apply(null,e),t.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Rn(this.options,n),this}}(n),ze(n),function(n){R.forEach((function(t){n[t]=function(n,e){return e?("component"===t&&p(e)&&(e.name=e.name||n,e=this.options._base.extend(e)),"directive"===t&&"function"==typeof e&&(e={bind:e,update:e}),this.options[t+"s"][n]=e,e):this.options[t+"s"][n]}}))}(n)}(Se),Object.defineProperty(Se.prototype,"$isServer",{get:on}),Object.defineProperty(Se.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Se,"FunctionalRenderContext",{value:qt}),Se.version="2.6.14";var Ie=v("style,class"),Oe=v("input,textarea,option,select,progress"),Ne=v("contenteditable,draggable,spellcheck"),qe=v("events,caret,typing,plaintext-only"),Le=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Re="http://www.w3.org/1999/xlink",De=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},Me=function(n){return De(n)?n.slice(6,n.length):""},Ue=function(n){return null==n||!1===n};function Fe(n){for(var t=n.data,e=n,r=n;a(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=Be(r.data,t));for(;a(e=e.parent);)e&&e.data&&(t=Be(t,e.data));return function(n,t){if(a(n)||a(t))return He(n,Ge(t));return""}(t.staticClass,t.class)}function Be(n,t){return{staticClass:He(n.staticClass,t.staticClass),class:a(n.class)?[n.class,t.class]:t.class}}function He(n,t){return n?t?n+" "+t:n:t||""}function Ge(n){return Array.isArray(n)?function(n){for(var t,e="",r=0,i=n.length;r<i;r++)a(t=Ge(n[r]))&&""!==t&&(e&&(e+=" "),e+=t);return e}(n):l(n)?function(n){var t="";for(var e in n)n[e]&&(t&&(t+=" "),t+=e);return t}(n):"string"==typeof n?n:""}var We={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Ve=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Ke=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Qe=function(n){return Ve(n)||Ke(n)};var Ye=Object.create(null);var Je=v("text,number,password,search,email,tel,url");var Xe=Object.freeze({createElement:function(n,t){var e=document.createElement(n);return"select"!==n||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&e.setAttribute("multiple","multiple"),e},createElementNS:function(n,t){return document.createElementNS(We[n],t)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,t,e){n.insertBefore(t,e)},removeChild:function(n,t){n.removeChild(t)},appendChild:function(n,t){n.appendChild(t)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,t){n.textContent=t},setStyleScope:function(n,t){n.setAttribute(t,"")}}),Ze={create:function(n,t){nr(t)},update:function(n,t){n.data.ref!==t.data.ref&&(nr(n,!0),nr(t))},destroy:function(n){nr(n,!0)}};function nr(n,t){var e=n.data.ref;if(a(e)){var r=n.context,i=n.componentInstance||n.elm,o=r.$refs;t?Array.isArray(o[e])?x(o[e],i):o[e]===i&&(o[e]=void 0):n.data.refInFor?Array.isArray(o[e])?o[e].indexOf(i)<0&&o[e].push(i):o[e]=[i]:o[e]=i}}var tr=new gn("",{},[]),er=["create","activate","update","remove","destroy"];function rr(n,t){return n.key===t.key&&n.asyncFactory===t.asyncFactory&&(n.tag===t.tag&&n.isComment===t.isComment&&a(n.data)===a(t.data)&&function(n,t){if("input"!==n.tag)return!0;var e,r=a(e=n.data)&&a(e=e.attrs)&&e.type,i=a(e=t.data)&&a(e=e.attrs)&&e.type;return r===i||Je(r)&&Je(i)}(n,t)||s(n.isAsyncPlaceholder)&&o(t.asyncFactory.error))}function ir(n,t,e){var r,i,o={};for(r=t;r<=e;++r)a(i=n[r].key)&&(o[i]=r);return o}var or={create:ar,update:ar,destroy:function(n){ar(n,tr)}};function ar(n,t){(n.data.directives||t.data.directives)&&function(n,t){var e,r,i,o=n===tr,a=t===tr,s=cr(n.data.directives,n.context),c=cr(t.data.directives,t.context),l=[],u=[];for(e in c)r=s[e],i=c[e],r?(i.oldValue=r.value,i.oldArg=r.arg,ur(i,"update",t,n),i.def&&i.def.componentUpdated&&u.push(i)):(ur(i,"bind",t,n),i.def&&i.def.inserted&&l.push(i));if(l.length){var p=function(){for(var e=0;e<l.length;e++)ur(l[e],"inserted",t,n)};o?ut(t,"insert",p):p()}u.length&&ut(t,"postpatch",(function(){for(var e=0;e<u.length;e++)ur(u[e],"componentUpdated",t,n)}));if(!o)for(e in s)c[e]||ur(s[e],"unbind",n,n,a)}(n,t)}var sr=Object.create(null);function cr(n,t){var e,r,i=Object.create(null);if(!n)return i;for(e=0;e<n.length;e++)(r=n[e]).modifiers||(r.modifiers=sr),i[lr(r)]=r,r.def=Dn(t.$options,"directives",r.name);return i}function lr(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function ur(n,t,e,r,i){var o=n.def&&n.def[t];if(o)try{o(e.elm,n,e,r,i)}catch(r){Gn(r,e.context,"directive "+n.name+" "+t+" hook")}}var pr=[Ze,or];function fr(n,t){var e=t.componentOptions;if(!(a(e)&&!1===e.Ctor.options.inheritAttrs||o(n.data.attrs)&&o(t.data.attrs))){var r,i,s=t.elm,c=n.data.attrs||{},l=t.data.attrs||{};for(r in a(l.__ob__)&&(l=t.data.attrs=E({},l)),l)i=l[r],c[r]!==i&&dr(s,r,i,t.data.pre);for(r in(Y||X)&&l.value!==c.value&&dr(s,"value",l.value),c)o(l[r])&&(De(r)?s.removeAttributeNS(Re,Me(r)):Ne(r)||s.removeAttribute(r))}}function dr(n,t,e,r){r||n.tagName.indexOf("-")>-1?hr(n,t,e):Le(t)?Ue(e)?n.removeAttribute(t):(e="allowfullscreen"===t&&"EMBED"===n.tagName?"true":t,n.setAttribute(t,e)):Ne(t)?n.setAttribute(t,function(n,t){return Ue(t)||"false"===t?"false":"contenteditable"===n&&qe(t)?t:"true"}(t,e)):De(t)?Ue(e)?n.removeAttributeNS(Re,Me(t)):n.setAttributeNS(Re,t,e):hr(n,t,e)}function hr(n,t,e){if(Ue(e))n.removeAttribute(t);else{if(Y&&!J&&"TEXTAREA"===n.tagName&&"placeholder"===t&&""!==e&&!n.__ieph){var r=function(t){t.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(t,e)}}var mr={create:fr,update:fr};function gr(n,t){var e=t.elm,r=t.data,i=n.data;if(!(o(r.staticClass)&&o(r.class)&&(o(i)||o(i.staticClass)&&o(i.class)))){var s=Fe(t),c=e._transitionClasses;a(c)&&(s=He(s,Ge(c))),s!==e._prevClass&&(e.setAttribute("class",s),e._prevClass=s)}}var vr,_r={create:gr,update:gr};function xr(n,t,e){var r=vr;return function i(){var o=t.apply(null,arguments);null!==o&&br(n,i,e,r)}}var yr=Yn&&!(nn&&Number(nn[1])<=53);function wr(n,t,e,r){if(yr){var i=le,o=t;t=o._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=i||n.timeStamp<=0||n.target.ownerDocument!==document)return o.apply(this,arguments)}}vr.addEventListener(n,t,en?{capture:e,passive:r}:e)}function br(n,t,e,r){(r||vr).removeEventListener(n,t._wrapper||t,e)}function kr(n,t){if(!o(n.data.on)||!o(t.data.on)){var e=t.data.on||{},r=n.data.on||{};vr=t.elm,function(n){if(a(n.__r)){var t=Y?"change":"input";n[t]=[].concat(n.__r,n[t]||[]),delete n.__r}a(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(e),lt(e,r,wr,br,xr,t.context),vr=void 0}}var $r,Sr={create:kr,update:kr};function zr(n,t){if(!o(n.data.domProps)||!o(t.data.domProps)){var e,r,i=t.elm,s=n.data.domProps||{},c=t.data.domProps||{};for(e in a(c.__ob__)&&(c=t.data.domProps=E({},c)),s)e in c||(i[e]="");for(e in c){if(r=c[e],"textContent"===e||"innerHTML"===e){if(t.children&&(t.children.length=0),r===s[e])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===e&&"PROGRESS"!==i.tagName){i._value=r;var l=o(r)?"":String(r);jr(i,l)&&(i.value=l)}else if("innerHTML"===e&&Ke(i.tagName)&&o(i.innerHTML)){($r=$r||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var u=$r.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;u.firstChild;)i.appendChild(u.firstChild)}else if(r!==s[e])try{i[e]=r}catch(n){}}}}function jr(n,t){return!n.composing&&("OPTION"===n.tagName||function(n,t){var e=!0;try{e=document.activeElement!==n}catch(n){}return e&&n.value!==t}(n,t)||function(n,t){var e=n.value,r=n._vModifiers;if(a(r)){if(r.number)return g(e)!==g(t);if(r.trim)return e.trim()!==t.trim()}return e!==t}(n,t))}var Tr={create:zr,update:zr},Cr=b((function(n){var t={},e=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(e);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t}));function Er(n){var t=Pr(n.style);return n.staticStyle?E(n.staticStyle,t):t}function Pr(n){return Array.isArray(n)?P(n):"string"==typeof n?Cr(n):n}var Ar,Ir=/^--/,Or=/\s*!important$/,Nr=function(n,t,e){if(Ir.test(t))n.style.setProperty(t,e);else if(Or.test(e))n.style.setProperty(j(t),e.replace(Or,""),"important");else{var r=Lr(t);if(Array.isArray(e))for(var i=0,o=e.length;i<o;i++)n.style[r]=e[i];else n.style[r]=e}},qr=["Webkit","Moz","ms"],Lr=b((function(n){if(Ar=Ar||document.createElement("div").style,"filter"!==(n=$(n))&&n in Ar)return n;for(var t=n.charAt(0).toUpperCase()+n.slice(1),e=0;e<qr.length;e++){var r=qr[e]+t;if(r in Ar)return r}}));function Rr(n,t){var e=t.data,r=n.data;if(!(o(e.staticStyle)&&o(e.style)&&o(r.staticStyle)&&o(r.style))){var i,s,c=t.elm,l=r.staticStyle,u=r.normalizedStyle||r.style||{},p=l||u,f=Pr(t.data.style)||{};t.data.normalizedStyle=a(f.__ob__)?E({},f):f;var d=function(n,t){var e,r={};if(t)for(var i=n;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(e=Er(i.data))&&E(r,e);(e=Er(n.data))&&E(r,e);for(var o=n;o=o.parent;)o.data&&(e=Er(o.data))&&E(r,e);return r}(t,!0);for(s in p)o(d[s])&&Nr(c,s,"");for(s in d)(i=d[s])!==p[s]&&Nr(c,s,null==i?"":i)}}var Dr={create:Rr,update:Rr},Mr=/\s+/;function Ur(n,t){if(t&&(t=t.trim()))if(n.classList)t.indexOf(" ")>-1?t.split(Mr).forEach((function(t){return n.classList.add(t)})):n.classList.add(t);else{var e=" "+(n.getAttribute("class")||"")+" ";e.indexOf(" "+t+" ")<0&&n.setAttribute("class",(e+t).trim())}}function Fr(n,t){if(t&&(t=t.trim()))if(n.classList)t.indexOf(" ")>-1?t.split(Mr).forEach((function(t){return n.classList.remove(t)})):n.classList.remove(t),n.classList.length||n.removeAttribute("class");else{for(var e=" "+(n.getAttribute("class")||"")+" ",r=" "+t+" ";e.indexOf(r)>=0;)e=e.replace(r," ");(e=e.trim())?n.setAttribute("class",e):n.removeAttribute("class")}}function Br(n){if(n){if("object"==typeof n){var t={};return!1!==n.css&&E(t,Hr(n.name||"v")),E(t,n),t}return"string"==typeof n?Hr(n):void 0}}var Hr=b((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),Gr=W&&!J,Wr="transition",Vr="transitionend",Kr="animation",Qr="animationend";Gr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Wr="WebkitTransition",Vr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Kr="WebkitAnimation",Qr="webkitAnimationEnd"));var Yr=W?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Jr(n){Yr((function(){Yr(n)}))}function Xr(n,t){var e=n._transitionClasses||(n._transitionClasses=[]);e.indexOf(t)<0&&(e.push(t),Ur(n,t))}function Zr(n,t){n._transitionClasses&&x(n._transitionClasses,t),Fr(n,t)}function ni(n,t,e){var r=ei(n,t),i=r.type,o=r.timeout,a=r.propCount;if(!i)return e();var s="transition"===i?Vr:Qr,c=0,l=function(){n.removeEventListener(s,u),e()},u=function(t){t.target===n&&++c>=a&&l()};setTimeout((function(){c<a&&l()}),o+1),n.addEventListener(s,u)}var ti=/\b(transform|all)(,|$)/;function ei(n,t){var e,r=window.getComputedStyle(n),i=(r[Wr+"Delay"]||"").split(", "),o=(r[Wr+"Duration"]||"").split(", "),a=ri(i,o),s=(r[Kr+"Delay"]||"").split(", "),c=(r[Kr+"Duration"]||"").split(", "),l=ri(s,c),u=0,p=0;return"transition"===t?a>0&&(e="transition",u=a,p=o.length):"animation"===t?l>0&&(e="animation",u=l,p=c.length):p=(e=(u=Math.max(a,l))>0?a>l?"transition":"animation":null)?"transition"===e?o.length:c.length:0,{type:e,timeout:u,propCount:p,hasTransform:"transition"===e&&ti.test(r[Wr+"Property"])}}function ri(n,t){for(;n.length<t.length;)n=n.concat(n);return Math.max.apply(null,t.map((function(t,e){return ii(t)+ii(n[e])})))}function ii(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function oi(n,t){var e=n.elm;a(e._leaveCb)&&(e._leaveCb.cancelled=!0,e._leaveCb());var r=Br(n.data.transition);if(!o(r)&&!a(e._enterCb)&&1===e.nodeType){for(var i=r.css,s=r.type,c=r.enterClass,u=r.enterToClass,p=r.enterActiveClass,f=r.appearClass,d=r.appearToClass,h=r.appearActiveClass,m=r.beforeEnter,v=r.enter,_=r.afterEnter,x=r.enterCancelled,y=r.beforeAppear,w=r.appear,b=r.afterAppear,k=r.appearCancelled,$=r.duration,S=Xt,z=Xt.$vnode;z&&z.parent;)S=z.context,z=z.parent;var j=!S._isMounted||!n.isRootInsert;if(!j||w||""===w){var T=j&&f?f:c,C=j&&h?h:p,E=j&&d?d:u,P=j&&y||m,A=j&&"function"==typeof w?w:v,I=j&&b||_,O=j&&k||x,N=g(l($)?$.enter:$);0;var q=!1!==i&&!J,R=ci(A),D=e._enterCb=L((function(){q&&(Zr(e,E),Zr(e,C)),D.cancelled?(q&&Zr(e,T),O&&O(e)):I&&I(e),e._enterCb=null}));n.data.show||ut(n,"insert",(function(){var t=e.parentNode,r=t&&t._pending&&t._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),A&&A(e,D)})),P&&P(e),q&&(Xr(e,T),Xr(e,C),Jr((function(){Zr(e,T),D.cancelled||(Xr(e,E),R||(si(N)?setTimeout(D,N):ni(e,s,D)))}))),n.data.show&&(t&&t(),A&&A(e,D)),q||R||D()}}}function ai(n,t){var e=n.elm;a(e._enterCb)&&(e._enterCb.cancelled=!0,e._enterCb());var r=Br(n.data.transition);if(o(r)||1!==e.nodeType)return t();if(!a(e._leaveCb)){var i=r.css,s=r.type,c=r.leaveClass,u=r.leaveToClass,p=r.leaveActiveClass,f=r.beforeLeave,d=r.leave,h=r.afterLeave,m=r.leaveCancelled,v=r.delayLeave,_=r.duration,x=!1!==i&&!J,y=ci(d),w=g(l(_)?_.leave:_);0;var b=e._leaveCb=L((function(){e.parentNode&&e.parentNode._pending&&(e.parentNode._pending[n.key]=null),x&&(Zr(e,u),Zr(e,p)),b.cancelled?(x&&Zr(e,c),m&&m(e)):(t(),h&&h(e)),e._leaveCb=null}));v?v(k):k()}function k(){b.cancelled||(!n.data.show&&e.parentNode&&((e.parentNode._pending||(e.parentNode._pending={}))[n.key]=n),f&&f(e),x&&(Xr(e,c),Xr(e,p),Jr((function(){Zr(e,c),b.cancelled||(Xr(e,u),y||(si(w)?setTimeout(b,w):ni(e,s,b)))}))),d&&d(e,b),x||y||b())}}function si(n){return"number"==typeof n&&!isNaN(n)}function ci(n){if(o(n))return!1;var t=n.fns;return a(t)?ci(Array.isArray(t)?t[0]:t):(n._length||n.length)>1}function li(n,t){!0!==t.data.show&&oi(t)}var ui=function(n){var t,e,r={},i=n.modules,l=n.nodeOps;for(t=0;t<er.length;++t)for(r[er[t]]=[],e=0;e<i.length;++e)a(i[e][er[t]])&&r[er[t]].push(i[e][er[t]]);function u(n){var t=l.parentNode(n);a(t)&&l.removeChild(t,n)}function p(n,t,e,i,o,c,u){if(a(n.elm)&&a(c)&&(n=c[u]=yn(n)),n.isRootInsert=!o,!function(n,t,e,i){var o=n.data;if(a(o)){var c=a(n.componentInstance)&&o.keepAlive;if(a(o=o.hook)&&a(o=o.init)&&o(n,!1),a(n.componentInstance))return f(n,t),d(e,n.elm,i),s(c)&&function(n,t,e,i){var o,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(o=s.data)&&a(o=o.transition)){for(o=0;o<r.activate.length;++o)r.activate[o](tr,s);t.push(s);break}d(e,n.elm,i)}(n,t,e,i),!0}}(n,t,e,i)){var p=n.data,m=n.children,v=n.tag;a(v)?(n.elm=n.ns?l.createElementNS(n.ns,v):l.createElement(v,n),_(n),h(n,m,t),a(p)&&g(n,t),d(e,n.elm,i)):s(n.isComment)?(n.elm=l.createComment(n.text),d(e,n.elm,i)):(n.elm=l.createTextNode(n.text),d(e,n.elm,i))}}function f(n,t){a(n.data.pendingInsert)&&(t.push.apply(t,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,m(n)?(g(n,t),_(n)):(nr(n),t.push(n))}function d(n,t,e){a(n)&&(a(e)?l.parentNode(e)===n&&l.insertBefore(n,t,e):l.appendChild(n,t))}function h(n,t,e){if(Array.isArray(t)){0;for(var r=0;r<t.length;++r)p(t[r],e,n.elm,null,!0,t,r)}else c(n.text)&&l.appendChild(n.elm,l.createTextNode(String(n.text)))}function m(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return a(n.tag)}function g(n,e){for(var i=0;i<r.create.length;++i)r.create[i](tr,n);a(t=n.data.hook)&&(a(t.create)&&t.create(tr,n),a(t.insert)&&e.push(n))}function _(n){var t;if(a(t=n.fnScopeId))l.setStyleScope(n.elm,t);else for(var e=n;e;)a(t=e.context)&&a(t=t.$options._scopeId)&&l.setStyleScope(n.elm,t),e=e.parent;a(t=Xt)&&t!==n.context&&t!==n.fnContext&&a(t=t.$options._scopeId)&&l.setStyleScope(n.elm,t)}function x(n,t,e,r,i,o){for(;r<=i;++r)p(e[r],o,n,t,!1,e,r)}function y(n){var t,e,i=n.data;if(a(i))for(a(t=i.hook)&&a(t=t.destroy)&&t(n),t=0;t<r.destroy.length;++t)r.destroy[t](n);if(a(t=n.children))for(e=0;e<n.children.length;++e)y(n.children[e])}function w(n,t,e){for(;t<=e;++t){var r=n[t];a(r)&&(a(r.tag)?(b(r),y(r)):u(r.elm))}}function b(n,t){if(a(t)||a(n.data)){var e,i=r.remove.length+1;for(a(t)?t.listeners+=i:t=function(n,t){function e(){0==--e.listeners&&u(n)}return e.listeners=t,e}(n.elm,i),a(e=n.componentInstance)&&a(e=e._vnode)&&a(e.data)&&b(e,t),e=0;e<r.remove.length;++e)r.remove[e](n,t);a(e=n.data.hook)&&a(e=e.remove)?e(n,t):t()}else u(n.elm)}function k(n,t,e,r){for(var i=e;i<r;i++){var o=t[i];if(a(o)&&rr(n,o))return i}}function $(n,t,e,i,c,u){if(n!==t){a(t.elm)&&a(i)&&(t=i[c]=yn(t));var f=t.elm=n.elm;if(s(n.isAsyncPlaceholder))a(t.asyncFactory.resolved)?j(n.elm,t,e):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(n.isStatic)&&t.key===n.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=n.componentInstance;else{var d,h=t.data;a(h)&&a(d=h.hook)&&a(d=d.prepatch)&&d(n,t);var g=n.children,v=t.children;if(a(h)&&m(t)){for(d=0;d<r.update.length;++d)r.update[d](n,t);a(d=h.hook)&&a(d=d.update)&&d(n,t)}o(t.text)?a(g)&&a(v)?g!==v&&function(n,t,e,r,i){var s,c,u,f=0,d=0,h=t.length-1,m=t[0],g=t[h],v=e.length-1,_=e[0],y=e[v],b=!i;for(0;f<=h&&d<=v;)o(m)?m=t[++f]:o(g)?g=t[--h]:rr(m,_)?($(m,_,r,e,d),m=t[++f],_=e[++d]):rr(g,y)?($(g,y,r,e,v),g=t[--h],y=e[--v]):rr(m,y)?($(m,y,r,e,v),b&&l.insertBefore(n,m.elm,l.nextSibling(g.elm)),m=t[++f],y=e[--v]):rr(g,_)?($(g,_,r,e,d),b&&l.insertBefore(n,g.elm,m.elm),g=t[--h],_=e[++d]):(o(s)&&(s=ir(t,f,h)),o(c=a(_.key)?s[_.key]:k(_,t,f,h))?p(_,r,n,m.elm,!1,e,d):rr(u=t[c],_)?($(u,_,r,e,d),t[c]=void 0,b&&l.insertBefore(n,u.elm,m.elm)):p(_,r,n,m.elm,!1,e,d),_=e[++d]);f>h?x(n,o(e[v+1])?null:e[v+1].elm,e,d,v,r):d>v&&w(t,f,h)}(f,g,v,e,u):a(v)?(a(n.text)&&l.setTextContent(f,""),x(f,null,v,0,v.length-1,e)):a(g)?w(g,0,g.length-1):a(n.text)&&l.setTextContent(f,""):n.text!==t.text&&l.setTextContent(f,t.text),a(h)&&a(d=h.hook)&&a(d=d.postpatch)&&d(n,t)}}}function S(n,t,e){if(s(e)&&a(n.parent))n.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var z=v("attrs,class,staticClass,staticStyle,key");function j(n,t,e,r){var i,o=t.tag,c=t.data,l=t.children;if(r=r||c&&c.pre,t.elm=n,s(t.isComment)&&a(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(a(c)&&(a(i=c.hook)&&a(i=i.init)&&i(t,!0),a(i=t.componentInstance)))return f(t,e),!0;if(a(o)){if(a(l))if(n.hasChildNodes())if(a(i=c)&&a(i=i.domProps)&&a(i=i.innerHTML)){if(i!==n.innerHTML)return!1}else{for(var u=!0,p=n.firstChild,d=0;d<l.length;d++){if(!p||!j(p,l[d],e,r)){u=!1;break}p=p.nextSibling}if(!u||p)return!1}else h(t,l,e);if(a(c)){var m=!1;for(var v in c)if(!z(v)){m=!0,g(t,e);break}!m&&c.class&&at(c.class)}}else n.data!==t.text&&(n.data=t.text);return!0}return function(n,t,e,i){if(!o(t)){var c,u=!1,f=[];if(o(n))u=!0,p(t,f);else{var d=a(n.nodeType);if(!d&&rr(n,t))$(n,t,f,null,null,i);else{if(d){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),e=!0),s(e)&&j(n,t,f))return S(t,f,!0),n;c=n,n=new gn(l.tagName(c).toLowerCase(),{},[],void 0,c)}var h=n.elm,g=l.parentNode(h);if(p(t,f,h._leaveCb?null:g,l.nextSibling(h)),a(t.parent))for(var v=t.parent,_=m(t);v;){for(var x=0;x<r.destroy.length;++x)r.destroy[x](v);if(v.elm=t.elm,_){for(var b=0;b<r.create.length;++b)r.create[b](tr,v);var k=v.data.hook.insert;if(k.merged)for(var z=1;z<k.fns.length;z++)k.fns[z]()}else nr(v);v=v.parent}a(g)?w([n],0,0):a(n.tag)&&y(n)}}return S(t,f,u),t.elm}a(n)&&y(n)}}({nodeOps:Xe,modules:[mr,_r,Sr,Tr,Dr,W?{create:li,activate:li,remove:function(n,t){!0!==n.data.show?ai(n,t):t()}}:{}].concat(pr)});J&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&_i(n,"input")}));var pi={inserted:function(n,t,e,r){"select"===e.tag?(r.elm&&!r.elm._vOptions?ut(e,"postpatch",(function(){pi.componentUpdated(n,t,e)})):fi(n,t,e.context),n._vOptions=[].map.call(n.options,mi)):("textarea"===e.tag||Je(n.type))&&(n._vModifiers=t.modifiers,t.modifiers.lazy||(n.addEventListener("compositionstart",gi),n.addEventListener("compositionend",vi),n.addEventListener("change",vi),J&&(n.vmodel=!0)))},componentUpdated:function(n,t,e){if("select"===e.tag){fi(n,t,e.context);var r=n._vOptions,i=n._vOptions=[].map.call(n.options,mi);if(i.some((function(n,t){return!N(n,r[t])})))(n.multiple?t.value.some((function(n){return hi(n,i)})):t.value!==t.oldValue&&hi(t.value,i))&&_i(n,"change")}}};function fi(n,t,e){di(n,t,e),(Y||X)&&setTimeout((function(){di(n,t,e)}),0)}function di(n,t,e){var r=t.value,i=n.multiple;if(!i||Array.isArray(r)){for(var o,a,s=0,c=n.options.length;s<c;s++)if(a=n.options[s],i)o=q(r,mi(a))>-1,a.selected!==o&&(a.selected=o);else if(N(mi(a),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));i||(n.selectedIndex=-1)}}function hi(n,t){return t.every((function(t){return!N(t,n)}))}function mi(n){return"_value"in n?n._value:n.value}function gi(n){n.target.composing=!0}function vi(n){n.target.composing&&(n.target.composing=!1,_i(n.target,"input"))}function _i(n,t){var e=document.createEvent("HTMLEvents");e.initEvent(t,!0,!0),n.dispatchEvent(e)}function xi(n){return!n.componentInstance||n.data&&n.data.transition?n:xi(n.componentInstance._vnode)}var yi={model:pi,show:{bind:function(n,t,e){var r=t.value,i=(e=xi(e)).data&&e.data.transition,o=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&i?(e.data.show=!0,oi(e,(function(){n.style.display=o}))):n.style.display=r?o:"none"},update:function(n,t,e){var r=t.value;!r!=!t.oldValue&&((e=xi(e)).data&&e.data.transition?(e.data.show=!0,r?oi(e,(function(){n.style.display=n.__vOriginalDisplay})):ai(e,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,t,e,r,i){i||(n.style.display=n.__vOriginalDisplay)}}},wi={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function bi(n){var t=n&&n.componentOptions;return t&&t.Ctor.options.abstract?bi(Vt(t.children)):n}function ki(n){var t={},e=n.$options;for(var r in e.propsData)t[r]=n[r];var i=e._parentListeners;for(var o in i)t[$(o)]=i[o];return t}function $i(n,t){if(/\d-keep-alive$/.test(t.tag))return n("keep-alive",{props:t.componentOptions.propsData})}var Si=function(n){return n.tag||vt(n)},zi=function(n){return"show"===n.name},ji={name:"transition",props:wi,abstract:!0,render:function(n){var t=this,e=this.$slots.default;if(e&&(e=e.filter(Si)).length){0;var r=this.mode;0;var i=e[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return i;var o=bi(i);if(!o)return i;if(this._leaving)return $i(n,i);var a="__transition-"+this._uid+"-";o.key=null==o.key?o.isComment?a+"comment":a+o.tag:c(o.key)?0===String(o.key).indexOf(a)?o.key:a+o.key:o.key;var s=(o.data||(o.data={})).transition=ki(this),l=this._vnode,u=bi(l);if(o.data.directives&&o.data.directives.some(zi)&&(o.data.show=!0),u&&u.data&&!function(n,t){return t.key===n.key&&t.tag===n.tag}(o,u)&&!vt(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var p=u.data.transition=E({},s);if("out-in"===r)return this._leaving=!0,ut(p,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),$i(n,i);if("in-out"===r){if(vt(o))return l;var f,d=function(){f()};ut(s,"afterEnter",d),ut(s,"enterCancelled",d),ut(p,"delayLeave",(function(n){f=n}))}}return i}}},Ti=E({tag:String,moveClass:String},wi);function Ci(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Ei(n){n.data.newPos=n.elm.getBoundingClientRect()}function Pi(n){var t=n.data.pos,e=n.data.newPos,r=t.left-e.left,i=t.top-e.top;if(r||i){n.data.moved=!0;var o=n.elm.style;o.transform=o.WebkitTransform="translate("+r+"px,"+i+"px)",o.transitionDuration="0s"}}delete Ti.mode;var Ai={Transition:ji,TransitionGroup:{props:Ti,beforeMount:function(){var n=this,t=this._update;this._update=function(e,r){var i=Zt(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,i(),t.call(n,e,r)}},render:function(n){for(var t=this.tag||this.$vnode.data.tag||"span",e=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],o=this.children=[],a=ki(this),s=0;s<i.length;s++){var c=i[s];if(c.tag)if(null!=c.key&&0!==String(c.key).indexOf("__vlist"))o.push(c),e[c.key]=c,(c.data||(c.data={})).transition=a;else;}if(r){for(var l=[],u=[],p=0;p<r.length;p++){var f=r[p];f.data.transition=a,f.data.pos=f.elm.getBoundingClientRect(),e[f.key]?l.push(f):u.push(f)}this.kept=n(t,null,l),this.removed=u}return n(t,null,o)},updated:function(){var n=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,t)&&(n.forEach(Ci),n.forEach(Ei),n.forEach(Pi),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var e=n.elm,r=e.style;Xr(e,t),r.transform=r.WebkitTransform=r.transitionDuration="",e.addEventListener(Vr,e._moveCb=function n(r){r&&r.target!==e||r&&!/transform$/.test(r.propertyName)||(e.removeEventListener(Vr,n),e._moveCb=null,Zr(e,t))})}})))},methods:{hasMove:function(n,t){if(!Gr)return!1;if(this._hasMove)return this._hasMove;var e=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Fr(e,n)})),Ur(e,t),e.style.display="none",this.$el.appendChild(e);var r=ei(e);return this.$el.removeChild(e),this._hasMove=r.hasTransform}}}};Se.config.mustUseProp=function(n,t,e){return"value"===e&&Oe(n)&&"button"!==t||"selected"===e&&"option"===n||"checked"===e&&"input"===n||"muted"===e&&"video"===n},Se.config.isReservedTag=Qe,Se.config.isReservedAttr=Ie,Se.config.getTagNamespace=function(n){return Ke(n)?"svg":"math"===n?"math":void 0},Se.config.isUnknownElement=function(n){if(!W)return!0;if(Qe(n))return!1;if(n=n.toLowerCase(),null!=Ye[n])return Ye[n];var t=document.createElement(n);return n.indexOf("-")>-1?Ye[n]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Ye[n]=/HTMLUnknownElement/.test(t.toString())},E(Se.options.directives,yi),E(Se.options.components,Ai),Se.prototype.__patch__=W?ui:A,Se.prototype.$mount=function(n,t){return function(n,t,e){var r;return n.$el=t,n.$options.render||(n.$options.render=_n),ee(n,"beforeMount"),r=function(){n._update(n._render(),e)},new he(n,r,A,{before:function(){n._isMounted&&!n._isDestroyed&&ee(n,"beforeUpdate")}},!0),e=!1,null==n.$vnode&&(n._isMounted=!0,ee(n,"mounted")),n}(this,n=n&&W?function(n){if("string"==typeof n){var t=document.querySelector(n);return t||document.createElement("div")}return n}(n):void 0,t)},W&&setTimeout((function(){M.devtools&&an&&an.emit("init",Se)}),0);var Ii=Se;
/*!
  * vue-router v3.5.3
  * (c) 2021 Evan You
  * @license MIT
  */function Oi(n,t){for(var e in t)n[e]=t[e];return n}var Ni=/[!'()*]/g,qi=function(n){return"%"+n.charCodeAt(0).toString(16)},Li=/%2C/g,Ri=function(n){return encodeURIComponent(n).replace(Ni,qi).replace(Li,",")};function Di(n){try{return decodeURIComponent(n)}catch(n){0}return n}var Mi=function(n){return null==n||"object"==typeof n?n:String(n)};function Ui(n){var t={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var e=n.replace(/\+/g," ").split("="),r=Di(e.shift()),i=e.length>0?Di(e.join("=")):null;void 0===t[r]?t[r]=i:Array.isArray(t[r])?t[r].push(i):t[r]=[t[r],i]})),t):t}function Fi(n){var t=n?Object.keys(n).map((function(t){var e=n[t];if(void 0===e)return"";if(null===e)return Ri(t);if(Array.isArray(e)){var r=[];return e.forEach((function(n){void 0!==n&&(null===n?r.push(Ri(t)):r.push(Ri(t)+"="+Ri(n)))})),r.join("&")}return Ri(t)+"="+Ri(e)})).filter((function(n){return n.length>0})).join("&"):null;return t?"?"+t:""}var Bi=/\/?$/;function Hi(n,t,e,r){var i=r&&r.options.stringifyQuery,o=t.query||{};try{o=Gi(o)}catch(n){}var a={name:t.name||n&&n.name,meta:n&&n.meta||{},path:t.path||"/",hash:t.hash||"",query:o,params:t.params||{},fullPath:Ki(t,i),matched:n?Vi(n):[]};return e&&(a.redirectedFrom=Ki(e,i)),Object.freeze(a)}function Gi(n){if(Array.isArray(n))return n.map(Gi);if(n&&"object"==typeof n){var t={};for(var e in n)t[e]=Gi(n[e]);return t}return n}var Wi=Hi(null,{path:"/"});function Vi(n){for(var t=[];n;)t.unshift(n),n=n.parent;return t}function Ki(n,t){var e=n.path,r=n.query;void 0===r&&(r={});var i=n.hash;return void 0===i&&(i=""),(e||"/")+(t||Fi)(r)+i}function Qi(n,t,e){return t===Wi?n===t:!!t&&(n.path&&t.path?n.path.replace(Bi,"")===t.path.replace(Bi,"")&&(e||n.hash===t.hash&&Yi(n.query,t.query)):!(!n.name||!t.name)&&(n.name===t.name&&(e||n.hash===t.hash&&Yi(n.query,t.query)&&Yi(n.params,t.params))))}function Yi(n,t){if(void 0===n&&(n={}),void 0===t&&(t={}),!n||!t)return n===t;var e=Object.keys(n).sort(),r=Object.keys(t).sort();return e.length===r.length&&e.every((function(e,i){var o=n[e];if(r[i]!==e)return!1;var a=t[e];return null==o||null==a?o===a:"object"==typeof o&&"object"==typeof a?Yi(o,a):String(o)===String(a)}))}function Ji(n){for(var t=0;t<n.matched.length;t++){var e=n.matched[t];for(var r in e.instances){var i=e.instances[r],o=e.enteredCbs[r];if(i&&o){delete e.enteredCbs[r];for(var a=0;a<o.length;a++)i._isBeingDestroyed||o[a](i)}}}}var Xi={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,t){var e=t.props,r=t.children,i=t.parent,o=t.data;o.routerView=!0;for(var a=i.$createElement,s=e.name,c=i.$route,l=i._routerViewCache||(i._routerViewCache={}),u=0,p=!1;i&&i._routerRoot!==i;){var f=i.$vnode?i.$vnode.data:{};f.routerView&&u++,f.keepAlive&&i._directInactive&&i._inactive&&(p=!0),i=i.$parent}if(o.routerViewDepth=u,p){var d=l[s],h=d&&d.component;return h?(d.configProps&&Zi(h,o,d.route,d.configProps),a(h,o,r)):a()}var m=c.matched[u],g=m&&m.components[s];if(!m||!g)return l[s]=null,a();l[s]={component:g},o.registerRouteInstance=function(n,t){var e=m.instances[s];(t&&e!==n||!t&&e===n)&&(m.instances[s]=t)},(o.hook||(o.hook={})).prepatch=function(n,t){m.instances[s]=t.componentInstance},o.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==m.instances[s]&&(m.instances[s]=n.componentInstance),Ji(c)};var v=m.props&&m.props[s];return v&&(Oi(l[s],{route:c,configProps:v}),Zi(g,o,c,v)),a(g,o,r)}};function Zi(n,t,e,r){var i=t.props=function(n,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(n);case"boolean":return t?n.params:void 0;default:0}}(e,r);if(i){i=t.props=Oi({},i);var o=t.attrs=t.attrs||{};for(var a in i)n.props&&a in n.props||(o[a]=i[a],delete i[a])}}function no(n,t,e){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return t+n;var i=t.split("/");e&&i[i.length-1]||i.pop();for(var o=n.replace(/^\//,"").split("/"),a=0;a<o.length;a++){var s=o[a];".."===s?i.pop():"."!==s&&i.push(s)}return""!==i[0]&&i.unshift(""),i.join("/")}function to(n){return n.replace(/\/+/g,"/")}var eo=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},ro=_o,io=lo,oo=function(n,t){return po(lo(n,t),t)},ao=po,so=vo,co=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function lo(n,t){for(var e,r=[],i=0,o=0,a="",s=t&&t.delimiter||"/";null!=(e=co.exec(n));){var c=e[0],l=e[1],u=e.index;if(a+=n.slice(o,u),o=u+c.length,l)a+=l[1];else{var p=n[o],f=e[2],d=e[3],h=e[4],m=e[5],g=e[6],v=e[7];a&&(r.push(a),a="");var _=null!=f&&null!=p&&p!==f,x="+"===g||"*"===g,y="?"===g||"*"===g,w=e[2]||s,b=h||m;r.push({name:d||i++,prefix:f||"",delimiter:w,optional:y,repeat:x,partial:_,asterisk:!!v,pattern:b?ho(b):v?".*":"[^"+fo(w)+"]+?"})}}return o<n.length&&(a+=n.substr(o)),a&&r.push(a),r}function uo(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function po(n,t){for(var e=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(e[r]=new RegExp("^(?:"+n[r].pattern+")$",go(t)));return function(t,r){for(var i="",o=t||{},a=(r||{}).pretty?uo:encodeURIComponent,s=0;s<n.length;s++){var c=n[s];if("string"!=typeof c){var l,u=o[c.name];if(null==u){if(c.optional){c.partial&&(i+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(eo(u)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var p=0;p<u.length;p++){if(l=a(u[p]),!e[s].test(l))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(l)+"`");i+=(0===p?c.prefix:c.delimiter)+l}}else{if(l=c.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):a(u),!e[s].test(l))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+l+'"');i+=c.prefix+l}}else i+=c}return i}}function fo(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function ho(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function mo(n,t){return n.keys=t,n}function go(n){return n&&n.sensitive?"":"i"}function vo(n,t,e){eo(t)||(e=t||e,t=[]);for(var r=(e=e||{}).strict,i=!1!==e.end,o="",a=0;a<n.length;a++){var s=n[a];if("string"==typeof s)o+=fo(s);else{var c=fo(s.prefix),l="(?:"+s.pattern+")";t.push(s),s.repeat&&(l+="(?:"+c+l+")*"),o+=l=s.optional?s.partial?c+"("+l+")?":"(?:"+c+"("+l+"))?":c+"("+l+")"}}var u=fo(e.delimiter||"/"),p=o.slice(-u.length)===u;return r||(o=(p?o.slice(0,-u.length):o)+"(?:"+u+"(?=$))?"),o+=i?"$":r&&p?"":"(?="+u+"|$)",mo(new RegExp("^"+o,go(e)),t)}function _o(n,t,e){return eo(t)||(e=t||e,t=[]),e=e||{},n instanceof RegExp?function(n,t){var e=n.source.match(/\((?!\?)/g);if(e)for(var r=0;r<e.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return mo(n,t)}(n,t):eo(n)?function(n,t,e){for(var r=[],i=0;i<n.length;i++)r.push(_o(n[i],t,e).source);return mo(new RegExp("(?:"+r.join("|")+")",go(e)),t)}(n,t,e):function(n,t,e){return vo(lo(n,e),t,e)}(n,t,e)}ro.parse=io,ro.compile=oo,ro.tokensToFunction=ao,ro.tokensToRegExp=so;var xo=Object.create(null);function yo(n,t,e){t=t||{};try{var r=xo[n]||(xo[n]=ro.compile(n));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),r(t,{pretty:!0})}catch(n){return""}finally{delete t[0]}}function wo(n,t,e,r){var i="string"==typeof n?{path:n}:n;if(i._normalized)return i;if(i.name){var o=(i=Oi({},n)).params;return o&&"object"==typeof o&&(i.params=Oi({},o)),i}if(!i.path&&i.params&&t){(i=Oi({},i))._normalized=!0;var a=Oi(Oi({},t.params),i.params);if(t.name)i.name=t.name,i.params=a;else if(t.matched.length){var s=t.matched[t.matched.length-1].path;i.path=yo(s,a,t.path)}else 0;return i}var c=function(n){var t="",e="",r=n.indexOf("#");r>=0&&(t=n.slice(r),n=n.slice(0,r));var i=n.indexOf("?");return i>=0&&(e=n.slice(i+1),n=n.slice(0,i)),{path:n,query:e,hash:t}}(i.path||""),l=t&&t.path||"/",u=c.path?no(c.path,l,e||i.append):l,p=function(n,t,e){void 0===t&&(t={});var r,i=e||Ui;try{r=i(n||"")}catch(n){r={}}for(var o in t){var a=t[o];r[o]=Array.isArray(a)?a.map(Mi):Mi(a)}return r}(c.query,i.query,r&&r.options.parseQuery),f=i.hash||c.hash;return f&&"#"!==f.charAt(0)&&(f="#"+f),{_normalized:!0,path:u,query:p,hash:f}}var bo,ko=function(){},$o={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var t=this,e=this.$router,r=this.$route,i=e.resolve(this.to,r,this.append),o=i.location,a=i.route,s=i.href,c={},l=e.options.linkActiveClass,u=e.options.linkExactActiveClass,p=null==l?"router-link-active":l,f=null==u?"router-link-exact-active":u,d=null==this.activeClass?p:this.activeClass,h=null==this.exactActiveClass?f:this.exactActiveClass,m=a.redirectedFrom?Hi(null,wo(a.redirectedFrom),null,e):a;c[h]=Qi(r,m,this.exactPath),c[d]=this.exact||this.exactPath?c[h]:function(n,t){return 0===n.path.replace(Bi,"/").indexOf(t.path.replace(Bi,"/"))&&(!t.hash||n.hash===t.hash)&&function(n,t){for(var e in t)if(!(e in n))return!1;return!0}(n.query,t.query)}(r,m);var g=c[h]?this.ariaCurrentValue:null,v=function(n){So(n)&&(t.replace?e.replace(o,ko):e.push(o,ko))},_={click:So};Array.isArray(this.event)?this.event.forEach((function(n){_[n]=v})):_[this.event]=v;var x={class:c},y=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:a,navigate:v,isActive:c[d],isExactActive:c[h]});if(y){if(1===y.length)return y[0];if(y.length>1||!y.length)return 0===y.length?n():n("span",{},y)}if("a"===this.tag)x.on=_,x.attrs={href:s,"aria-current":g};else{var w=function n(t){var e;if(t)for(var r=0;r<t.length;r++){if("a"===(e=t[r]).tag)return e;if(e.children&&(e=n(e.children)))return e}}(this.$slots.default);if(w){w.isStatic=!1;var b=w.data=Oi({},w.data);for(var k in b.on=b.on||{},b.on){var $=b.on[k];k in _&&(b.on[k]=Array.isArray($)?$:[$])}for(var S in _)S in b.on?b.on[S].push(_[S]):b.on[S]=v;var z=w.data.attrs=Oi({},w.data.attrs);z.href=s,z["aria-current"]=g}else x.on=_}return n(this.tag,x,this.$slots.default)}};function So(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var t=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return n.preventDefault&&n.preventDefault(),!0}}var zo="undefined"!=typeof window;function jo(n,t,e,r,i){var o=t||[],a=e||Object.create(null),s=r||Object.create(null);n.forEach((function(n){!function n(t,e,r,i,o,a){var s=i.path,c=i.name;0;var l=i.pathToRegexpOptions||{},u=function(n,t,e){e||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==t)return n;return to(t.path+"/"+n)}(s,o,l.strict);"boolean"==typeof i.caseSensitive&&(l.sensitive=i.caseSensitive);var p={path:u,regex:To(u,l),components:i.components||{default:i.component},alias:i.alias?"string"==typeof i.alias?[i.alias]:i.alias:[],instances:{},enteredCbs:{},name:c,parent:o,matchAs:a,redirect:i.redirect,beforeEnter:i.beforeEnter,meta:i.meta||{},props:null==i.props?{}:i.components?i.props:{default:i.props}};i.children&&i.children.forEach((function(i){var o=a?to(a+"/"+i.path):void 0;n(t,e,r,i,p,o)}));e[p.path]||(t.push(p.path),e[p.path]=p);if(void 0!==i.alias)for(var f=Array.isArray(i.alias)?i.alias:[i.alias],d=0;d<f.length;++d){0;var h={path:f[d],children:i.children};n(t,e,r,h,o,p.path||"/")}c&&(r[c]||(r[c]=p))}(o,a,s,n,i)}));for(var c=0,l=o.length;c<l;c++)"*"===o[c]&&(o.push(o.splice(c,1)[0]),l--,c--);return{pathList:o,pathMap:a,nameMap:s}}function To(n,t){return ro(n,[],t)}function Co(n,t){var e=jo(n),r=e.pathList,i=e.pathMap,o=e.nameMap;function a(n,e,a){var s=wo(n,e,!1,t),l=s.name;if(l){var u=o[l];if(!u)return c(null,s);var p=u.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),e&&"object"==typeof e.params)for(var f in e.params)!(f in s.params)&&p.indexOf(f)>-1&&(s.params[f]=e.params[f]);return s.path=yo(u.path,s.params),c(u,s,a)}if(s.path){s.params={};for(var d=0;d<r.length;d++){var h=r[d],m=i[h];if(Eo(m.regex,s.path,s.params))return c(m,s,a)}}return c(null,s)}function s(n,e){var r=n.redirect,i="function"==typeof r?r(Hi(n,e,null,t)):r;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return c(null,e);var s=i,l=s.name,u=s.path,p=e.query,f=e.hash,d=e.params;if(p=s.hasOwnProperty("query")?s.query:p,f=s.hasOwnProperty("hash")?s.hash:f,d=s.hasOwnProperty("params")?s.params:d,l){o[l];return a({_normalized:!0,name:l,query:p,hash:f,params:d},void 0,e)}if(u){var h=function(n,t){return no(n,t.parent?t.parent.path:"/",!0)}(u,n);return a({_normalized:!0,path:yo(h,d),query:p,hash:f},void 0,e)}return c(null,e)}function c(n,e,r){return n&&n.redirect?s(n,r||e):n&&n.matchAs?function(n,t,e){var r=a({_normalized:!0,path:yo(e,t.params)});if(r){var i=r.matched,o=i[i.length-1];return t.params=r.params,c(o,t)}return c(null,t)}(0,e,n.matchAs):Hi(n,e,r,t)}return{match:a,addRoute:function(n,t){var e="object"!=typeof n?o[n]:void 0;jo([t||n],r,i,o,e),e&&e.alias.length&&jo(e.alias.map((function(n){return{path:n,children:[t]}})),r,i,o,e)},getRoutes:function(){return r.map((function(n){return i[n]}))},addRoutes:function(n){jo(n,r,i,o)}}}function Eo(n,t,e){var r=t.match(n);if(!r)return!1;if(!e)return!0;for(var i=1,o=r.length;i<o;++i){var a=n.keys[i-1];a&&(e[a.name||"pathMatch"]="string"==typeof r[i]?Di(r[i]):r[i])}return!0}var Po=zo&&window.performance&&window.performance.now?window.performance:Date;function Ao(){return Po.now().toFixed(3)}var Io=Ao();function Oo(){return Io}function No(n){return Io=n}var qo=Object.create(null);function Lo(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(n,""),e=Oi({},window.history.state);return e.key=Oo(),window.history.replaceState(e,"",t),window.addEventListener("popstate",Mo),function(){window.removeEventListener("popstate",Mo)}}function Ro(n,t,e,r){if(n.app){var i=n.options.scrollBehavior;i&&n.app.$nextTick((function(){var o=function(){var n=Oo();if(n)return qo[n]}(),a=i.call(n,t,e,r?o:null);a&&("function"==typeof a.then?a.then((function(n){Go(n,o)})).catch((function(n){0})):Go(a,o))}))}}function Do(){var n=Oo();n&&(qo[n]={x:window.pageXOffset,y:window.pageYOffset})}function Mo(n){Do(),n.state&&n.state.key&&No(n.state.key)}function Uo(n){return Bo(n.x)||Bo(n.y)}function Fo(n){return{x:Bo(n.x)?n.x:window.pageXOffset,y:Bo(n.y)?n.y:window.pageYOffset}}function Bo(n){return"number"==typeof n}var Ho=/^#\d/;function Go(n,t){var e,r="object"==typeof n;if(r&&"string"==typeof n.selector){var i=Ho.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(i){var o=n.offset&&"object"==typeof n.offset?n.offset:{};t=function(n,t){var e=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-e.left-t.x,y:r.top-e.top-t.y}}(i,o={x:Bo((e=o).x)?e.x:0,y:Bo(e.y)?e.y:0})}else Uo(n)&&(t=Fo(n))}else r&&Uo(n)&&(t=Fo(n));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:n.behavior}):window.scrollTo(t.x,t.y))}var Wo,Vo=zo&&((-1===(Wo=window.navigator.userAgent).indexOf("Android 2.")&&-1===Wo.indexOf("Android 4.0")||-1===Wo.indexOf("Mobile Safari")||-1!==Wo.indexOf("Chrome")||-1!==Wo.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Ko(n,t){Do();var e=window.history;try{if(t){var r=Oi({},e.state);r.key=Oo(),e.replaceState(r,"",n)}else e.pushState({key:No(Ao())},"",n)}catch(e){window.location[t?"replace":"assign"](n)}}function Qo(n){Ko(n,!0)}function Yo(n,t,e){var r=function(i){i>=n.length?e():n[i]?t(n[i],(function(){r(i+1)})):r(i+1)};r(0)}var Jo={redirected:2,aborted:4,cancelled:8,duplicated:16};function Xo(n,t){return na(n,t,Jo.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var t={};return ta.forEach((function(e){e in n&&(t[e]=n[e])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function Zo(n,t){return na(n,t,Jo.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function na(n,t,e,r){var i=new Error(r);return i._isRouter=!0,i.from=n,i.to=t,i.type=e,i}var ta=["params","query","hash"];function ea(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function ra(n,t){return ea(n)&&n._isRouter&&(null==t||n.type===t)}function ia(n){return function(t,e,r){var i=!1,o=0,a=null;oa(n,(function(n,t,e,s){if("function"==typeof n&&void 0===n.cid){i=!0,o++;var c,l=ca((function(t){var i;((i=t).__esModule||sa&&"Module"===i[Symbol.toStringTag])&&(t=t.default),n.resolved="function"==typeof t?t:bo.extend(t),e.components[s]=t,--o<=0&&r()})),u=ca((function(n){var t="Failed to resolve async component "+s+": "+n;a||(a=ea(n)?n:new Error(t),r(a))}));try{c=n(l,u)}catch(n){u(n)}if(c)if("function"==typeof c.then)c.then(l,u);else{var p=c.component;p&&"function"==typeof p.then&&p.then(l,u)}}})),i||r()}}function oa(n,t){return aa(n.map((function(n){return Object.keys(n.components).map((function(e){return t(n.components[e],n.instances[e],n,e)}))})))}function aa(n){return Array.prototype.concat.apply([],n)}var sa="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function ca(n){var t=!1;return function(){for(var e=[],r=arguments.length;r--;)e[r]=arguments[r];if(!t)return t=!0,n.apply(this,e)}}var la=function(n,t){this.router=n,this.base=function(n){if(!n)if(zo){var t=document.querySelector("base");n=(n=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(t),this.current=Wi,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ua(n,t,e,r){var i=oa(n,(function(n,r,i,o){var a=function(n,t){"function"!=typeof n&&(n=bo.extend(n));return n.options[t]}(n,t);if(a)return Array.isArray(a)?a.map((function(n){return e(n,r,i,o)})):e(a,r,i,o)}));return aa(r?i.reverse():i)}function pa(n,t){if(t)return function(){return n.apply(t,arguments)}}la.prototype.listen=function(n){this.cb=n},la.prototype.onReady=function(n,t){this.ready?n():(this.readyCbs.push(n),t&&this.readyErrorCbs.push(t))},la.prototype.onError=function(n){this.errorCbs.push(n)},la.prototype.transitionTo=function(n,t,e){var r,i=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(t){t(n)})),n}var o=this.current;this.confirmTransition(r,(function(){i.updateRoute(r),t&&t(r),i.ensureURL(),i.router.afterHooks.forEach((function(n){n&&n(r,o)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(n){n(r)})))}),(function(n){e&&e(n),n&&!i.ready&&(ra(n,Jo.redirected)&&o===Wi||(i.ready=!0,i.readyErrorCbs.forEach((function(t){t(n)}))))}))},la.prototype.confirmTransition=function(n,t,e){var r=this,i=this.current;this.pending=n;var o,a,s=function(n){!ra(n)&&ea(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(t){t(n)})):console.error(n)),e&&e(n)},c=n.matched.length-1,l=i.matched.length-1;if(Qi(n,i)&&c===l&&n.matched[c]===i.matched[l])return this.ensureURL(),n.hash&&Ro(this.router,i,n,!1),s(((a=na(o=i,n,Jo.duplicated,'Avoided redundant navigation to current location: "'+o.fullPath+'".')).name="NavigationDuplicated",a));var u=function(n,t){var e,r=Math.max(n.length,t.length);for(e=0;e<r&&n[e]===t[e];e++);return{updated:t.slice(0,e),activated:t.slice(e),deactivated:n.slice(e)}}(this.current.matched,n.matched),p=u.updated,f=u.deactivated,d=u.activated,h=[].concat(function(n){return ua(n,"beforeRouteLeave",pa,!0)}(f),this.router.beforeHooks,function(n){return ua(n,"beforeRouteUpdate",pa)}(p),d.map((function(n){return n.beforeEnter})),ia(d)),m=function(t,e){if(r.pending!==n)return s(Zo(i,n));try{t(n,i,(function(t){!1===t?(r.ensureURL(!0),s(function(n,t){return na(n,t,Jo.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(i,n))):ea(t)?(r.ensureURL(!0),s(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(s(Xo(i,n)),"object"==typeof t&&t.replace?r.replace(t):r.push(t)):e(t)}))}catch(n){s(n)}};Yo(h,m,(function(){Yo(function(n){return ua(n,"beforeRouteEnter",(function(n,t,e,r){return function(n,t,e){return function(r,i,o){return n(r,i,(function(n){"function"==typeof n&&(t.enteredCbs[e]||(t.enteredCbs[e]=[]),t.enteredCbs[e].push(n)),o(n)}))}}(n,e,r)}))}(d).concat(r.router.resolveHooks),m,(function(){if(r.pending!==n)return s(Zo(i,n));r.pending=null,t(n),r.router.app&&r.router.app.$nextTick((function(){Ji(n)}))}))}))},la.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},la.prototype.setupListeners=function(){},la.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=Wi,this.pending=null};var fa=function(n){function t(t,e){n.call(this,t,e),this._startLocation=da(this.base)}return n&&(t.__proto__=n),t.prototype=Object.create(n&&n.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var t=this.router,e=t.options.scrollBehavior,r=Vo&&e;r&&this.listeners.push(Lo());var i=function(){var e=n.current,i=da(n.base);n.current===Wi&&i===n._startLocation||n.transitionTo(i,(function(n){r&&Ro(t,n,e,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},t.prototype.go=function(n){window.history.go(n)},t.prototype.push=function(n,t,e){var r=this,i=this.current;this.transitionTo(n,(function(n){Ko(to(r.base+n.fullPath)),Ro(r.router,n,i,!1),t&&t(n)}),e)},t.prototype.replace=function(n,t,e){var r=this,i=this.current;this.transitionTo(n,(function(n){Qo(to(r.base+n.fullPath)),Ro(r.router,n,i,!1),t&&t(n)}),e)},t.prototype.ensureURL=function(n){if(da(this.base)!==this.current.fullPath){var t=to(this.base+this.current.fullPath);n?Ko(t):Qo(t)}},t.prototype.getCurrentLocation=function(){return da(this.base)},t}(la);function da(n){var t=window.location.pathname,e=t.toLowerCase(),r=n.toLowerCase();return!n||e!==r&&0!==e.indexOf(to(r+"/"))||(t=t.slice(n.length)),(t||"/")+window.location.search+window.location.hash}var ha=function(n){function t(t,e,r){n.call(this,t,e),r&&function(n){var t=da(n);if(!/^\/#/.test(t))return window.location.replace(to(n+"/#"+t)),!0}(this.base)||ma()}return n&&(t.__proto__=n),t.prototype=Object.create(n&&n.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,e=Vo&&t;e&&this.listeners.push(Lo());var r=function(){var t=n.current;ma()&&n.transitionTo(ga(),(function(r){e&&Ro(n.router,r,t,!0),Vo||xa(r.fullPath)}))},i=Vo?"popstate":"hashchange";window.addEventListener(i,r),this.listeners.push((function(){window.removeEventListener(i,r)}))}},t.prototype.push=function(n,t,e){var r=this,i=this.current;this.transitionTo(n,(function(n){_a(n.fullPath),Ro(r.router,n,i,!1),t&&t(n)}),e)},t.prototype.replace=function(n,t,e){var r=this,i=this.current;this.transitionTo(n,(function(n){xa(n.fullPath),Ro(r.router,n,i,!1),t&&t(n)}),e)},t.prototype.go=function(n){window.history.go(n)},t.prototype.ensureURL=function(n){var t=this.current.fullPath;ga()!==t&&(n?_a(t):xa(t))},t.prototype.getCurrentLocation=function(){return ga()},t}(la);function ma(){var n=ga();return"/"===n.charAt(0)||(xa("/"+n),!1)}function ga(){var n=window.location.href,t=n.indexOf("#");return t<0?"":n=n.slice(t+1)}function va(n){var t=window.location.href,e=t.indexOf("#");return(e>=0?t.slice(0,e):t)+"#"+n}function _a(n){Vo?Ko(va(n)):window.location.hash=n}function xa(n){Vo?Qo(va(n)):window.location.replace(va(n))}var ya=function(n){function t(t,e){n.call(this,t,e),this.stack=[],this.index=-1}return n&&(t.__proto__=n),t.prototype=Object.create(n&&n.prototype),t.prototype.constructor=t,t.prototype.push=function(n,t,e){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,t&&t(n)}),e)},t.prototype.replace=function(n,t,e){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),t&&t(n)}),e)},t.prototype.go=function(n){var t=this,e=this.index+n;if(!(e<0||e>=this.stack.length)){var r=this.stack[e];this.confirmTransition(r,(function(){var n=t.current;t.index=e,t.updateRoute(r),t.router.afterHooks.forEach((function(t){t&&t(r,n)}))}),(function(n){ra(n,Jo.duplicated)&&(t.index=e)}))}},t.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},t.prototype.ensureURL=function(){},t}(la),wa=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Co(n.routes||[],this);var t=n.mode||"hash";switch(this.fallback="history"===t&&!Vo&&!1!==n.fallback,this.fallback&&(t="hash"),zo||(t="abstract"),this.mode=t,t){case"history":this.history=new fa(this,n.base);break;case"hash":this.history=new ha(this,n.base,this.fallback);break;case"abstract":this.history=new ya(this,n.base);break;default:0}},ba={currentRoute:{configurable:!0}};function ka(n,t){return n.push(t),function(){var e=n.indexOf(t);e>-1&&n.splice(e,1)}}wa.prototype.match=function(n,t,e){return this.matcher.match(n,t,e)},ba.currentRoute.get=function(){return this.history&&this.history.current},wa.prototype.init=function(n){var t=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var e=t.apps.indexOf(n);e>-1&&t.apps.splice(e,1),t.app===n&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=n;var e=this.history;if(e instanceof fa||e instanceof ha){var r=function(n){e.setupListeners(),function(n){var r=e.current,i=t.options.scrollBehavior;Vo&&i&&"fullPath"in n&&Ro(t,n,r,!1)}(n)};e.transitionTo(e.getCurrentLocation(),r,r)}e.listen((function(n){t.apps.forEach((function(t){t._route=n}))}))}},wa.prototype.beforeEach=function(n){return ka(this.beforeHooks,n)},wa.prototype.beforeResolve=function(n){return ka(this.resolveHooks,n)},wa.prototype.afterEach=function(n){return ka(this.afterHooks,n)},wa.prototype.onReady=function(n,t){this.history.onReady(n,t)},wa.prototype.onError=function(n){this.history.onError(n)},wa.prototype.push=function(n,t,e){var r=this;if(!t&&!e&&"undefined"!=typeof Promise)return new Promise((function(t,e){r.history.push(n,t,e)}));this.history.push(n,t,e)},wa.prototype.replace=function(n,t,e){var r=this;if(!t&&!e&&"undefined"!=typeof Promise)return new Promise((function(t,e){r.history.replace(n,t,e)}));this.history.replace(n,t,e)},wa.prototype.go=function(n){this.history.go(n)},wa.prototype.back=function(){this.go(-1)},wa.prototype.forward=function(){this.go(1)},wa.prototype.getMatchedComponents=function(n){var t=n?n.matched?n:this.resolve(n).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(n){return Object.keys(n.components).map((function(t){return n.components[t]}))}))):[]},wa.prototype.resolve=function(n,t,e){var r=wo(n,t=t||this.history.current,e,this),i=this.match(r,t),o=i.redirectedFrom||i.fullPath;return{location:r,route:i,href:function(n,t,e){var r="hash"===e?"#"+t:t;return n?to(n+"/"+r):r}(this.history.base,o,this.mode),normalizedTo:r,resolved:i}},wa.prototype.getRoutes=function(){return this.matcher.getRoutes()},wa.prototype.addRoute=function(n,t){this.matcher.addRoute(n,t),this.history.current!==Wi&&this.history.transitionTo(this.history.getCurrentLocation())},wa.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==Wi&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(wa.prototype,ba),wa.install=function n(t){if(!n.installed||bo!==t){n.installed=!0,bo=t;var e=function(n){return void 0!==n},r=function(n,t){var r=n.$options._parentVnode;e(r)&&e(r=r.data)&&e(r=r.registerRouteInstance)&&r(n,t)};t.mixin({beforeCreate:function(){e(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",Xi),t.component("RouterLink",$o);var i=t.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},wa.version="3.5.3",wa.isNavigationFailure=ra,wa.NavigationFailureType=Jo,wa.START_LOCATION=Wi,zo&&window.Vue&&window.Vue.use(wa);var $a=wa;e(207),e(152),e(232),e(117),e(234),e(118),e(119),e(235);function Sa(n){n.locales&&Object.keys(n.locales).forEach((function(t){n.locales[t].path=t})),Object.freeze(n)}e(62),e(77),e(103);function za(n){return(za="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}var ja=e(54),Ta=(e(162),e(31),e(86),e(210),e(211),e(29),e(27),{NotFound:function(){return e.e(6).then(e.bind(null,419))},Layout:function(){return Promise.all([e.e(0),e.e(2)]).then(e.bind(null,418))}}),Ca={"v-7b757bff":function(){return e.e(8).then(e.bind(null,422))},"v-14d731a6":function(){return e.e(7).then(e.bind(null,423))},"v-50532a9c":function(){return e.e(9).then(e.bind(null,424))},"v-467f0776":function(){return e.e(10).then(e.bind(null,425))},"v-6cff0268":function(){return e.e(11).then(e.bind(null,426))},"v-16c65f6c":function(){return e.e(12).then(e.bind(null,427))},"v-1fb921c8":function(){return e.e(13).then(e.bind(null,428))},"v-79a75635":function(){return e.e(14).then(e.bind(null,429))},"v-fcb7d568":function(){return e.e(15).then(e.bind(null,430))},"v-66bdd3e8":function(){return e.e(16).then(e.bind(null,431))},"v-4ae56fbe":function(){return e.e(17).then(e.bind(null,432))},"v-75be7fd3":function(){return e.e(18).then(e.bind(null,433))},"v-0d5263ec":function(){return e.e(19).then(e.bind(null,434))},"v-4a574a03":function(){return e.e(23).then(e.bind(null,435))},"v-34f6f7a4":function(){return e.e(20).then(e.bind(null,436))},"v-cc890f28":function(){return e.e(21).then(e.bind(null,437))},"v-6695a75d":function(){return e.e(24).then(e.bind(null,438))},"v-33b03a91":function(){return e.e(25).then(e.bind(null,439))},"v-ee533d90":function(){return e.e(22).then(e.bind(null,440))}};function Ea(n){var t=Object.create(null);return function(e){return t[e]||(t[e]=n(e))}}var Pa=/-(\w)/g,Aa=Ea((function(n){return n.replace(Pa,(function(n,t){return t?t.toUpperCase():""}))})),Ia=/\B([A-Z])/g,Oa=Ea((function(n){return n.replace(Ia,"-$1").toLowerCase()})),Na=Ea((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function qa(n,t){if(t)return n(t)?n(t):t.includes("-")?n(Na(Aa(t))):n(Na(t))||n(Oa(t))}var La=Object.assign({},Ta,Ca),Ra=function(n){return La[n]},Da=function(n){return Ca[n]},Ma=function(n){return Ta[n]},Ua=function(n){return Ii.component(n)};function Fa(n){return qa(Da,n)}function Ba(n){return qa(Ma,n)}function Ha(n){return qa(Ra,n)}function Ga(n){return qa(Ua,n)}function Wa(){for(var n=arguments.length,t=new Array(n),e=0;e<n;e++)t[e]=arguments[e];return Promise.all(t.filter((function(n){return n})).map(function(){var n=Object(r.a)(regeneratorRuntime.mark((function n(t){var e;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(Ga(t)||!Ha(t)){n.next=5;break}return n.next=3,Ha(t)();case 3:e=n.sent,Ii.component(t,e.default);case 5:case"end":return n.stop()}}),n)})));return function(t){return n.apply(this,arguments)}}()))}function Va(n,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=t)}var Ka=e(114),Qa=(e(248),e(200),e(201),e(188)),Ya=e.n(Qa),Ja=e(189),Xa=e.n(Ja),Za={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===Object(Ka.a)(n,1)[0]})).map((function(n){var t=Object(Ka.a)(n,2);t[0];return t[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(t=n)?t.map((function(n){var t="<meta";return Object.keys(n).forEach((function(e){t+=" ".concat(e,'="').concat(Xa()(n[e]),'"')})),t+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=ts(this.$canonicalUrl)}var t},mounted:function(){this.currentMetaTags=Object(ja.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=es(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return Ya()([{name:"description",content:this.$description}],n,this.siteMeta,rs)},updateCanonicalLink:function(){ns(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",ts(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){es(null,this.currentMetaTags),ns()}};function ns(){var n=document.querySelector("link[rel='canonical']");n&&n.remove()}function ts(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n?'<link href="'.concat(n,'" rel="canonical" />'):""}function es(n,t){if(t&&Object(ja.a)(t).filter((function(n){return n.parentNode===document.head})).forEach((function(n){return document.head.removeChild(n)})),n)return n.map((function(n){var t=document.createElement("meta");return Object.keys(n).forEach((function(e){t.setAttribute(e,n[e])})),document.head.appendChild(t),t}))}function rs(n){for(var t=0,e=["name","property","itemprop"];t<e.length;t++){var r=e[t];if(n.hasOwnProperty(r))return n[r]+r}return JSON.stringify(n)}e(116);var is=e(190),os={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:e.n(is)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,t=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return t.some((function(t){return t.hash===n.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),i=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+r,a=0;a<e.length;a++){var s=e[a],c=e[a+1],l=0===a&&0===r||r>=s.parentElement.offsetTop+10&&(!c||r<c.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(l&&u!==decodeURIComponent(s.hash)){var p=s;if(o===i)for(var f=a+1;f<e.length;f++)if(u===decodeURIComponent(e[f].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(p.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},as=(e(104),e(84)),ss=e.n(as),cs=[Za,os,{mounted:function(){var n=this;ss.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,t,e){n.path===t.path||Ii.component(n.name)||ss.a.start(),e()})),this.$router.afterEach((function(){ss.a.done(),n.isSidebarOpen=!1}))}}],ls={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return Va("layout",n),Ii.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},us=e(56),ps=Object(us.a)(ls,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,t,e){var r;switch(t){case"components":n[t]||(n[t]={}),Object.assign(n[t],e);break;case"mixins":n[t]||(n[t]=[]),(r=n[t]).push.apply(r,Object(ja.a)(e));break;default:throw new Error("Unknown option name.")}}(ps,"mixins",cs);var fs=[{name:"v-7b757bff",path:"/nginx/01_nginxan-zhuang-ji-pei-zhi/1.nginxjian-jie.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-7b757bff").then(e)}},{path:"/Nginx/01_Nginx安装及配置/1.Nginx简介.html",redirect:"/nginx/01_nginxan-zhuang-ji-pei-zhi/1.nginxjian-jie.html"},{name:"v-14d731a6",path:"/javascript/tong-bu-yi-bu.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-14d731a6").then(e)}},{path:"/JavaScript/同步异步.html",redirect:"/javascript/tong-bu-yi-bu.html"},{name:"v-50532a9c",path:"/nginx/01_nginxan-zhuang-ji-pei-zhi/2.nginxan-zhuang.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-50532a9c").then(e)}},{path:"/Nginx/01_Nginx安装及配置/2.Nginx安装.html",redirect:"/nginx/01_nginxan-zhuang-ji-pei-zhi/2.nginxan-zhuang.html"},{name:"v-467f0776",path:"/nginx/01_nginxan-zhuang-ji-pei-zhi/3.nginxpei-zhi-wen-jian.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-467f0776").then(e)}},{path:"/Nginx/01_Nginx安装及配置/3.Nginx配置文件.html",redirect:"/nginx/01_nginxan-zhuang-ji-pei-zhi/3.nginxpei-zhi-wen-jian.html"},{name:"v-6cff0268",path:"/nginx/02_nginxmo-kuai-guan-li/nginxchang-yong-mo-kuai-01.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-6cff0268").then(e)}},{path:"/Nginx/02_Nginx模块管理/Nginx常用模块01.html",redirect:"/nginx/02_nginxmo-kuai-guan-li/nginxchang-yong-mo-kuai-01.html"},{name:"v-16c65f6c",path:"/nginx/02_nginxmo-kuai-guan-li/nginxchang-yong-mo-kuai-02.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-16c65f6c").then(e)}},{path:"/Nginx/02_Nginx模块管理/Nginx常用模块02.html",redirect:"/nginx/02_nginxmo-kuai-guan-li/nginxchang-yong-mo-kuai-02.html"},{name:"v-1fb921c8",path:"/nginx/02_nginxmo-kuai-guan-li/nginxchang-yong-mo-kuai-03.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-1fb921c8").then(e)}},{path:"/Nginx/02_Nginx模块管理/Nginx常用模块03.html",redirect:"/nginx/02_nginxmo-kuai-guan-li/nginxchang-yong-mo-kuai-03.html"},{name:"v-79a75635",path:"/nginx/03_lnmphuan-jing-bu-shu/1.nginxwang-zhan-fu-wu.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-79a75635").then(e)}},{path:"/Nginx/03_LNMP环境部署/1.Nginx网站服务.html",redirect:"/nginx/03_lnmphuan-jing-bu-shu/1.nginxwang-zhan-fu-wu.html"},{name:"v-fcb7d568",path:"/nginx/03_lnmphuan-jing-bu-shu/2.lnmphuan-jing-bu-shu.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-fcb7d568").then(e)}},{path:"/Nginx/03_LNMP环境部署/2.LNMP环境部署.html",redirect:"/nginx/03_lnmphuan-jing-bu-shu/2.lnmphuan-jing-bu-shu.html"},{name:"v-66bdd3e8",path:"/nginx/04_nginxyou-hua-guan-li/1.-nginxyou-hua-ji-fang-dao-lian/nginxyou-hua-ji-fang-dao-lian.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-66bdd3e8").then(e)}},{path:"/Nginx/04_nginx优化管理/1. Nginx优化及防盗链/Nginx优化及防盗链.html",redirect:"/nginx/04_nginxyou-hua-guan-li/1.-nginxyou-hua-ji-fang-dao-lian/nginxyou-hua-ji-fang-dao-lian.html"},{name:"v-4ae56fbe",path:"/nginx/04_nginxyou-hua-guan-li/2.-nginx-rewrite/nginx-rewrite.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-4ae56fbe").then(e)}},{path:"/Nginx/04_nginx优化管理/2. Nginx Rewrite/Nginx Rewrite.html",redirect:"/nginx/04_nginxyou-hua-guan-li/2.-nginx-rewrite/nginx-rewrite.html"},{name:"v-75be7fd3",path:"/",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-75be7fd3").then(e)}},{path:"/index.html",redirect:"/"},{name:"v-0d5263ec",path:"/unicloud.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-0d5263ec").then(e)}},{path:"/uniCloud.html",redirect:"/unicloud.html"},{name:"v-4a574a03",path:"/han-shu-de-yi-xie-yan-jiu.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-4a574a03").then(e)}},{path:"/函数的一些研究.html",redirect:"/han-shu-de-yi-xie-yan-jiu.html"},{name:"v-34f6f7a4",path:"/dai-ma/chang-jian-css-dai-ma-ku.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-34f6f7a4").then(e)}},{path:"/代码/常见 css 代码库.html",redirect:"/dai-ma/chang-jian-css-dai-ma-ku.html"},{name:"v-cc890f28",path:"/dai-ma/chang-jian-js-dai-ma-ku.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-cc890f28").then(e)}},{path:"/代码/常见 js 代码库.html",redirect:"/dai-ma/chang-jian-js-dai-ma-ku.html"},{name:"v-6695a75d",path:"/shou-cang-wen-zhang/xie-gei-nu-peng-you-de-zhong-ji-qian-duan-mian-shi-mi-ji-han-xiang-xi-da-an-15kji-bie-.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-6695a75d").then(e)}},{path:"/收藏文章/写给女朋友的中级前端面试秘籍（含详细答案，15k级别）.html",redirect:"/shou-cang-wen-zhang/xie-gei-nu-peng-you-de-zhong-ji-qian-duan-mian-shi-mi-ji-han-xiang-xi-da-an-15kji-bie-.html"},{name:"v-33b03a91",path:"/mian-shi.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-33b03a91").then(e)}},{path:"/面试.html",redirect:"/mian-shi.html"},{name:"v-ee533d90",path:"/dai-ma/chang-jian-zheng-ze-dai-ma-ku.html",component:ps,beforeEnter:function(n,t,e){Wa("Layout","v-ee533d90").then(e)}},{path:"/代码/常见 正则 代码库.html",redirect:"/dai-ma/chang-jian-zheng-ze-dai-ma-ku.html"},{path:"*",component:ps}],ds={title:"ONEMUE Docs",description:"This is a Docs.",base:"/docs/",headTags:[],pages:[{title:"Nginx简介",frontmatter:{},regularPath:"/Nginx/01_Nginx%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/1.Nginx%E7%AE%80%E4%BB%8B.html",relativePath:"Nginx/01_Nginx安装及配置/1.Nginx简介.md",key:"v-7b757bff",path:"/nginx/01_nginxan-zhuang-ji-pei-zhi/1.nginxjian-jie.html",headers:[{level:2,title:"1. 什么是Nginx",slug:"_1-什么是nginx",normalizedTitle:"1. 什么是nginx",charIndex:14},{level:2,title:"2. Nginx能做什么？",slug:"_2-nginx能做什么",normalizedTitle:"2. nginx能做什么？",charIndex:413},{level:3,title:"2.1 正向代理",slug:"_2-1-正向代理",normalizedTitle:"2.1 正向代理",charIndex:657},{level:3,title:"2.2 反向代理",slug:"_2-2-反向代理",normalizedTitle:"2.2 反向代理",charIndex:810},{level:3,title:"2.3 Nginx反向代理： Web服务器的调度器",slug:"_2-3-nginx反向代理-web服务器的调度器",normalizedTitle:"2.3 nginx反向代理： web服务器的调度器",charIndex:1e3},{level:3,title:"2.4 反向代理的作用",slug:"_2-4-反向代理的作用",normalizedTitle:"2.4 反向代理的作用",charIndex:1330},{level:2,title:"3. Nginx核心特点",slug:"_3-nginx核心特点",normalizedTitle:"3. nginx核心特点",charIndex:1488},{level:3,title:"3.1 跨平台",slug:"_3-1-跨平台",normalizedTitle:"3.1 跨平台",charIndex:1505},{level:3,title:"3.2 配置异常简单",slug:"_3-2-配置异常简单",normalizedTitle:"3.2 配置异常简单",charIndex:1553},{level:3,title:"3.3 非阻塞、高并发连接",slug:"_3-3-非阻塞、高并发连接",normalizedTitle:"3.3 非阻塞、高并发连接",charIndex:1576},{level:3,title:"3.4 事件驱动",slug:"_3-4-事件驱动",normalizedTitle:"3.4 事件驱动",charIndex:1981},{level:3,title:"3.5 总结：",slug:"_3-5-总结",normalizedTitle:"3.5 总结：",charIndex:2595}],headersStr:"1. 什么是Nginx 2. Nginx能做什么？ 2.1 正向代理 2.2 反向代理 2.3 Nginx反向代理： Web服务器的调度器 2.4 反向代理的作用 3. Nginx核心特点 3.1 跨平台 3.2 配置异常简单 3.3 非阻塞、高并发连接 3.4 事件驱动 3.5 总结：",content:"# Nginx简介\n\n\n# 1. 什么是Nginx\n\nNginx是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP代理服务器。\n\nNginx是一款轻量级的Web服务器反向代理服务器以及电子邮件代理服务器，并在一个BSD-like协议下发行。由俄罗斯的程序设计师lgor Sysoev所开发，供俄国大型的入口网站及搜索引擎Rambler使用。其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好。\n\nNginx相较于Apache\\lighttpd具有占有内存少，稳定性高等优势，并且依靠并发能力强，丰富的模块库以及友好灵活的配置而闻名。在Linux操作系统下，nginx使用epoll事件模型,得益于此，nginx在Linux操作系统下效率相当高。同时Nginx在OpenBSD或FreeBSD操作系统上采用类似于Epoll的高效事件模型kqueue。\n\n\n# 2. Nginx能做什么？\n\n1.HTTP服务器 （包含动静分离）\n\n2.反向代理\n\n3.负载均衡\n\n * round-robin( [ˈrɑːbɪn]) 轮询\n * least-connected 最少连接\n * ip-hash IP哈希\n * Weighted load balancing（[ˈbælənsɪŋ]） 加权负载平衡\n * fair (公平的)（第三方）智能调整度算法\n * url_hash (第三方) 按照访问的url的hash结果分配请求\n\n4.正向代理\n\n\n# 2.1 正向代理\n\n用于代理内部网络对Internet的连接请求（如VPN/NAT),客户端指定代理服务器,并将本来要直接发送给目标Web服务器的HTTP请求先发送到代理服务器上，然后由代理服务器去访问Web服务器，并将Web服务器的Respons回传给客服端。\n\n正向代理是为客户端方提供服务的\n\n\n# 2.2 反向代理\n\n与正向代理相反，如果局域网向Internet 提供资源，并让 lnternet 上的其他用户可以访问局域网内资源，也可以设置一个代理服务器，它提供的服务器就是反向代理。反向代理服务器接受来自Internet的连接，然后将请求转发给内部网络上的服务器，并将Response回传给 lnternet 上请求连接的客户端。\n\n反向代理是为服务器方提供服务的\n\n\n# 2.3 Nginx反向代理： Web服务器的调度器\n\n反向代理(Reverse Proxy) 方式是指以代理服务器来接受客户端的连接请求，然后将请求转发给网络上的web服务器(可能是apache、 nginx、 tomcat、 iis等) , 并将从web服务器上得到的结果返回给请求连接的客户端，此时代理服务器对外就表现为一个服务器。\n\n反向代理服务器代理网站Web服务器接收Http请求, 对请求进行转发。而且nginx作为反向代理服务器可以根据用户请求的内容把请求转发给后端不同的web服务器，例如静动分离，再例如在nginx上创建多个虚拟主机，这样就成功的做到了在浏览器中输入不同域名(url) 的时候访问后端的不同web服务器或web群集。\n\n\n# 2.4 反向代理的作用\n\n * 保护网站安全： 任何来自Internet的请求都必须先经过代理服务器；\n * 通过配置缓存功能加速Web请求：可以缓存真实Web服务器上的某些静态资源， 减轻真实web服务器的负载压力；\n * 实现负载均衡：充当负载均衡服务器均衡地分发请求，平均集群中各个服务器的负载压力；\n\n\n# 3. Nginx核心特点\n\n\n# 3.1 跨平台\n\nNginx 可以在大多数OS编译运行，而且也有windows的版本；\n\n\n# 3.2 配置异常简单\n\n非常容易上手\n\n\n# 3.3 非阻塞、高并发连接\n\n官方测试能够支撑5万并发连接，在实际生产环境中跑到2 ~ 3万并发连接数。(这得益于Nginx使用了最新的epoll模型) ;\n\n注：对于一一个Web服务器来说，首先看一个请求的基本过程: 建立连接——接收数据——发送数据，在系统底层看来：上述过程 (建立连接——接收数据——发送数据) 在系统底层就是读写事件。\n\n如果采用阻塞调用的方式，当读写事件没有准备好时，那么就只能等待，当前线程被挂起，等事件准备好了，才能进行读写事件。\n\n如果采用非阻塞调用的方式：事件马上返回，告诉你事件还没准备好呢，过会再来吧。过一会，再来检查一下事件，直到事件准备好了为止，在这期间，你就可以先去做其它事情，然后再来看看事件好了没。虽然不阻塞了，但你得不时地过来检查一下事件的状态,你可以做更多的事情了，但带来的开销也是不小的。非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程\n\n\n# 3.4 事件驱动\n\n通信机制采用epoll模型，支持更大的并发连接。\n\n非阻塞通过不断检查事件的状态来判断是否进行读写操作，这样带来的开销很大，因此就有了异步非阻塞事件处理机制。这种机制让你可以同时监控多个事件，调用他们是非阻塞的，但可以设置超时时间，在超时时间之内，如果有事件准备好了，就返回。这种机制解决了上面阻塞调用与非阻塞调用的两个问题。\n\n以epol模型为例:当事件没有准备好时，就放入epoll(队列)里面。如果有事件准备好了，那么就去处理；当事件没有准备好时，才在epoll里面等着。这样，我们就可以并发处理大量的并发了，当然，这里的并发请求，是指未处理完的请求。线程只有一 个，所以同时能处理的请求当然只有一个了，只是在请求之间进行不断地切换而已，切换也是因为异步事件末准备好，而主动让出的。这里的切换是没有任何代价，你可以理解为循环处理多个准备好的事件。\n\n同多线程方式相比，这种事件处理方式是有很大的优势的，不需要创建线程，每个请求占用的内存也很少，没有上下文切换，事件处理非常的轻量级，并发数再多也不会导致无谓的资源浪费(上下文切换)。对于apache服务器，每个请求会独占一个工作线程，当并发数上到几千时，就同时有几千的线程在处理请求了。这对操作系统来说，是个不小的挑战：因为线程带来的内存占用非常大，线程的上下文切换带来的cpu开销很大，自然性能就上不去，从而导致在高并发场景下性能下降严重。\n\n\n# 3.5 总结：\n\n通过异步非阻塞的事情处理机制，Nginx实现由进程循环处理多个准备好的事件，从而实现高并发和轻量型。\n\n# 3.5.1 Master/Worker结构\n\n一个master进程，生成一个或多个worker进程\n\n\n\nMaster-Worker设计模式主要包含两个主要组件 Master 和Worker， Master 维护着Worker队列，将请求下发到多个Worker并行执行，Worker主要进行实际逻辑计算，并将结果返回给Master。\n\n 1. Nginx在启动后，会有一个master 进程和多个相互独立的 worker 进程。\n\n 2. 接收来自外界的信号，向各 worker进程发送信号，每个进程都有可能来处理这个连接。\n\n 3. master进程能监控 worker进程的运行状态，当 worker进程退出后(异常情况下)，会自动启动新的 worker进程。\n\n 4. 将worker进程的数量设置成等于cpu的核数比较合理。\n    \n    查看核数命令cat /proc/cpuinfo|grep -c 'processor'\n    \n    -c 返回字符串的个数\n\nnginx采用这种进程模型有什么好处? 采用独立的进程，可以让互相之间不会影响，一个进程退出后，其它进程还在工作，服务不会中断，Master进程则很快重新启动新的 Worker进程。当然, Worker进程的异常退出，肯定是程序有bug了，异常退出，会导致当前Worker上的所有请求失败，不过不会影响到所有请求,所以降低了风险。\n\n# 3.5.2 内存消耗小\n\n处理大并发的请求内存消耗非常小。在3万并发连接下，开启的10个Nginx 进程才消耗150M内存（15M*10=150M)\n\n# 3.5.3 内置的健康检查功能\n\n如果Nginx代理的后端的某台Web服务器宕机了，不会影响前端访问。\n\n# 3.5.4 节省带宽\n\n支持GZIP压缩，可以添加浏览器本地缓存的Header头。\n\n# 3.5.5 稳定性高\n\n用于反向代理，宕机的概率微乎其微。",normalizedContent:"# nginx简介\n\n\n# 1. 什么是nginx\n\nnginx是一个高性能的http和反向代理服务器，也是一个imap/pop3/smtp代理服务器。\n\nnginx是一款轻量级的web服务器反向代理服务器以及电子邮件代理服务器，并在一个bsd-like协议下发行。由俄罗斯的程序设计师lgor sysoev所开发，供俄国大型的入口网站及搜索引擎rambler使用。其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好。\n\nnginx相较于apache\\lighttpd具有占有内存少，稳定性高等优势，并且依靠并发能力强，丰富的模块库以及友好灵活的配置而闻名。在linux操作系统下，nginx使用epoll事件模型,得益于此，nginx在linux操作系统下效率相当高。同时nginx在openbsd或freebsd操作系统上采用类似于epoll的高效事件模型kqueue。\n\n\n# 2. nginx能做什么？\n\n1.http服务器 （包含动静分离）\n\n2.反向代理\n\n3.负载均衡\n\n * round-robin( [ˈrɑːbɪn]) 轮询\n * least-connected 最少连接\n * ip-hash ip哈希\n * weighted load balancing（[ˈbælənsɪŋ]） 加权负载平衡\n * fair (公平的)（第三方）智能调整度算法\n * url_hash (第三方) 按照访问的url的hash结果分配请求\n\n4.正向代理\n\n\n# 2.1 正向代理\n\n用于代理内部网络对internet的连接请求（如vpn/nat),客户端指定代理服务器,并将本来要直接发送给目标web服务器的http请求先发送到代理服务器上，然后由代理服务器去访问web服务器，并将web服务器的respons回传给客服端。\n\n正向代理是为客户端方提供服务的\n\n\n# 2.2 反向代理\n\n与正向代理相反，如果局域网向internet 提供资源，并让 lnternet 上的其他用户可以访问局域网内资源，也可以设置一个代理服务器，它提供的服务器就是反向代理。反向代理服务器接受来自internet的连接，然后将请求转发给内部网络上的服务器，并将response回传给 lnternet 上请求连接的客户端。\n\n反向代理是为服务器方提供服务的\n\n\n# 2.3 nginx反向代理： web服务器的调度器\n\n反向代理(reverse proxy) 方式是指以代理服务器来接受客户端的连接请求，然后将请求转发给网络上的web服务器(可能是apache、 nginx、 tomcat、 iis等) , 并将从web服务器上得到的结果返回给请求连接的客户端，此时代理服务器对外就表现为一个服务器。\n\n反向代理服务器代理网站web服务器接收http请求, 对请求进行转发。而且nginx作为反向代理服务器可以根据用户请求的内容把请求转发给后端不同的web服务器，例如静动分离，再例如在nginx上创建多个虚拟主机，这样就成功的做到了在浏览器中输入不同域名(url) 的时候访问后端的不同web服务器或web群集。\n\n\n# 2.4 反向代理的作用\n\n * 保护网站安全： 任何来自internet的请求都必须先经过代理服务器；\n * 通过配置缓存功能加速web请求：可以缓存真实web服务器上的某些静态资源， 减轻真实web服务器的负载压力；\n * 实现负载均衡：充当负载均衡服务器均衡地分发请求，平均集群中各个服务器的负载压力；\n\n\n# 3. nginx核心特点\n\n\n# 3.1 跨平台\n\nnginx 可以在大多数os编译运行，而且也有windows的版本；\n\n\n# 3.2 配置异常简单\n\n非常容易上手\n\n\n# 3.3 非阻塞、高并发连接\n\n官方测试能够支撑5万并发连接，在实际生产环境中跑到2 ~ 3万并发连接数。(这得益于nginx使用了最新的epoll模型) ;\n\n注：对于一一个web服务器来说，首先看一个请求的基本过程: 建立连接——接收数据——发送数据，在系统底层看来：上述过程 (建立连接——接收数据——发送数据) 在系统底层就是读写事件。\n\n如果采用阻塞调用的方式，当读写事件没有准备好时，那么就只能等待，当前线程被挂起，等事件准备好了，才能进行读写事件。\n\n如果采用非阻塞调用的方式：事件马上返回，告诉你事件还没准备好呢，过会再来吧。过一会，再来检查一下事件，直到事件准备好了为止，在这期间，你就可以先去做其它事情，然后再来看看事件好了没。虽然不阻塞了，但你得不时地过来检查一下事件的状态,你可以做更多的事情了，但带来的开销也是不小的。非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程\n\n\n# 3.4 事件驱动\n\n通信机制采用epoll模型，支持更大的并发连接。\n\n非阻塞通过不断检查事件的状态来判断是否进行读写操作，这样带来的开销很大，因此就有了异步非阻塞事件处理机制。这种机制让你可以同时监控多个事件，调用他们是非阻塞的，但可以设置超时时间，在超时时间之内，如果有事件准备好了，就返回。这种机制解决了上面阻塞调用与非阻塞调用的两个问题。\n\n以epol模型为例:当事件没有准备好时，就放入epoll(队列)里面。如果有事件准备好了，那么就去处理；当事件没有准备好时，才在epoll里面等着。这样，我们就可以并发处理大量的并发了，当然，这里的并发请求，是指未处理完的请求。线程只有一 个，所以同时能处理的请求当然只有一个了，只是在请求之间进行不断地切换而已，切换也是因为异步事件末准备好，而主动让出的。这里的切换是没有任何代价，你可以理解为循环处理多个准备好的事件。\n\n同多线程方式相比，这种事件处理方式是有很大的优势的，不需要创建线程，每个请求占用的内存也很少，没有上下文切换，事件处理非常的轻量级，并发数再多也不会导致无谓的资源浪费(上下文切换)。对于apache服务器，每个请求会独占一个工作线程，当并发数上到几千时，就同时有几千的线程在处理请求了。这对操作系统来说，是个不小的挑战：因为线程带来的内存占用非常大，线程的上下文切换带来的cpu开销很大，自然性能就上不去，从而导致在高并发场景下性能下降严重。\n\n\n# 3.5 总结：\n\n通过异步非阻塞的事情处理机制，nginx实现由进程循环处理多个准备好的事件，从而实现高并发和轻量型。\n\n# 3.5.1 master/worker结构\n\n一个master进程，生成一个或多个worker进程\n\n\n\nmaster-worker设计模式主要包含两个主要组件 master 和worker， master 维护着worker队列，将请求下发到多个worker并行执行，worker主要进行实际逻辑计算，并将结果返回给master。\n\n 1. nginx在启动后，会有一个master 进程和多个相互独立的 worker 进程。\n\n 2. 接收来自外界的信号，向各 worker进程发送信号，每个进程都有可能来处理这个连接。\n\n 3. master进程能监控 worker进程的运行状态，当 worker进程退出后(异常情况下)，会自动启动新的 worker进程。\n\n 4. 将worker进程的数量设置成等于cpu的核数比较合理。\n    \n    查看核数命令cat /proc/cpuinfo|grep -c 'processor'\n    \n    -c 返回字符串的个数\n\nnginx采用这种进程模型有什么好处? 采用独立的进程，可以让互相之间不会影响，一个进程退出后，其它进程还在工作，服务不会中断，master进程则很快重新启动新的 worker进程。当然, worker进程的异常退出，肯定是程序有bug了，异常退出，会导致当前worker上的所有请求失败，不过不会影响到所有请求,所以降低了风险。\n\n# 3.5.2 内存消耗小\n\n处理大并发的请求内存消耗非常小。在3万并发连接下，开启的10个nginx 进程才消耗150m内存（15m*10=150m)\n\n# 3.5.3 内置的健康检查功能\n\n如果nginx代理的后端的某台web服务器宕机了，不会影响前端访问。\n\n# 3.5.4 节省带宽\n\n支持gzip压缩，可以添加浏览器本地缓存的header头。\n\n# 3.5.5 稳定性高\n\n用于反向代理，宕机的概率微乎其微。",charsets:{cjk:!0}},{title:"Event Loop (并发模型与事件循环)",frontmatter:{},regularPath:"/JavaScript/%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5.html",relativePath:"JavaScript/同步异步.md",key:"v-14d731a6",path:"/javascript/tong-bu-yi-bu.html",headers:[{level:2,title:"基础概念",slug:"基础概念",normalizedTitle:"基础概念",charIndex:86},{level:3,title:"栈",slug:"栈",normalizedTitle:"栈",charIndex:95},{level:3,title:"堆",slug:"堆",normalizedTitle:"堆",charIndex:130},{level:3,title:"队",slug:"队",normalizedTitle:"队",charIndex:73}],headersStr:"基础概念 栈 堆 队",content:"# Event Loop (并发模型与事件循环)\n\nJavaScript有一个基于事件循环的并发模型，事件循环负责执行代码、收集和处理事件以及执行队列中的子任务。\n\n\n# 基础概念\n\n\n# 栈\n\n函数的调用形成了若干帧组成的栈，既然是栈就有先进后出。\n\n\n# 堆\n\n对象被分配在堆中，堆是一个用来表示一大块（通常是非结构化的）内存区域的计算机术语。\n\n\n# 队",normalizedContent:"# event loop (并发模型与事件循环)\n\njavascript有一个基于事件循环的并发模型，事件循环负责执行代码、收集和处理事件以及执行队列中的子任务。\n\n\n# 基础概念\n\n\n# 栈\n\n函数的调用形成了若干帧组成的栈，既然是栈就有先进后出。\n\n\n# 堆\n\n对象被分配在堆中，堆是一个用来表示一大块（通常是非结构化的）内存区域的计算机术语。\n\n\n# 队",charsets:{cjk:!0}},{title:"Nginx安装",frontmatter:{},regularPath:"/Nginx/01_Nginx%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/2.Nginx%E5%AE%89%E8%A3%85.html",relativePath:"Nginx/01_Nginx安装及配置/2.Nginx安装.md",key:"v-50532a9c",path:"/nginx/01_nginxan-zhuang-ji-pei-zhi/2.nginxan-zhuang.html",headers:[{level:2,title:"1. YUM方式进行安装",slug:"_1-yum方式进行安装",normalizedTitle:"1. yum方式进行安装",charIndex:14},{level:3,title:"1.1设置nginx YUM源",slug:"_1-1设置nginx-yum源",normalizedTitle:"1.1设置nginx yum源",charIndex:31},{level:3,title:"1.2 安装nginx服务，会安装1.16.0版本",slug:"_1-2-安装nginx服务-会安装1-16-0版本",normalizedTitle:"1.2 安装nginx服务，会安装1.16.0版本",charIndex:570},{level:3,title:"1.3 设置nginx开机启动",slug:"_1-3-设置nginx开机启动",normalizedTitle:"1.3 设置nginx开机启动",charIndex:622},{level:3,title:"1.4 防火墙放行htpp服务",slug:"_1-4-防火墙放行htpp服务",normalizedTitle:"1.4 防火墙放行htpp服务",charIndex:1503},{level:3,title:"1.5 测试是否可以访问nginx",slug:"_1-5-测试是否可以访问nginx",normalizedTitle:"1.5 测试是否可以访问nginx",charIndex:1627},{level:3,title:"1.6 加载动态模块",slug:"_1-6-加载动态模块",normalizedTitle:"1.6 加载动态模块",charIndex:1680},{level:2,title:"2. 编译安装Nginx",slug:"_2-编译安装nginx",normalizedTitle:"2. 编译安装nginx",charIndex:2173},{level:3,title:"2.1 准备工作",slug:"_2-1-准备工作",normalizedTitle:"2.1 准备工作",charIndex:2313},{level:3,title:"2.2 编译并安装",slug:"_2-2-编译并安装",normalizedTitle:"2.2 编译并安装",charIndex:3239},{level:3,title:"注：",slug:"注",normalizedTitle:"注：",charIndex:6106}],headersStr:"1. YUM方式进行安装 1.1设置nginx YUM源 1.2 安装nginx服务，会安装1.16.0版本 1.3 设置nginx开机启动 1.4 防火墙放行htpp服务 1.5 测试是否可以访问nginx 1.6 加载动态模块 2. 编译安装Nginx 2.1 准备工作 2.2 编译并安装 注：",content:"# Nginx安装\n\n\n# 1. YUM方式进行安装\n\n\n# 1.1设置nginx YUM源\n\n官方yum源：http://nginx.org/en/linux_packages.html#RHEL-CentOS\n\n$ yum install yum-utils\n$ vim /etc/yum.repos.d/nginx.repo \n[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n\n\n# 1.2 安装nginx服务，会安装1.16.0版本\n\n$ yum install nginx\n\n\n\n# 1.3 设置nginx开机启动\n\n$ systemctl enable nginx.service\n$ systemctl start nginx.service\n$ systemctl status nginx.service\n● nginx.service - nginx - high performance web server\n   Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)\n   Active: active (running) since Mon 2020-04-13 10:59:12 EDT; 14s ago\n     Docs: http://nginx.org/en/docs/\n  Process: 20145 ExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf (code=exited, status=0/SUCCESS)\n Main PID: 20146 (nginx)\n   CGroup: /system.slice/nginx.service\n           ├─20146 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx....\n           └─20147 nginx: worker process\n\nApr 13 10:59:12 localhost.localdomain systemd[1]: Starting nginx - high perfo...\nApr 13 10:59:12 localhost.localdomain systemd[1]: Started nginx - high perfor...\nHint: Some lines were ellipsized, use -l to show in full.\n\n\n\n# 1.4 防火墙放行htpp服务\n\n$ firewall-cmd --add-service=http --permanent      \n$ firewall-cmd --reload\n$ firewall-cmd --list-all\n\n\n\n# 1.5 测试是否可以访问nginx\n\n$ curl http://192.168.58.142\n\n\n\n# 1.6 加载动态模块\n\nnginx包是使用所有模块构建的，这些模块不需要额外的库来避免额外的依赖性。从版本1.9.11开始，nginx支持动态模块，以下模块构建为动态的，并作为单独的包提供：\n\nnginx-module-geoip\nnginx-module-image-filter\nnginx-module-njs\nnginx-module-perl\nnginx-module-xslt\n\n\n安装动态模块\n\n$ yum install nginx-module-image-filter -y\n\n\n模块会安装在/usr/lib64/nginx/modules/目录中\n\n$ ls /usr/lib64/nginx/modules/\nngx_http_image_filter_module-debug.so\nngx_http_image_filter_module.so\n\n\n在配置文件中加载模块，要在main上下文中配置（在 nginx.conf 中最上方写入）\n\nload_module modules/ngx_http_image_filter_module.so;\n\n\n\n# 2. 编译安装Nginx\n\nNginx官网提供了三个类型的版本：\n\n 1. Mainline version：nginx的主力版本，为开发版\n 2. Stable version：稳定版，在实际生产过程中选择此版本进行安装\n 3. Legacy version：历史版本\n\n\n# 2.1 准备工作\n\n * 关闭selinux\n\n$ setenforce 0\n$ sed -i  's/SELINUX=enforcing/SELINUX=disable/g' /etc/selinux/config\n\n\n * 创建用户和组\n\n$ groupadd www \n$ useradd -M -g www -s /sbin/nologin www\n$ id www\nuid=1000(www) gid=1000(www) groups=1000(www)\n\n\n * 安装一些依赖库\n\n首先下载gcc编译器以及nginx一些模块的依赖库，通常有pcre库 （支持rewrite模块），zlib（支持gzip模块）库，openssl (支持ssl模块)库等。这些库可以编译安装，也可以yum安装，这里选择yum安装。\n\n$ yum install gcc gcc-c++ pcre pcre-devel  zlib zlib-devel openssl openssl-devel -y\n\n\n * 下载源码包并解压\n\n$ wget http://nginx.org/download/nginx-1.16.0.tar.gz\n$ tar zxvf nginx-1.16.0.tar.gz -C /usr/src/\n\n\n * 安装2个第三方模块\n   \n   使用nginx-sticky-module扩展模块实现Cookie会话黏贴（保持会话）\n   \n   使用ngx_cache_purge 实现更强大的缓存清除功能\n\n$ wget https://github.com/FRiCKLE/ngx_cache_purge/archive/master.zip\n$ unzip master.zip\n$ mv ngx_cache_purge-master/ /usr/src/\n$ wget -c https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng/get/08a395c66e42.zip\n$ unzip 08a395c66e42.zip -d /usr/src/  \n\n\n\n# 2.2 编译并安装\n\n * 使用configure脚本自动生成Makefile文件\n\n$ cd /usr/src/nginx-1.16.0/\n$ ./configure --prefix=/usr/local/nginx1.16 --user=www --group=www \\\n> --with-http_stub_status_module \\\n> --with-http_realip_module \\\n> --with-http_ssl_module \\\n> --with-http_gzip_static_module \\\n> --http-client-body-temp-path=/var/tmp/nginx/client \\\n> --http-proxy-temp-path=/var/tmp/nginx/proxy \\\n> --http-fastcgi-temp-path=/var/tmp/nginx/fcgi \\\n> --with-pcre \\\n> --with-http_flv_module \\\n> --add-module=../ngx_cache_purge-master \\\n> --add-module=../nginx-goodies-nginx-sticky-module-ng-08a395c66e42\n\n\n * 编译并安装\n\n $ make\n $ make install\n\n\n * 完成后优化\n\n$ ln -s /usr/local/nginx1.16/sbin/nginx /usr/local/sbin/\n$ nginx -t\n$ mkdir /var/tmp/nginx/client -p\n$ chown -R www:www /var/tmp/nginx/\n$ nginx -t\nnginx: the configuration file /usr/local/nginx1.16/conf/nginx.conf syntax is ok\nnginx: configuration file /usr/local/nginx1.16/conf/nginx.conf test is successful\n$ nginx   #启动服务\n$ netstat -antp | grep nginx\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      16830/nginx: master \n$ nginx -s reload    #重启服务\n$ nginx -s stop      #停止服务\n\n\n\n * 生成systemed启动脚本\n\n$ vim /usr/lib/systemd/system/nginx.service\n[Unit]\n# 对服务的说明\nDescription=nginx - high performance web server   \n# 文档\nDocumentation=http://nginx.org/en/docs/\n# 如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之前启动\nAfter=network-online.target remote-fs.target nss-lookup.target\n# 与当前 Unit 配合的其他 Unit，如果它们没有运行，当前 Unit 不会启动失败\nWants=network-online.target\n\n[Service]\n# 启动方式\nType=forking\n#PID文件的路径\nPIDFile=/usr/local/nginx1.16/logs/nginx.pid\n#启动命令\nExecStart=/usr/local/sbin/nginx -c /usr/local/nginx1.16/conf/nginx.conf\n#重启命令\nExecReload=/bin/kill -s HUP $MAINPID\n#停止命令\nExecStop=/bin/kill -s TERM $MAINPID\n#启动模式\n[Install]\n# WantedBy的值是一个或多个 Target，当前 Unit 激活时（enable）符号链接会放入/etc/systemd/system目录下面以 Target 名 + .wants后缀构成的子目录中\nWantedBy=multi-user.target \n\n$ systemctl daemon-reload\n$ systemctl enable nginx.service\n$ systemctl restart nginx.service\n$ systemctl status nginx.service\n● nginx.service - nginx - high performance web server\n   Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)\n   Active: active (running) since 二 2020-04-14 18:07:38 CST; 21s ago\n     Docs: http://nginx.org/en/docs/\n  Process: 16967 ExecStart=/usr/local/sbin/nginx -c /usr/local/nginx1.16/conf/nginx.conf (code=exited, status=0/SUCCESS)\n Main PID: 16968 (nginx)\n   CGroup: /system.slice/nginx.service\n           ├─16968 nginx: master process /usr/local/sbin/nginx -c /usr/local/...\n           └─16969 nginx: worker process\n\n4月 14 18:07:38 localhost.localdomain systemd[1]: Starting nginx - high perf...\n4月 14 18:07:38 localhost.localdomain systemd[1]: Can't open PID file /usr/l...\n4月 14 18:07:38 localhost.localdomain systemd[1]: Started nginx - high perfo...\nHint: Some lines were ellipsized, use -l to show in full.\n\n\n\n# 注：\n\n如果你想在已经安装好的nginx上添加第三方模块，依然需要重新编译，但为了不覆盖你原有的配置，请不要 make install，而是直接拷贝可执行文件:\n\n查看原有的编译配置\n\n$ nginx -V\n\n\n重新编译\n\n$ ./configure --add-module=....     #第三方模块\n\n$ make            #make 后不要make install ，改为手动拷贝，先备份\n\n$ cp /usr/local/nginx1.16/sbin/nginx /usr/local/nginx1.16/sbin/nginx.bak\n\n$ cp objs/nginx /usr/local/nginx1.16/sbin/nginx\n",normalizedContent:"# nginx安装\n\n\n# 1. yum方式进行安装\n\n\n# 1.1设置nginx yum源\n\n官方yum源：http://nginx.org/en/linux_packages.html#rhel-centos\n\n$ yum install yum-utils\n$ vim /etc/yum.repos.d/nginx.repo \n[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n\n\n# 1.2 安装nginx服务，会安装1.16.0版本\n\n$ yum install nginx\n\n\n\n# 1.3 设置nginx开机启动\n\n$ systemctl enable nginx.service\n$ systemctl start nginx.service\n$ systemctl status nginx.service\n● nginx.service - nginx - high performance web server\n   loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)\n   active: active (running) since mon 2020-04-13 10:59:12 edt; 14s ago\n     docs: http://nginx.org/en/docs/\n  process: 20145 execstart=/usr/sbin/nginx -c /etc/nginx/nginx.conf (code=exited, status=0/success)\n main pid: 20146 (nginx)\n   cgroup: /system.slice/nginx.service\n           ├─20146 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx....\n           └─20147 nginx: worker process\n\napr 13 10:59:12 localhost.localdomain systemd[1]: starting nginx - high perfo...\napr 13 10:59:12 localhost.localdomain systemd[1]: started nginx - high perfor...\nhint: some lines were ellipsized, use -l to show in full.\n\n\n\n# 1.4 防火墙放行htpp服务\n\n$ firewall-cmd --add-service=http --permanent      \n$ firewall-cmd --reload\n$ firewall-cmd --list-all\n\n\n\n# 1.5 测试是否可以访问nginx\n\n$ curl http://192.168.58.142\n\n\n\n# 1.6 加载动态模块\n\nnginx包是使用所有模块构建的，这些模块不需要额外的库来避免额外的依赖性。从版本1.9.11开始，nginx支持动态模块，以下模块构建为动态的，并作为单独的包提供：\n\nnginx-module-geoip\nnginx-module-image-filter\nnginx-module-njs\nnginx-module-perl\nnginx-module-xslt\n\n\n安装动态模块\n\n$ yum install nginx-module-image-filter -y\n\n\n模块会安装在/usr/lib64/nginx/modules/目录中\n\n$ ls /usr/lib64/nginx/modules/\nngx_http_image_filter_module-debug.so\nngx_http_image_filter_module.so\n\n\n在配置文件中加载模块，要在main上下文中配置（在 nginx.conf 中最上方写入）\n\nload_module modules/ngx_http_image_filter_module.so;\n\n\n\n# 2. 编译安装nginx\n\nnginx官网提供了三个类型的版本：\n\n 1. mainline version：nginx的主力版本，为开发版\n 2. stable version：稳定版，在实际生产过程中选择此版本进行安装\n 3. legacy version：历史版本\n\n\n# 2.1 准备工作\n\n * 关闭selinux\n\n$ setenforce 0\n$ sed -i  's/selinux=enforcing/selinux=disable/g' /etc/selinux/config\n\n\n * 创建用户和组\n\n$ groupadd www \n$ useradd -m -g www -s /sbin/nologin www\n$ id www\nuid=1000(www) gid=1000(www) groups=1000(www)\n\n\n * 安装一些依赖库\n\n首先下载gcc编译器以及nginx一些模块的依赖库，通常有pcre库 （支持rewrite模块），zlib（支持gzip模块）库，openssl (支持ssl模块)库等。这些库可以编译安装，也可以yum安装，这里选择yum安装。\n\n$ yum install gcc gcc-c++ pcre pcre-devel  zlib zlib-devel openssl openssl-devel -y\n\n\n * 下载源码包并解压\n\n$ wget http://nginx.org/download/nginx-1.16.0.tar.gz\n$ tar zxvf nginx-1.16.0.tar.gz -c /usr/src/\n\n\n * 安装2个第三方模块\n   \n   使用nginx-sticky-module扩展模块实现cookie会话黏贴（保持会话）\n   \n   使用ngx_cache_purge 实现更强大的缓存清除功能\n\n$ wget https://github.com/frickle/ngx_cache_purge/archive/master.zip\n$ unzip master.zip\n$ mv ngx_cache_purge-master/ /usr/src/\n$ wget -c https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng/get/08a395c66e42.zip\n$ unzip 08a395c66e42.zip -d /usr/src/  \n\n\n\n# 2.2 编译并安装\n\n * 使用configure脚本自动生成makefile文件\n\n$ cd /usr/src/nginx-1.16.0/\n$ ./configure --prefix=/usr/local/nginx1.16 --user=www --group=www \\\n> --with-http_stub_status_module \\\n> --with-http_realip_module \\\n> --with-http_ssl_module \\\n> --with-http_gzip_static_module \\\n> --http-client-body-temp-path=/var/tmp/nginx/client \\\n> --http-proxy-temp-path=/var/tmp/nginx/proxy \\\n> --http-fastcgi-temp-path=/var/tmp/nginx/fcgi \\\n> --with-pcre \\\n> --with-http_flv_module \\\n> --add-module=../ngx_cache_purge-master \\\n> --add-module=../nginx-goodies-nginx-sticky-module-ng-08a395c66e42\n\n\n * 编译并安装\n\n $ make\n $ make install\n\n\n * 完成后优化\n\n$ ln -s /usr/local/nginx1.16/sbin/nginx /usr/local/sbin/\n$ nginx -t\n$ mkdir /var/tmp/nginx/client -p\n$ chown -r www:www /var/tmp/nginx/\n$ nginx -t\nnginx: the configuration file /usr/local/nginx1.16/conf/nginx.conf syntax is ok\nnginx: configuration file /usr/local/nginx1.16/conf/nginx.conf test is successful\n$ nginx   #启动服务\n$ netstat -antp | grep nginx\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               listen      16830/nginx: master \n$ nginx -s reload    #重启服务\n$ nginx -s stop      #停止服务\n\n\n\n * 生成systemed启动脚本\n\n$ vim /usr/lib/systemd/system/nginx.service\n[unit]\n# 对服务的说明\ndescription=nginx - high performance web server   \n# 文档\ndocumentation=http://nginx.org/en/docs/\n# 如果该字段指定的 unit 也要启动，那么必须在当前 unit 之前启动\nafter=network-online.target remote-fs.target nss-lookup.target\n# 与当前 unit 配合的其他 unit，如果它们没有运行，当前 unit 不会启动失败\nwants=network-online.target\n\n[service]\n# 启动方式\ntype=forking\n#pid文件的路径\npidfile=/usr/local/nginx1.16/logs/nginx.pid\n#启动命令\nexecstart=/usr/local/sbin/nginx -c /usr/local/nginx1.16/conf/nginx.conf\n#重启命令\nexecreload=/bin/kill -s hup $mainpid\n#停止命令\nexecstop=/bin/kill -s term $mainpid\n#启动模式\n[install]\n# wantedby的值是一个或多个 target，当前 unit 激活时（enable）符号链接会放入/etc/systemd/system目录下面以 target 名 + .wants后缀构成的子目录中\nwantedby=multi-user.target \n\n$ systemctl daemon-reload\n$ systemctl enable nginx.service\n$ systemctl restart nginx.service\n$ systemctl status nginx.service\n● nginx.service - nginx - high performance web server\n   loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)\n   active: active (running) since 二 2020-04-14 18:07:38 cst; 21s ago\n     docs: http://nginx.org/en/docs/\n  process: 16967 execstart=/usr/local/sbin/nginx -c /usr/local/nginx1.16/conf/nginx.conf (code=exited, status=0/success)\n main pid: 16968 (nginx)\n   cgroup: /system.slice/nginx.service\n           ├─16968 nginx: master process /usr/local/sbin/nginx -c /usr/local/...\n           └─16969 nginx: worker process\n\n4月 14 18:07:38 localhost.localdomain systemd[1]: starting nginx - high perf...\n4月 14 18:07:38 localhost.localdomain systemd[1]: can't open pid file /usr/l...\n4月 14 18:07:38 localhost.localdomain systemd[1]: started nginx - high perfo...\nhint: some lines were ellipsized, use -l to show in full.\n\n\n\n# 注：\n\n如果你想在已经安装好的nginx上添加第三方模块，依然需要重新编译，但为了不覆盖你原有的配置，请不要 make install，而是直接拷贝可执行文件:\n\n查看原有的编译配置\n\n$ nginx -v\n\n\n重新编译\n\n$ ./configure --add-module=....     #第三方模块\n\n$ make            #make 后不要make install ，改为手动拷贝，先备份\n\n$ cp /usr/local/nginx1.16/sbin/nginx /usr/local/nginx1.16/sbin/nginx.bak\n\n$ cp objs/nginx /usr/local/nginx1.16/sbin/nginx\n",charsets:{cjk:!0}},{title:"Nginx配置文件结构",frontmatter:{},regularPath:"/Nginx/01_Nginx%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/3.Nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html",relativePath:"Nginx/01_Nginx安装及配置/3.Nginx配置文件.md",key:"v-467f0776",path:"/nginx/01_nginxan-zhuang-ji-pei-zhi/3.nginxpei-zhi-wen-jian.html",headers:[{level:2,title:"1. 指令（dircetives [dɪˈrɛktɪvz]）",slug:"_1-指令-dircetives-dɪˈrɛktɪvz",normalizedTitle:"1. 指令（dircetives [dɪˈrɛktɪvz]）",charIndex:459},{level:2,title:"2. 特定功能的配置文件",slug:"_2-特定功能的配置文件",normalizedTitle:"2. 特定功能的配置文件",charIndex:683},{level:2,title:"3. 上下文（contexts）",slug:"_3-上下文-contexts",normalizedTitle:"3. 上下文（contexts）",charIndex:882},{level:3,title:"main （全局块）",slug:"main-全局块",normalizedTitle:"main （全局块）",charIndex:1082},{level:3,title:"events块",slug:"events块",normalizedTitle:"events块",charIndex:1182},{level:3,title:"http块",slug:"http块",normalizedTitle:"http块",charIndex:1275},{level:3,title:"server块",slug:"server块",normalizedTitle:"server块",charIndex:1384},{level:3,title:"mail块",slug:"mail块",normalizedTitle:"mail块",charIndex:1460},{level:3,title:"stream块",slug:"stream块",normalizedTitle:"stream块",charIndex:1482},{level:2,title:"4. 完整的配置文件结构如图所示",slug:"_4-完整的配置文件结构如图所示",normalizedTitle:"4. 完整的配置文件结构如图所示",charIndex:1509},{level:2,title:"5. 虚拟服务（virtual servers）",slug:"_5-虚拟服务-virtual-servers",normalizedTitle:"5. 虚拟服务（virtual servers）",charIndex:1532},{level:2,title:"6. 继承（inheritance [ɪnˈherɪtəns]）",slug:"_6-继承-inheritance-ɪnˈherɪtəns",normalizedTitle:"6. 继承（inheritance [ɪnˈherɪtəns]）",charIndex:2732},{level:2,title:"7. 配置典型案例",slug:"_7-配置典型案例",normalizedTitle:"7. 配置典型案例",charIndex:2862},{level:3,title:"1.web站点",slug:"_1-web站点",normalizedTitle:"1.web站点",charIndex:2876},{level:3,title:"2.负载平衡器",slug:"_2-负载平衡器",normalizedTitle:"2.负载平衡器",charIndex:3362},{level:3,title:"3.HTTP安全站点",slug:"_3-http安全站点",normalizedTitle:"3.http安全站点",charIndex:3652},{level:3,title:"注：建站流程",slug:"注-建站流程",normalizedTitle:"注：建站流程",charIndex:3957}],headersStr:"1. 指令（dircetives [dɪˈrɛktɪvz]） 2. 特定功能的配置文件 3. 上下文（contexts） main （全局块） events块 http块 server块 mail块 stream块 4. 完整的配置文件结构如图所示 5. 虚拟服务（virtual servers） 6. 继承（inheritance [ɪnˈherɪtəns]） 7. 配置典型案例 1.web站点 2.负载平衡器 3.HTTP安全站点 注：建站流程",content:"# Nginx配置文件结构\n\nnginx配置文件的名字是nginx.conf。 一般位于 /etc/nginx目录，有时候也会位于/usr/local/nginx/conf、 /usr/local/etc/nginx下\n\n# 修改方法\n# aux 显示所有包含其他使用者的行程\n$ ps aux | grep nginx\n\n# $ cat /proc/cpuinfo|grep -c 'processor'\n# 4\n\n$ vim /etc/nginx/nginx.conf\nworker_processes  auto;\n\n$ nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n\n$ systemctl restart nginx\n$ ps aux | grep nginx\n\n\n\n# 1. 指令（dircetives [dɪˈrɛktɪvz]）\n\n配置文件由指令及其参数组成，简单的单行指令以分号结尾，其它的指令充当了容器的功能，将相关指令组合在一起，用大括号{}包含起来，通常称之为块(block) 。下面是一些简单指令的例子:\n\nuser                nobady；\nerror_log           logs/error.log notice;\nworker_processes    1;\n\n\n\n# 2. 特定功能的配置文件\n\n为了使配置更易于维护，我们建议您将其拆分为存储在 /etc/nginx/conf.d目录中的特定功能的文件，并使用主nginx.conf文件中的include指令来引用其中的内容。特定功能的文件参考。\n\ninclude conf.d/http;\ninclude conf.d/stream;\ninclude conf.d/exchange-enhanced;\n\n\n\n# 3. 上下文（contexts）\n\n一些顶级指令 （称为上下文）将适用于不同流量类型的指令组合在一起：\n\n * events- General connection processing\n * http - HTTP traffic\n * mail - Mail traffic\n * stream - TCP and UDP traffic\n\n在这些上下文之外放置称为在main上下文中。\n\n\n# main （全局块）\n\n配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。\n\n\n# events块\n\n配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数,选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。\n\n\n# http块\n\n可以嵌套多个server,配置代理,缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件,连接超时时间，单连接请求数等\n\n\n# server块\n\n配置虚拟主机的相关参数，一个http中可以有多个server\n\nlocation块\n\n配置请求的路由，以及各种页面的处理情况\n\n\n# mail块\n\n配置处理mail流量\n\n\n# stream块\n\n配置处理TCP和UDP流量\n\n\n# 4. 完整的配置文件结构如图所示\n\n\n\n\n# 5. 虚拟服务（virtual servers）\n\n在每一个流量处理的上下文中,可以包含一个或者多个server块, 定义虚拟服务来控制处理请求,包含在server上下文中的指令根据流量类型不同而不同。\n\n对于HTTP流量(http上下文)，每个server指令控制对特定域或者IP地址的资源请求处理。 在server上下文中的一个或多个location上下文定义如何处指定的URI集合。\n\n对于邮件和TCP/UDP流量(mail和stream上下文) , 每一个server指令都控制到达特定TCP端口或UNIX套接字的流量的处理。\n\n具有多个上下文的配置文件样例\n\n以下配置说明了上下文的如何使用\n\nuser nobody; # a directive in the 'main' context（“main”上下文中的指令）\nevents {\n    # configuration of connection processing（连接处理配置）\n}\nhttp {\n    # Configuration specific to HTTP and affecting a11 virtual servers\n    # （特定于HTTP的配置并影响a11虚拟服务器）\n    server {\n        # configuration of HTTP virtual server 1 （HTTP虚拟服务器1的配置）\n        location /one {\n            # configuration for processing URIS starting with ' /one '\n            #（处理以'/one'开头的uri的配置）\n        }\n        1ocation /two {\n            # configuration for processing URIS starting with' /two '\n            #（处理以'/two'开头的uri的配置）\n        }\n    }\n    \n    server {\n        # configuration of HTTP virtual server 2（HTTP虚拟服务器2的配置）\n     }\n}\n\nstream {\n     # Configuration specific to TCP/UDP and affecting a11 virtual servers\n     #（特定于TCP/UDP并影响a11虚拟服务器的配置）\n     server {\n          # configuration of TCP virtual server 1（TCP虚拟服务器1的配置）\n     }\n}\n\n\n\n# 6. 继承（inheritance [ɪnˈherɪtəns]）\n\n一般来说，子上下文(包含在另一个上下文(其父上下文)中)继承父级包含的指令设置。有些指令可以出现在多个上下文中，在这种情况下，您可以通过在子上下文中包含该指令来重写从父级继承的设置。\n\n\n# 7. 配置典型案例\n\n\n# 1.web站点\n\n一个简单的php站点配置\n\nserver {\n    listen       80;\n    server_name example.org www.example.org;\n    root         /data/www;\n    \n    location / {\n        index    index.html index.php;\n    }\n    \n     location ~* \\. (gif|jpg|png)$ {\n          expires 30d;\n     } \n     \n    location ~ \\.php$ {\n        fastcgi_pass local host:9000;\n        fastcgi_param SCRIPT_FILENAME\n                        $document_root$fastcgi_script_name;\n        include         fastcgi_params;\n    } \n}\n\n\n\n# 2.负载平衡器\n\n简单负载平衡配置样例\n\nhttp {\n    upstream myapp1 {\n          server srv1.example.com;\n          server srv2.example.com;\n          server srv3.example.com;\n    }\n   \n    server {\n        listen 80;\n        \n        location / {\n             proxy_ pass http://myapp1;\n        }\n    }\n}\n\n\n\n# 3.HTTP安全站点\n\n一个简单的HTTP/HTTPS站点 (certificate [sərˈtɪfɪkət , sərˈtɪfɪkeɪt] 证明;证明书;)\n\nserver {\n    listen                80;\n    listen                443 ssl;\n    server_ name          www.example.com;\n    ssl_certificate      www.example.com.crt;\n    ssl_certificate_key www.example.com.key;\n    ...\n}\n\n\n\n# 注：建站流程\n\n 1. 注册域名\n 2. 选择建站服务及主机\n 3. 域名解析\n 4. 网站备案\n 5. https证书配置\n 6. 网站上线",normalizedContent:"# nginx配置文件结构\n\nnginx配置文件的名字是nginx.conf。 一般位于 /etc/nginx目录，有时候也会位于/usr/local/nginx/conf、 /usr/local/etc/nginx下\n\n# 修改方法\n# aux 显示所有包含其他使用者的行程\n$ ps aux | grep nginx\n\n# $ cat /proc/cpuinfo|grep -c 'processor'\n# 4\n\n$ vim /etc/nginx/nginx.conf\nworker_processes  auto;\n\n$ nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n\n$ systemctl restart nginx\n$ ps aux | grep nginx\n\n\n\n# 1. 指令（dircetives [dɪˈrɛktɪvz]）\n\n配置文件由指令及其参数组成，简单的单行指令以分号结尾，其它的指令充当了容器的功能，将相关指令组合在一起，用大括号{}包含起来，通常称之为块(block) 。下面是一些简单指令的例子:\n\nuser                nobady；\nerror_log           logs/error.log notice;\nworker_processes    1;\n\n\n\n# 2. 特定功能的配置文件\n\n为了使配置更易于维护，我们建议您将其拆分为存储在 /etc/nginx/conf.d目录中的特定功能的文件，并使用主nginx.conf文件中的include指令来引用其中的内容。特定功能的文件参考。\n\ninclude conf.d/http;\ninclude conf.d/stream;\ninclude conf.d/exchange-enhanced;\n\n\n\n# 3. 上下文（contexts）\n\n一些顶级指令 （称为上下文）将适用于不同流量类型的指令组合在一起：\n\n * events- general connection processing\n * http - http traffic\n * mail - mail traffic\n * stream - tcp and udp traffic\n\n在这些上下文之外放置称为在main上下文中。\n\n\n# main （全局块）\n\n配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。\n\n\n# events块\n\n配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数,选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。\n\n\n# http块\n\n可以嵌套多个server,配置代理,缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件,连接超时时间，单连接请求数等\n\n\n# server块\n\n配置虚拟主机的相关参数，一个http中可以有多个server\n\nlocation块\n\n配置请求的路由，以及各种页面的处理情况\n\n\n# mail块\n\n配置处理mail流量\n\n\n# stream块\n\n配置处理tcp和udp流量\n\n\n# 4. 完整的配置文件结构如图所示\n\n\n\n\n# 5. 虚拟服务（virtual servers）\n\n在每一个流量处理的上下文中,可以包含一个或者多个server块, 定义虚拟服务来控制处理请求,包含在server上下文中的指令根据流量类型不同而不同。\n\n对于http流量(http上下文)，每个server指令控制对特定域或者ip地址的资源请求处理。 在server上下文中的一个或多个location上下文定义如何处指定的uri集合。\n\n对于邮件和tcp/udp流量(mail和stream上下文) , 每一个server指令都控制到达特定tcp端口或unix套接字的流量的处理。\n\n具有多个上下文的配置文件样例\n\n以下配置说明了上下文的如何使用\n\nuser nobody; # a directive in the 'main' context（“main”上下文中的指令）\nevents {\n    # configuration of connection processing（连接处理配置）\n}\nhttp {\n    # configuration specific to http and affecting a11 virtual servers\n    # （特定于http的配置并影响a11虚拟服务器）\n    server {\n        # configuration of http virtual server 1 （http虚拟服务器1的配置）\n        location /one {\n            # configuration for processing uris starting with ' /one '\n            #（处理以'/one'开头的uri的配置）\n        }\n        1ocation /two {\n            # configuration for processing uris starting with' /two '\n            #（处理以'/two'开头的uri的配置）\n        }\n    }\n    \n    server {\n        # configuration of http virtual server 2（http虚拟服务器2的配置）\n     }\n}\n\nstream {\n     # configuration specific to tcp/udp and affecting a11 virtual servers\n     #（特定于tcp/udp并影响a11虚拟服务器的配置）\n     server {\n          # configuration of tcp virtual server 1（tcp虚拟服务器1的配置）\n     }\n}\n\n\n\n# 6. 继承（inheritance [ɪnˈherɪtəns]）\n\n一般来说，子上下文(包含在另一个上下文(其父上下文)中)继承父级包含的指令设置。有些指令可以出现在多个上下文中，在这种情况下，您可以通过在子上下文中包含该指令来重写从父级继承的设置。\n\n\n# 7. 配置典型案例\n\n\n# 1.web站点\n\n一个简单的php站点配置\n\nserver {\n    listen       80;\n    server_name example.org www.example.org;\n    root         /data/www;\n    \n    location / {\n        index    index.html index.php;\n    }\n    \n     location ~* \\. (gif|jpg|png)$ {\n          expires 30d;\n     } \n     \n    location ~ \\.php$ {\n        fastcgi_pass local host:9000;\n        fastcgi_param script_filename\n                        $document_root$fastcgi_script_name;\n        include         fastcgi_params;\n    } \n}\n\n\n\n# 2.负载平衡器\n\n简单负载平衡配置样例\n\nhttp {\n    upstream myapp1 {\n          server srv1.example.com;\n          server srv2.example.com;\n          server srv3.example.com;\n    }\n   \n    server {\n        listen 80;\n        \n        location / {\n             proxy_ pass http://myapp1;\n        }\n    }\n}\n\n\n\n# 3.http安全站点\n\n一个简单的http/https站点 (certificate [sərˈtɪfɪkət , sərˈtɪfɪkeɪt] 证明;证明书;)\n\nserver {\n    listen                80;\n    listen                443 ssl;\n    server_ name          www.example.com;\n    ssl_certificate      www.example.com.crt;\n    ssl_certificate_key www.example.com.key;\n    ...\n}\n\n\n\n# 注：建站流程\n\n 1. 注册域名\n 2. 选择建站服务及主机\n 3. 域名解析\n 4. 网站备案\n 5. https证书配置\n 6. 网站上线",charsets:{cjk:!0}},{title:"Nginx常用模块一",frontmatter:{},regularPath:"/Nginx/02_Nginx%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86/Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%9701.html",relativePath:"Nginx/02_Nginx模块管理/Nginx常用模块01.md",key:"v-6cff0268",path:"/nginx/02_nginxmo-kuai-guan-li/nginxchang-yong-mo-kuai-01.html",headers:[{level:2,title:"1、核心功能(Core functionality)",slug:"_1、核心功能-core-functionality",normalizedTitle:"1、核心功能(core functionality)",charIndex:768},{level:2,title:"2、http核心模块 （ngx httpcore_module）",slug:"_2、http核心模块-ngx-http-core-module",normalizedTitle:"2、http核心模块 （ngx httpcore_module）",charIndex:null},{level:2,title:"3，访问控制模块",slug:"_3-访问控制模块",normalizedTitle:"3，访问控制模块",charIndex:10604},{level:2,title:"4、用户认证模块(ngx http auth basic_ module)",slug:"_4、用户认证模块-ngx-http-auth-basic-module",normalizedTitle:"4、用户认证模块(ngx http auth basic_ module)",charIndex:null},{level:2,title:"5、基本状态查看模块(ngxhttpstubstatusmodule)",slug:"_5、基本状态查看模块-ngx-http-stub-status-module",normalizedTitle:"5、基本状态查看模块(ngxhttpstubstatusmodule)",charIndex:null}],headersStr:"1、核心功能(Core functionality) 2、http核心模块 （ngx httpcore_module） 3，访问控制模块 4、用户认证模块(ngx http auth basic_ module) 5、基本状态查看模块(ngxhttpstubstatusmodule)",content:'# Nginx常用模块一\n\nNginx由内核和模块组成。Nginx本身做的工作实际很少，当它接到一个HTTP请求时，它仅仅是通过查找配置文件将此次请求映射到一个location block,而此location中所配置的各个指令则会启动不同的模块去完成工作，因此模块可以看做Nginx真正的劳动工作者. 通常一个location中的指令会涉及一个handler模块和多个filter模块(当然，多个location可以复用同一个模块) 。 handler模块负责处理请求,完成响应内容的生成，而filter模块对响应内容进行处理。用户根据自己的需要所开发的模块都属于第三方模块。正是有了这么多模块的支撑，Nginx的功能才会如此强大。\n\nNginx的模块从结构上分为核心模块、基础模块和第三方模块:\n\n * 核心模块: HTTP模块、EVENT模块和MAIL模块;\n * 基础模块: HTTP Access模块、HTTP FastCGI模块、HTTP Proxy模块和HTTP Rewrite模块;\n * 第三方模块: HTTP Upstream Request Hash模块、 Notice模块和HTTP Access Key模块。\n\nNginx的模块从功能上分为如下三类:\n\n * Handlers (处理器模块)：此类模块直接处理请求,并进行输出内容和修改headers信息等操作。Handlers处理器模块般只能有一个;\n * Filters (过滤器模块)：此类模块主要对其他处理器模块输出的内容进行修改操作,最后Nginx输出;\n * Proxies (代理类模块)：此类模块是Nginx的HTTP Upstream之类的模块，这些模块主要与后端一些服务比如FastCG|等进行交互，实现服务代理和负载均衡等功能。\n\n\n# 1、核心功能(Core functionality)\n\nfunctionality [ˌfʌŋkʃəˈnæləti] 功能\n\n * worker_processes\n\nSyntax: worker_processes number | auto;\nDefault: worker_processes 1;\nContext: main\n\n\n最佳值取决于许多因素，包括(但不限于) CPU核心的数量、存储数据的硬盘驱动器的数量和负载模式。一般将其设置为可用CPU核心的数量。\n\n * worker_cpu_affinity ( [əˈfɪnəti] )\n\nSyntax: worker_cpu_affinity cpumask ...;\n\t    worker_cpu_affinity auto [cpumask];\nDefault: -\nContext: main\n\n\n将工作进程绑定到CPU集。每个CPU集由允许的CPU的位掩码表示。应该为每个工作进程定义一个单独的集合。默认情况下,工作进程不绑定到任何特定的CPU。该指令仅在FreeBSD和Linux上可用。\n\n例如:\n\nworker_processes 4;\nworker_cpu_affinity 0001 0010 0100 1000;\n#将每个工作进程绑定到单独的CPU\n\nworker_processes 2;\nworker_cpu_affinity 0101 1010;\n#将第一个工作进程绑定到CPU0/CPU2,将第二个工作进程绑定到CPU1/CPU3，这个例子适用于超线程情况\n\nworker_processes auto;\nworker_cpu_affinity auto;\n#1.9.10版本后允许将工作进程自动绑定到可用的CPU\n\n\n * worker_priority ( [praɪˈɔːrəti])\n\nSyntax: worker_priority number;\nDefault: worker_priority 0;\nContext: main\n\n\n为工作进程定义调度优先级，就像由nice命令执行一样: 负数表示优先级更高。允许范围通常在20到20之间\n\n * worker_rlimit_nofile\n\nSyntax: worker_rlimit_nofile number;\nDefault: -\nContext: main\n\n\n更改工作进程的最大打开文件数(rlimit_nofile)限制，默认较小，生产环境一般需要调高，如: 65535.（需要同时修改linux同一时间开启的文件数）\n\n# 修改linux的同一时间最多可开启的文件数\n$ ulimit -n 65535\n# 如果需要永久修改 则需要修改配置文件/etc/security/limits.conf\n* soft nofile 65536      # open files  (-n)\n* hard nofile 65536\n \n* soft nproc 65565\n* hard nproc 65565       # max user processes   (-u)\n\n\n * worker_connection\n\nSyntax: worker_connections number;\nDefault: worker_connections 1024;\nContext: events\n\n\n设置能够被一个工作进程打开的最大并发连接数。应该记住，这个数字包括所有连接(例如，与代理服务器的连接等)，而不仅仅是与客户机的连接。另一个需要考虑的问题是，实际同时连接的数量不能超过打开文件的最大数量的当前限制( worker_rlimit_nofile.) 。\n\n * use\n\nSyntax: use method;\nDefault: -\nContext: events\n\n\n指定要使用的连接处理方法。通常不需要显式地指定它，因为nginx默认使用最有效的方法。如: useepoll;\n\n * accept_mutex （ [əkˈsept] //,mjuː ˈtɛks// 接受互斥）\n\nSyntax: accept_mutex on|off;\nDefault: accept_mutex off;\nContext: events\n\n\n如果启用:on，工作进程将轮流接受新的连接。否则将通知所有工作进程有关新连接的信息，但只有一个进程可以获得连接。如果新连接的数量较低，则某些工作进程可能会浪费系统资源。在版本1.11.3之前，默认值为on。并发多的时候建议开启。\n\n\n# 2、http核心模块 （ngx _http_core_module）\n\n * http\n\nSyntax: http { ... }\nDefault: -\nContext: main\n\n\n提供配置文件上下文，其里面指定HTTP服务器指令\n\n * server\n\nSyntax: server { ... }\nDefault: -\nContext: http\n\n\n配置虚拟主机。基于IP的和基于域名的虚拟主机。listen指令描述了接收连接的所有地址和端口 , server_name指令列出了所有的域名。\n\n * listen\n\nSyntax: listen address [:port] [defau1t_server] [ss1] [http2 | spdy]\n[proxy_protoco1] [setfib=number] [fastopen=number] [backlog=number]\n[rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind]\n[ipv6only=on|off] [reuseport] [so_keepalive=on|off| [keepid1e] : [keepintv1]:[keepcnt]];\nlisten port [default_server] [ss1] [http2|spdy] [proxy_protoco1]\n[setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size]\n[accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport]\n[so_keepalive=on|off|[keepid1e] : [keepintv1] : [keepcnt]];\nlisten unix:path [default_server] [ssl] [http2|spdy] [proxy_protoco1]\n[backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred]\n[bind] [so_keepalive=on|off|[keepidle]:[keepintv1]:[keepcnt]];\nDefault: listen *:80 | *:8000; #默认值\nContext: server #使用字段：server\n\n\n设置IP的地址和端口，或服务器将接受请求的Unix域套接字的路径,例如:\n\nlisten 127.0.0.1:8000;\nlisten 127.0.0.1;\nlisten 8000;\nlisten *:8000;\nlisten localhost:8000;\n# ipv6地址格式（0.7.36）在一个方括号中指定：\nlisten [::]:8000;\nlisten [fe80::1];\n# 0.8.21版本以后nginx可以监听unix套接口：\nlisten unix:/tmp/nginx1.sock;\n\n\n * server_name\n\nSyntax: server_name name ...;\nDefault: server_name "";\nContext: server\n\n\n设置虚拟服务器的名字。例如:\n\nserver {\nserver_name example.com www.example.com;\n}\n#服务器名称可以包括星号("*") 来替换名称的第一部分或最后一部分:\nserver {\nserver_name example.com * .example.com www.example.*;\n}\n\n#支持~起始的字符做正则表达式模式匹配，性能原因慎用\nserver {\nserver_name www.example.com~^www\\d+\\.example\\.com$; # \\d表示[0-9]\n}\n\n\n匹配优先级机制从高到低:\n\n 1. 首先是字符串精确匹配如:https://www.cnblogs.com/ykzou/p/5840729.html\n 2. 左侧通配符如：*.demo\n 3. 右侧通配符如：demo.*\n 4. 正则表达式如：-^.*.demo\n 5. default_server\n\n * root\n\nSyntax: root path;\nDefault: root html;\nContext: http, server, location, if in location\n\n\n设置请求的根目录，例如：\n\nlocation /i/ {\n\troot /data/w3;\n}\n# /data/w3/i/top.gif文件将响应"/i/top.gif"请求而发送\n# 路径值可以包含变量，除了$document_root和$realpath_root。\n\n\n * alias [ˈeɪliəs]\n\nSyntax: alias path;\nDefault: -\nContext：1ocation\n\n\n定义指定的location的一个替换\n\nlocation /i/ {\n\talias /data/w3/images/;\n}\n#对于"/i/top.gif"的请求,将发送文件/data/w3/images/top.gif。\n#路径值可以包含变量，除了$document_root和$realpath_root\n#alias后面必须要用 "/" 结束，否则会找不到文件\n#如果alias配置在正则匹配的location内，则正则表达式中必须包含捕获语句(也就是括号())，\n#而且alias配置中也要引用这些捕获值。如:\nlocation ~ ^/users/(.+\\.(?:gif|jpe?g|png))$ {\n\talias /data/w3/images/$1;\n}\n\n\n# 关于alias和root的区别： \n# root和alias是系统文件路径的设置。 \n# root用来设置根目录，而alias用来重置当前文件的目录。\n\nlocation /img/ {\n    alias /var/www/image/;\n}\n#若按照上述配置的话，则访问/img/目录里面的文件时，ningx会自动去/var/www/image/目录找文件\nlocation /img/ {\n    root /var/www/image;\n}\n#若按照这种配置的话，则访问/img/目录下的文件时，nginx会去/var/www/image/img/目录下找文件。\n\n\n * location\n\nSyntax: location [ = | ~ | ~* | ^~ ] uri { ... }\n\tlocation @name { ... }\nDefault: -\nContext: server, location\n\n\n根据请求的URI设置配置。 在一个server中location配置段可存在多个，用于实现URI到文件系统的路径映射；\n\n匹配字符串分为两种：普通字符串 (literal string) 和正则表达式 (regular expression) ，其中 ~ 和 ~* 用于正则表达式，其他前缀和无任何前缀都用于普通字符串。\n\n匹配顺序是\n\n 1. 先匹配普通字符串，将相对最精确的匹配暂时存储；\n 2. 然后按照配置文件中的声明顺序进行正则表达式匹配，只要匹配到一条正则表达式，则停止匹配，取正则表达式为匹配结果;\n 3. 如果所有正则表达式都匹配不上,则取1中存储的结果；\n 4. 如果普通字符串和正则表达式都匹配不上，则报404 NOT FOUND\n 5. "^~ "和"="都能阻止继续搜索正则location。不同点是"^~“依然遵守"最大前缀"匹配规则，然而"="不是"最大前缀”，而是必须是严格匹配\n 6. 只要遇到"完全匹配（exact match[ɪɡˈzækt mætʃ]）"，即使普通location 没有带"="或"^~"前缀，也一样会终止后面的匹配。\n\n例如:\n\nlocation = /uri\t\t=开头表示精确前缀匹配，只有完全匹配才能生效。\nlocation ^~ /uri\t^~开头表示普通字符串匹配上以后不再进行正则匹配。\nlocation ~ pattern\t~开头表示区分大小写的正则匹配。\nlocation ~* pattern\t~*开头表示不区分大小写的正则匹配。\nlocation /uri\t不带任何修饰符，表示前缀匹配。\nlocation /\t通用匹配，任何未匹配到其他location的请求都会匹配到。\n\n\n配置举例：\n\nlocation = / {\n\t[ configuration A ]\n}\n\nlocation / {\n\t[ configuration B ]\n}\n\nlocation /documents/ {\n\t[ configuration C ]\n}\n\nlocation ^~ /images/ {\n\t[ configuration D ]\n}\n\nlocation ~* \\. (gif | jpg | jpeg)$ {\n\t[ configuration E ]\n}\n    \n# "/"请求匹配configuration A:\n# "/index.html"请求匹配configuration B:\n# "/documents/document. . html"请求匹配configuration C:\n# "/images/1.gif"请求匹配configuration D: \n# "/documents/1.jpg"请求匹配configuration E。\n\n# 注意:正则匹配会根据匹配顺序，找到第一个匹配的正则表达式后将停止搜索。\n# 普通字符串匹配则无视顺序，只会选择最精确的匹配。\n\n\n * tcp_nodelay （delay [dɪˈleɪ] 延迟）\n\nSyntax: tcp_nodelay on | off;\nDefault: tcp_nodelay on;\ncontext: http, server, location\n\n\n当连接转换为保持活动(keep-alive)状态时，启用该选项。此外，它在SSL连接、无缓冲代理和WebSocket代理上也要启用。（这个选项仅在将连接转变为长连接的时候才被启用。）（需要频繁的发送一些小包数据并且不希望放置缓冲区而是直接发送时开启）\n\n * tcp_nopush（push [pʊʃ]）\n\nSyntax: tcp_nopush on | off;\nDefault: tcp_nopush off;\ncontext: http, server, location\n\n\n启用或禁FreeBSD上的tcp_nopush socket选项或Linux上的tcp_cork socket选项。只有在使用sendfile时才启用这些选项。（其功能和tcp_nodelay功能正好相反）\n\n * senfile\n\nSyntax: sendfile on | off;\nDefault: sendfile off;\nContext: http, server, location, if in location\n\n\n启用或禁用sendfile()的使用。从nginx 0.8.12和FreeBSD 5.2.1开始，AIO（即Async非阻塞，是异步非阻塞的IO）可用于预加载sendfile()的数据。\n\n不开启sendfile(): 硬盘 >> kernel buffer >> user buffer >> kernel socket buffer >>协议栈\n\n开启sendfile(): 硬盘 >> kernel buffer (快速拷贝到ker nelsocket buffer) >>协议栈\n\n当 Nginx是一个静态文件服务器的时候，开启sendfile配置项能大大提高Nginx的性能。\n\n例如:\n\nlocation /video/ {\n\tsendfile\ton;\n\ttcp_ nopush\ton;\n\taio\t\t    on;\n}\n\n\n * server_tokens\n\nSyntax: server_tokens on | off | build | string;\nDefault: server_tokens on;\ncontext: http, server, location\n\n\n在错误页和”服务器”响应头字段中启用或禁用发出nginx版本。\n\n * error_page\n\nSyntax: error_page code ... [=[response]] uri;\nDefault: -\nContext: http, server, location, if in location\n\n\n定义为指定错误显示的URI。URI值可以包含变量。\n\n例如:\n\nerror_page 404\t\t/404.html;\nerror_page 500 502 503 504 /50x.html;\n\n# 这将导致内部重定向到指定的URI,客户端请求方法更改为"GET" (对于除"GET"和"HEAD"之外的所有方法)。\n# 此外，可以使用"=response"语法将响应代码更改为其他代码，例如:\nror_page 404 =200 /empty.gif;\n\n\n * keepalive_timeout\n\nSyntax: keepalive_timeout timeout [header_timeout];\nDefault: keepalive_timeout 75s;\nContext: http, server, location\n\n\n设定客户端保持连接超时时长，0表示禁止。 Mozilla和Konqueror可以识别， MSIE自己会在60s后关闭连接。\n\nKonqueror （孔克洛）是 KDE 桌面系统的一部分，主要用于 Linux 和 BSD家族的操作系统。在微软的 Windows 系统下，也有零星使用，当然功能相对有限。Konqueror主要用于文件管理、浏览，以及网页浏览。Konqueror 按照 GPL 进行发布。\n\n * keepalive_requests\n\nSyntax: keepalive_requests number;\nDefault: keepalive_requests 100;\nContext: http, server, location\n\n\n设置通过一个保持活动连接可以提供服务的最大请求数。在发出最大请求数后，连接将关闭。\n\n * keepalive_disable\n\nSyntax: keepalive_disable none | browser ...;\nDefault: keepalive_disab1e msie6;\nContext: http, server, location\n\n\n禁止与那些行为不正常的浏览器保持活动连接。\n\n * send_timeout\n\nSyntax: send_timeout time;\nDefault: send_timeout 60s;\nContext: http, server, location\n\n\n设置向客户端发送响应的超时时间。超时仅在两个连续的写入操作之间设置，不用于传输整个响应。如果客户端在此时间内未收到任何内容，则连接将关闭。\n\n * client_body_buffer_size\n\nSyntax: client_body_buffer_size size;\nDefault: client_body_buffer_size 8k |16k;\nContext: http, server, location\n\n\n设置读取客户端请求body部分的buffer大小。如果请求body大于缓冲区，则整个body或其部分将写入临时文件。默认情况下，缓冲区大小等于两个内存页。x86平台默认是8k，x86_ 64平台是16k。\n\n * client_body_temp_path\n\nSyntax: client_body_temp_path path [1evel1 [1evel2 [leve13]]];\nDefault: client_body_temp_path client_body_temp;\nContext: http, server, location\n\n\n定义用于存储保存客户端请求body的临时文件的目录。指定目录下最多可以使用三级子目录层次结构。例如:\n\n# 这里的level1,2,3如果有值就代表存在一级，二级，三级子目录。\n# 目录名是由数字进行命名的，所以这里的具体的值就是代表目录名的数字位数\nclient_body_temp_path /spoo1/nginx/client_temp 1 2;\n# 临时文件的路径可能看起来像下面所示:\n/spoo1/nginx/client_temp/7/45/00000123457\n\n\n * client_max_body_size\n\nSyntax: client_max_body_size size;\nDefault: client_max_body_size 1m;\nContext: http, server, location\n\n\n设置客户端请求body部分的最大值。指定在请求头的"Content-Length"区域。 如果超出这个值，则返回413错误。将大小设置为0将禁用对客户端请求body大小的检查。\n\n * limit_rate ([reɪt])\n\nSyntax: limit_rate rate;\nDefault: limit_rate 0;\ncontext: http, server, location, if in location\n\n\n限制响应给客户端的传输速率，单位是bytes/second,默认值0表示无限制。\n\n * limit_except ( [ɪkˈsept] )\n\nsyntax: limit_except method ... { ... }\nDefault: -\nContext: location\n\n\n限制在location内使用的http方法。方法包括: GET, HEAD, POST, PUT, DELETE, MKCOL, COPY, MOVE,OPTIONS, PROPFIND, PROPPATCH, LOCK, UNLOCK, PATCH。允许GET方法时, HEAD方法也会被允许。例如:\n\n（allow [əˈlaʊ] deny [dɪˈnaɪ] ）\n\nlimit_except GET {\n\tallow 192.168.1.0/24;\n\tdeny all;\n}\n#除了GET和HEAD之外其它方法仅允许192.168.1.0/24网段主机使用\n\n\n\n# 3，访问控制模块\n\n此模块允许限制对特定客户机地址的访问\n\n * allow\n\nSyntax: allow address | CIDR | unix: | all;\nDefault: -\nContext: http, server, location, limit_except\n\n\n指定允许访问的地址或网格\n\n * deny\n\nSyntax: deny address | CIDR | unix: | a11;\nDefault: -\nContext: http, server, location, limit_except\n\n\n指定拒绝的地址或网络\n\n例如:\n\nlocation / {\n\tdeny 192.168.1.1;\n\tallow 192.168.1.0/24;\n\tallow 10.1.1.0/16;\n\tallow 2001:0db8::/32;\n\tdeny all;\n}\n# 规则按顺序检查，直到找到第一个匹配项。\n\n\n\n# 4、用户认证模块(ngx_ http_ auth basic_ module)\n\n此模块使用HTTP Basic Authentication协议限制对资源的访问，通过用户名和密码方式。\n\n * auth_basic\n\nsyntax: auth_basic string | off;\nDefault: auth_basic off;\nContext: http, server, location, limit_except\n\n\n激活和关闭认证功能。\n\n * auth_basic_user_file\n\nSyntax: auth_basic_user_file file;\nDefault: -\nContext: http, server, location, limit_except\n\n\n指定保存用户名和密码的文件。格式如下:\n\n# comment\nname1: password1\nname2: password2:comment\nname3: password3\n\n# 也可以使用密文。可以通过使用apatch的htpasswd命令(http-tools提供)\n# 或者openssl passwd命令\n\n\n配置案例：\n\nlocation /admin/ {\n\tauth_basic "Admin Area";\n\tauth_basic_user_file /etc/nginx/.ngxpasswd;\n}\n\nlocation / {\n\tauth_basic\t"closed site";\n\tauth_basic_user_file conf/htpasswd;\n}\n\n\n\n# 5、基本状态查看模块(ngx_http_stub_status_module)\n\n提供对基本状态信息的访问\n\n * stub_status\n\nSyntax: stub_status;\nDefault: -\nContext: server, location\n\n\n在1.7.5之前的版本:"stub_status on"。 配置案例:\n\nlocation = /basic_status {\n\tstub_status;\nlocation /status {\n\tstub_status;\n\tallow 172.16.0.0/16;\n\tdeny all;\n}\n# 输出nginx的基本状态信息\n# Active connections:当前状态, 活动状态的连接数\n# accepts: 统计总值, 已经接受的客户端请求的总数\n# handled: 统计总值, 已经处理完成的客户端请求的总数\n# requests: 统计总值, 客户端发来的总的请求数\n# Reading: 当前状态, 正在读取客户端请求报文首部的连接的连接数\n# writing: 当前状态, 正在向客户端发送响应报文过程中的连接数\n# waiting: 当前状态, 正在等待客户端发出请求的空闲连接数\n',normalizedContent:'# nginx常用模块一\n\nnginx由内核和模块组成。nginx本身做的工作实际很少，当它接到一个http请求时，它仅仅是通过查找配置文件将此次请求映射到一个location block,而此location中所配置的各个指令则会启动不同的模块去完成工作，因此模块可以看做nginx真正的劳动工作者. 通常一个location中的指令会涉及一个handler模块和多个filter模块(当然，多个location可以复用同一个模块) 。 handler模块负责处理请求,完成响应内容的生成，而filter模块对响应内容进行处理。用户根据自己的需要所开发的模块都属于第三方模块。正是有了这么多模块的支撑，nginx的功能才会如此强大。\n\nnginx的模块从结构上分为核心模块、基础模块和第三方模块:\n\n * 核心模块: http模块、event模块和mail模块;\n * 基础模块: http access模块、http fastcgi模块、http proxy模块和http rewrite模块;\n * 第三方模块: http upstream request hash模块、 notice模块和http access key模块。\n\nnginx的模块从功能上分为如下三类:\n\n * handlers (处理器模块)：此类模块直接处理请求,并进行输出内容和修改headers信息等操作。handlers处理器模块般只能有一个;\n * filters (过滤器模块)：此类模块主要对其他处理器模块输出的内容进行修改操作,最后nginx输出;\n * proxies (代理类模块)：此类模块是nginx的http upstream之类的模块，这些模块主要与后端一些服务比如fastcg|等进行交互，实现服务代理和负载均衡等功能。\n\n\n# 1、核心功能(core functionality)\n\nfunctionality [ˌfʌŋkʃəˈnæləti] 功能\n\n * worker_processes\n\nsyntax: worker_processes number | auto;\ndefault: worker_processes 1;\ncontext: main\n\n\n最佳值取决于许多因素，包括(但不限于) cpu核心的数量、存储数据的硬盘驱动器的数量和负载模式。一般将其设置为可用cpu核心的数量。\n\n * worker_cpu_affinity ( [əˈfɪnəti] )\n\nsyntax: worker_cpu_affinity cpumask ...;\n\t    worker_cpu_affinity auto [cpumask];\ndefault: -\ncontext: main\n\n\n将工作进程绑定到cpu集。每个cpu集由允许的cpu的位掩码表示。应该为每个工作进程定义一个单独的集合。默认情况下,工作进程不绑定到任何特定的cpu。该指令仅在freebsd和linux上可用。\n\n例如:\n\nworker_processes 4;\nworker_cpu_affinity 0001 0010 0100 1000;\n#将每个工作进程绑定到单独的cpu\n\nworker_processes 2;\nworker_cpu_affinity 0101 1010;\n#将第一个工作进程绑定到cpu0/cpu2,将第二个工作进程绑定到cpu1/cpu3，这个例子适用于超线程情况\n\nworker_processes auto;\nworker_cpu_affinity auto;\n#1.9.10版本后允许将工作进程自动绑定到可用的cpu\n\n\n * worker_priority ( [praɪˈɔːrəti])\n\nsyntax: worker_priority number;\ndefault: worker_priority 0;\ncontext: main\n\n\n为工作进程定义调度优先级，就像由nice命令执行一样: 负数表示优先级更高。允许范围通常在20到20之间\n\n * worker_rlimit_nofile\n\nsyntax: worker_rlimit_nofile number;\ndefault: -\ncontext: main\n\n\n更改工作进程的最大打开文件数(rlimit_nofile)限制，默认较小，生产环境一般需要调高，如: 65535.（需要同时修改linux同一时间开启的文件数）\n\n# 修改linux的同一时间最多可开启的文件数\n$ ulimit -n 65535\n# 如果需要永久修改 则需要修改配置文件/etc/security/limits.conf\n* soft nofile 65536      # open files  (-n)\n* hard nofile 65536\n \n* soft nproc 65565\n* hard nproc 65565       # max user processes   (-u)\n\n\n * worker_connection\n\nsyntax: worker_connections number;\ndefault: worker_connections 1024;\ncontext: events\n\n\n设置能够被一个工作进程打开的最大并发连接数。应该记住，这个数字包括所有连接(例如，与代理服务器的连接等)，而不仅仅是与客户机的连接。另一个需要考虑的问题是，实际同时连接的数量不能超过打开文件的最大数量的当前限制( worker_rlimit_nofile.) 。\n\n * use\n\nsyntax: use method;\ndefault: -\ncontext: events\n\n\n指定要使用的连接处理方法。通常不需要显式地指定它，因为nginx默认使用最有效的方法。如: useepoll;\n\n * accept_mutex （ [əkˈsept] //,mjuː ˈtɛks// 接受互斥）\n\nsyntax: accept_mutex on|off;\ndefault: accept_mutex off;\ncontext: events\n\n\n如果启用:on，工作进程将轮流接受新的连接。否则将通知所有工作进程有关新连接的信息，但只有一个进程可以获得连接。如果新连接的数量较低，则某些工作进程可能会浪费系统资源。在版本1.11.3之前，默认值为on。并发多的时候建议开启。\n\n\n# 2、http核心模块 （ngx _http_core_module）\n\n * http\n\nsyntax: http { ... }\ndefault: -\ncontext: main\n\n\n提供配置文件上下文，其里面指定http服务器指令\n\n * server\n\nsyntax: server { ... }\ndefault: -\ncontext: http\n\n\n配置虚拟主机。基于ip的和基于域名的虚拟主机。listen指令描述了接收连接的所有地址和端口 , server_name指令列出了所有的域名。\n\n * listen\n\nsyntax: listen address [:port] [defau1t_server] [ss1] [http2 | spdy]\n[proxy_protoco1] [setfib=number] [fastopen=number] [backlog=number]\n[rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind]\n[ipv6only=on|off] [reuseport] [so_keepalive=on|off| [keepid1e] : [keepintv1]:[keepcnt]];\nlisten port [default_server] [ss1] [http2|spdy] [proxy_protoco1]\n[setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size]\n[accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport]\n[so_keepalive=on|off|[keepid1e] : [keepintv1] : [keepcnt]];\nlisten unix:path [default_server] [ssl] [http2|spdy] [proxy_protoco1]\n[backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred]\n[bind] [so_keepalive=on|off|[keepidle]:[keepintv1]:[keepcnt]];\ndefault: listen *:80 | *:8000; #默认值\ncontext: server #使用字段：server\n\n\n设置ip的地址和端口，或服务器将接受请求的unix域套接字的路径,例如:\n\nlisten 127.0.0.1:8000;\nlisten 127.0.0.1;\nlisten 8000;\nlisten *:8000;\nlisten localhost:8000;\n# ipv6地址格式（0.7.36）在一个方括号中指定：\nlisten [::]:8000;\nlisten [fe80::1];\n# 0.8.21版本以后nginx可以监听unix套接口：\nlisten unix:/tmp/nginx1.sock;\n\n\n * server_name\n\nsyntax: server_name name ...;\ndefault: server_name "";\ncontext: server\n\n\n设置虚拟服务器的名字。例如:\n\nserver {\nserver_name example.com www.example.com;\n}\n#服务器名称可以包括星号("*") 来替换名称的第一部分或最后一部分:\nserver {\nserver_name example.com * .example.com www.example.*;\n}\n\n#支持~起始的字符做正则表达式模式匹配，性能原因慎用\nserver {\nserver_name www.example.com~^www\\d+\\.example\\.com$; # \\d表示[0-9]\n}\n\n\n匹配优先级机制从高到低:\n\n 1. 首先是字符串精确匹配如:https://www.cnblogs.com/ykzou/p/5840729.html\n 2. 左侧通配符如：*.demo\n 3. 右侧通配符如：demo.*\n 4. 正则表达式如：-^.*.demo\n 5. default_server\n\n * root\n\nsyntax: root path;\ndefault: root html;\ncontext: http, server, location, if in location\n\n\n设置请求的根目录，例如：\n\nlocation /i/ {\n\troot /data/w3;\n}\n# /data/w3/i/top.gif文件将响应"/i/top.gif"请求而发送\n# 路径值可以包含变量，除了$document_root和$realpath_root。\n\n\n * alias [ˈeɪliəs]\n\nsyntax: alias path;\ndefault: -\ncontext：1ocation\n\n\n定义指定的location的一个替换\n\nlocation /i/ {\n\talias /data/w3/images/;\n}\n#对于"/i/top.gif"的请求,将发送文件/data/w3/images/top.gif。\n#路径值可以包含变量，除了$document_root和$realpath_root\n#alias后面必须要用 "/" 结束，否则会找不到文件\n#如果alias配置在正则匹配的location内，则正则表达式中必须包含捕获语句(也就是括号())，\n#而且alias配置中也要引用这些捕获值。如:\nlocation ~ ^/users/(.+\\.(?:gif|jpe?g|png))$ {\n\talias /data/w3/images/$1;\n}\n\n\n# 关于alias和root的区别： \n# root和alias是系统文件路径的设置。 \n# root用来设置根目录，而alias用来重置当前文件的目录。\n\nlocation /img/ {\n    alias /var/www/image/;\n}\n#若按照上述配置的话，则访问/img/目录里面的文件时，ningx会自动去/var/www/image/目录找文件\nlocation /img/ {\n    root /var/www/image;\n}\n#若按照这种配置的话，则访问/img/目录下的文件时，nginx会去/var/www/image/img/目录下找文件。\n\n\n * location\n\nsyntax: location [ = | ~ | ~* | ^~ ] uri { ... }\n\tlocation @name { ... }\ndefault: -\ncontext: server, location\n\n\n根据请求的uri设置配置。 在一个server中location配置段可存在多个，用于实现uri到文件系统的路径映射；\n\n匹配字符串分为两种：普通字符串 (literal string) 和正则表达式 (regular expression) ，其中 ~ 和 ~* 用于正则表达式，其他前缀和无任何前缀都用于普通字符串。\n\n匹配顺序是\n\n 1. 先匹配普通字符串，将相对最精确的匹配暂时存储；\n 2. 然后按照配置文件中的声明顺序进行正则表达式匹配，只要匹配到一条正则表达式，则停止匹配，取正则表达式为匹配结果;\n 3. 如果所有正则表达式都匹配不上,则取1中存储的结果；\n 4. 如果普通字符串和正则表达式都匹配不上，则报404 not found\n 5. "^~ "和"="都能阻止继续搜索正则location。不同点是"^~“依然遵守"最大前缀"匹配规则，然而"="不是"最大前缀”，而是必须是严格匹配\n 6. 只要遇到"完全匹配（exact match[ɪɡˈzækt mætʃ]）"，即使普通location 没有带"="或"^~"前缀，也一样会终止后面的匹配。\n\n例如:\n\nlocation = /uri\t\t=开头表示精确前缀匹配，只有完全匹配才能生效。\nlocation ^~ /uri\t^~开头表示普通字符串匹配上以后不再进行正则匹配。\nlocation ~ pattern\t~开头表示区分大小写的正则匹配。\nlocation ~* pattern\t~*开头表示不区分大小写的正则匹配。\nlocation /uri\t不带任何修饰符，表示前缀匹配。\nlocation /\t通用匹配，任何未匹配到其他location的请求都会匹配到。\n\n\n配置举例：\n\nlocation = / {\n\t[ configuration a ]\n}\n\nlocation / {\n\t[ configuration b ]\n}\n\nlocation /documents/ {\n\t[ configuration c ]\n}\n\nlocation ^~ /images/ {\n\t[ configuration d ]\n}\n\nlocation ~* \\. (gif | jpg | jpeg)$ {\n\t[ configuration e ]\n}\n    \n# "/"请求匹配configuration a:\n# "/index.html"请求匹配configuration b:\n# "/documents/document. . html"请求匹配configuration c:\n# "/images/1.gif"请求匹配configuration d: \n# "/documents/1.jpg"请求匹配configuration e。\n\n# 注意:正则匹配会根据匹配顺序，找到第一个匹配的正则表达式后将停止搜索。\n# 普通字符串匹配则无视顺序，只会选择最精确的匹配。\n\n\n * tcp_nodelay （delay [dɪˈleɪ] 延迟）\n\nsyntax: tcp_nodelay on | off;\ndefault: tcp_nodelay on;\ncontext: http, server, location\n\n\n当连接转换为保持活动(keep-alive)状态时，启用该选项。此外，它在ssl连接、无缓冲代理和websocket代理上也要启用。（这个选项仅在将连接转变为长连接的时候才被启用。）（需要频繁的发送一些小包数据并且不希望放置缓冲区而是直接发送时开启）\n\n * tcp_nopush（push [pʊʃ]）\n\nsyntax: tcp_nopush on | off;\ndefault: tcp_nopush off;\ncontext: http, server, location\n\n\n启用或禁freebsd上的tcp_nopush socket选项或linux上的tcp_cork socket选项。只有在使用sendfile时才启用这些选项。（其功能和tcp_nodelay功能正好相反）\n\n * senfile\n\nsyntax: sendfile on | off;\ndefault: sendfile off;\ncontext: http, server, location, if in location\n\n\n启用或禁用sendfile()的使用。从nginx 0.8.12和freebsd 5.2.1开始，aio（即async非阻塞，是异步非阻塞的io）可用于预加载sendfile()的数据。\n\n不开启sendfile(): 硬盘 >> kernel buffer >> user buffer >> kernel socket buffer >>协议栈\n\n开启sendfile(): 硬盘 >> kernel buffer (快速拷贝到ker nelsocket buffer) >>协议栈\n\n当 nginx是一个静态文件服务器的时候，开启sendfile配置项能大大提高nginx的性能。\n\n例如:\n\nlocation /video/ {\n\tsendfile\ton;\n\ttcp_ nopush\ton;\n\taio\t\t    on;\n}\n\n\n * server_tokens\n\nsyntax: server_tokens on | off | build | string;\ndefault: server_tokens on;\ncontext: http, server, location\n\n\n在错误页和”服务器”响应头字段中启用或禁用发出nginx版本。\n\n * error_page\n\nsyntax: error_page code ... [=[response]] uri;\ndefault: -\ncontext: http, server, location, if in location\n\n\n定义为指定错误显示的uri。uri值可以包含变量。\n\n例如:\n\nerror_page 404\t\t/404.html;\nerror_page 500 502 503 504 /50x.html;\n\n# 这将导致内部重定向到指定的uri,客户端请求方法更改为"get" (对于除"get"和"head"之外的所有方法)。\n# 此外，可以使用"=response"语法将响应代码更改为其他代码，例如:\nror_page 404 =200 /empty.gif;\n\n\n * keepalive_timeout\n\nsyntax: keepalive_timeout timeout [header_timeout];\ndefault: keepalive_timeout 75s;\ncontext: http, server, location\n\n\n设定客户端保持连接超时时长，0表示禁止。 mozilla和konqueror可以识别， msie自己会在60s后关闭连接。\n\nkonqueror （孔克洛）是 kde 桌面系统的一部分，主要用于 linux 和 bsd家族的操作系统。在微软的 windows 系统下，也有零星使用，当然功能相对有限。konqueror主要用于文件管理、浏览，以及网页浏览。konqueror 按照 gpl 进行发布。\n\n * keepalive_requests\n\nsyntax: keepalive_requests number;\ndefault: keepalive_requests 100;\ncontext: http, server, location\n\n\n设置通过一个保持活动连接可以提供服务的最大请求数。在发出最大请求数后，连接将关闭。\n\n * keepalive_disable\n\nsyntax: keepalive_disable none | browser ...;\ndefault: keepalive_disab1e msie6;\ncontext: http, server, location\n\n\n禁止与那些行为不正常的浏览器保持活动连接。\n\n * send_timeout\n\nsyntax: send_timeout time;\ndefault: send_timeout 60s;\ncontext: http, server, location\n\n\n设置向客户端发送响应的超时时间。超时仅在两个连续的写入操作之间设置，不用于传输整个响应。如果客户端在此时间内未收到任何内容，则连接将关闭。\n\n * client_body_buffer_size\n\nsyntax: client_body_buffer_size size;\ndefault: client_body_buffer_size 8k |16k;\ncontext: http, server, location\n\n\n设置读取客户端请求body部分的buffer大小。如果请求body大于缓冲区，则整个body或其部分将写入临时文件。默认情况下，缓冲区大小等于两个内存页。x86平台默认是8k，x86_ 64平台是16k。\n\n * client_body_temp_path\n\nsyntax: client_body_temp_path path [1evel1 [1evel2 [leve13]]];\ndefault: client_body_temp_path client_body_temp;\ncontext: http, server, location\n\n\n定义用于存储保存客户端请求body的临时文件的目录。指定目录下最多可以使用三级子目录层次结构。例如:\n\n# 这里的level1,2,3如果有值就代表存在一级，二级，三级子目录。\n# 目录名是由数字进行命名的，所以这里的具体的值就是代表目录名的数字位数\nclient_body_temp_path /spoo1/nginx/client_temp 1 2;\n# 临时文件的路径可能看起来像下面所示:\n/spoo1/nginx/client_temp/7/45/00000123457\n\n\n * client_max_body_size\n\nsyntax: client_max_body_size size;\ndefault: client_max_body_size 1m;\ncontext: http, server, location\n\n\n设置客户端请求body部分的最大值。指定在请求头的"content-length"区域。 如果超出这个值，则返回413错误。将大小设置为0将禁用对客户端请求body大小的检查。\n\n * limit_rate ([reɪt])\n\nsyntax: limit_rate rate;\ndefault: limit_rate 0;\ncontext: http, server, location, if in location\n\n\n限制响应给客户端的传输速率，单位是bytes/second,默认值0表示无限制。\n\n * limit_except ( [ɪkˈsept] )\n\nsyntax: limit_except method ... { ... }\ndefault: -\ncontext: location\n\n\n限制在location内使用的http方法。方法包括: get, head, post, put, delete, mkcol, copy, move,options, propfind, proppatch, lock, unlock, patch。允许get方法时, head方法也会被允许。例如:\n\n（allow [əˈlaʊ] deny [dɪˈnaɪ] ）\n\nlimit_except get {\n\tallow 192.168.1.0/24;\n\tdeny all;\n}\n#除了get和head之外其它方法仅允许192.168.1.0/24网段主机使用\n\n\n\n# 3，访问控制模块\n\n此模块允许限制对特定客户机地址的访问\n\n * allow\n\nsyntax: allow address | cidr | unix: | all;\ndefault: -\ncontext: http, server, location, limit_except\n\n\n指定允许访问的地址或网格\n\n * deny\n\nsyntax: deny address | cidr | unix: | a11;\ndefault: -\ncontext: http, server, location, limit_except\n\n\n指定拒绝的地址或网络\n\n例如:\n\nlocation / {\n\tdeny 192.168.1.1;\n\tallow 192.168.1.0/24;\n\tallow 10.1.1.0/16;\n\tallow 2001:0db8::/32;\n\tdeny all;\n}\n# 规则按顺序检查，直到找到第一个匹配项。\n\n\n\n# 4、用户认证模块(ngx_ http_ auth basic_ module)\n\n此模块使用http basic authentication协议限制对资源的访问，通过用户名和密码方式。\n\n * auth_basic\n\nsyntax: auth_basic string | off;\ndefault: auth_basic off;\ncontext: http, server, location, limit_except\n\n\n激活和关闭认证功能。\n\n * auth_basic_user_file\n\nsyntax: auth_basic_user_file file;\ndefault: -\ncontext: http, server, location, limit_except\n\n\n指定保存用户名和密码的文件。格式如下:\n\n# comment\nname1: password1\nname2: password2:comment\nname3: password3\n\n# 也可以使用密文。可以通过使用apatch的htpasswd命令(http-tools提供)\n# 或者openssl passwd命令\n\n\n配置案例：\n\nlocation /admin/ {\n\tauth_basic "admin area";\n\tauth_basic_user_file /etc/nginx/.ngxpasswd;\n}\n\nlocation / {\n\tauth_basic\t"closed site";\n\tauth_basic_user_file conf/htpasswd;\n}\n\n\n\n# 5、基本状态查看模块(ngx_http_stub_status_module)\n\n提供对基本状态信息的访问\n\n * stub_status\n\nsyntax: stub_status;\ndefault: -\ncontext: server, location\n\n\n在1.7.5之前的版本:"stub_status on"。 配置案例:\n\nlocation = /basic_status {\n\tstub_status;\nlocation /status {\n\tstub_status;\n\tallow 172.16.0.0/16;\n\tdeny all;\n}\n# 输出nginx的基本状态信息\n# active connections:当前状态, 活动状态的连接数\n# accepts: 统计总值, 已经接受的客户端请求的总数\n# handled: 统计总值, 已经处理完成的客户端请求的总数\n# requests: 统计总值, 客户端发来的总的请求数\n# reading: 当前状态, 正在读取客户端请求报文首部的连接的连接数\n# writing: 当前状态, 正在向客户端发送响应报文过程中的连接数\n# waiting: 当前状态, 正在等待客户端发出请求的空闲连接数\n',charsets:{cjk:!0}},{title:"Nginx常用模块二",frontmatter:{},regularPath:"/Nginx/02_Nginx%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86/Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%9702.html",relativePath:"Nginx/02_Nginx模块管理/Nginx常用模块02.md",key:"v-16c65f6c",path:"/nginx/02_nginxmo-kuai-guan-li/nginxchang-yong-mo-kuai-02.html",headers:[{level:2,title:"1、日志记录模块（ngxhttplog_module）",slug:"_1、日志记录模块-ngx-http-log-module",normalizedTitle:"1、日志记录模块（ngxhttplog_module）",charIndex:null},{level:2,title:"2、压缩相关配置（ngxhttpgzip_module）",slug:"_2、压缩相关配置-ngx-http-gzip-module",normalizedTitle:"2、压缩相关配置（ngxhttpgzip_module）",charIndex:null},{level:2,title:"3、HTTP模块（ngxhttpssl_module）",slug:"_3、http模块-ngx-http-ssl-module",normalizedTitle:"3、http模块（ngxhttpssl_module）",charIndex:null},{level:2,title:"4、反向代理模块(ngxhttp proxy_ module)",slug:"_4、反向代理模块-ngx-http-proxy-module",normalizedTitle:"4、反向代理模块(ngxhttp proxy_ module)",charIndex:null},{level:2,title:"5、php相关模块(ngx http fastcgi module)",slug:"_5、php相关模块-ngx-http-fastcgi-module",normalizedTitle:"5、php相关模块(ngx http fastcgi module)",charIndex:null},{level:3,title:"基本相关知识",slug:"基本相关知识",normalizedTitle:"基本相关知识",charIndex:7724}],headersStr:"1、日志记录模块（ngxhttplog_module） 2、压缩相关配置（ngxhttpgzip_module） 3、HTTP模块（ngxhttpssl_module） 4、反向代理模块(ngxhttp proxy_ module) 5、php相关模块(ngx http fastcgi module) 基本相关知识",content:'# Nginx常用模块二\n\n\n# 1、日志记录模块（ngx_http_log_module）\n\n以指定格式写入请求日志。\n\n * access_log\n\nSyntax: access_log path [format [buffer=size] [gzip[=level]] [flush=time] [if=condition]];\n\taccess_log off;\nDefault: access_log logs/access.log combined;\nContext: http, server, location, if in location, limit_except\n\n\n设置日志写入的路径、格式和配置。例如:\n\naccess_log /path/to/log.gz combined gzip flush=5m;\n# 如果希望gzip正常工作, nginx必须构建zlib库\n\n\n * log_format\n\nSyntax: log_format name [escape=default | json | none] string ...;\nDefault: log_format combined "...";\nContext: http\n\n\n指定日志的格式。日志格式可以包含公共变量和仅在日志写入时存在的变量。\n\n配置：\n\nlog_format compression \'$remote_addr - $remote_user [$time_local]\'\n\t\t\t\t\t \'"$request" $status $bytes_sent\'\n   \t\t\t\t\t \'"$http_referer" "$http_user_agent" \t\t\t\t\t\t\t "$gzip_ratio"\';\naccess_log /spool/logs/nginx-access.log compression buffer=32k;\n\n#json格式日志:\nlog_format json \'{"@timestamp":"$time_iso8601",\'\n\t\t\t   \'"client_ip":"$remote_addr",\'\n\t\t\t   "size":$body_bytes_sent,\'\n\t\t\t   \'"responsetime":$request_time,\n\t\t\t   \'"upstreamtime": "$upstream_response_time",\'\n\t\t\t   "upstreamhost": "$upstream_addr",\'\n\t\t\t   \'"http_host":"$host",\'\n\t\t\t   \'"method": "$request_method",\'\n\t\t\t   \'"request_uri": "$request_uri",\'\n\t\t\t   \'"xff": "$http_x_forwarded_for",\'\n\t\t\t   \'"referrer": "$http_referer",\'\n\t\t\t   \'"agent": "$http_user_agent",\'\n\t\t\t   \'"status":"$status"}\';\n\n\n * open_log_file_cache\n\nSyntax: open_log_file_cache max=N [inactive=time] [min_uses=N] [valid=time]; \nopen_log_file_cache off;\nDefault: open_log_file_cache off;\nContext: http, server, location\n\n\n定义一个缓存，用于存储名称中包含变量的常用日志的文件描述符。缓存常用日志文件相关的元数据信息。(对于每一条日志记录，都将是先打开文件，再写入日志，然后关闭。)\n\nopen_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;\n# max:缓存的最大文件描述符数量\n# min_uses:在inactive定义的时间内，允许描述符在缓存中保持打开状态的最小文件使用数\n# inactive:如果在此期间没有访问，则关闭缓存描述符的时间:\n# valid:此时间超时后，会检查文件还是否具有相同的名字。验正缓存中各缓存项是否为活动项的时间间隔。\n\n\n\n# 2、压缩相关配置（ngx_http_gzip_module）\n\n是一个使用"gzip"方法压缩响应的过滤器。这通常有助于将传输数据的大小减少一半甚至更多。\n\n * gzip\n\nSyntax: gzip on | off;\nDefault: gzip off;\nContext: http, server, location, if in location\n\n\n为响应开启或者取消gzip压缩\n\n * gzip_comp_level\n\nSyntax: gzip_comp_level level;\nDefault: gzip_comp_level 1;\nContext: http, server, location\n\n\n设置响应压缩的gzip级别，范围1-9\n\n * gzip_buffers\n\nSyntax: gzip_buffers number size;\nDefault: gzip_buffers 32 4k | 16 8k;\nContext: http,server, location\n\n\n设置实现压缩功能时缓冲区数量及每个缓存区的大小。size默认大小等同于一个内存页, 4K或8K，取决于平台。\n\n * gzip_disable\n\nSyntax: gzip_disable regex ...;\nDefault: -\nContext: http, server, location\n\n\n取消对匹配到的客户端浏览器的响应报文的gzip压缩。\n\n * gzip_http_version\n\nsyntax: gzip_http_version 1.0 | 1.1;\nDefault: gzip_http_version 1.1;\nContext: http, server, location\n\n\n设置压缩响应时，所需的请求的最小HTTP版本。\n\n * gzip_min_length\n\nSyntax: gzip_min_length length;\nDefault: gzip_min_length 20;\nContext: http, server, location\n\n\n设置将被gzip处理的响应的最小长度。长度仅从"Content-Length"响应头字段确定。\n\n * gzip_types\n\nSyntax: gzip_types mime-type ...;\nDefault: gzip_types text/html;\nContext: http, server, location\n\n\n除了"text/html"之外，还允许对指定的mime类型进行gzip处理。 特殊值"*"匹配任何MIME类型(0.8.29) 带有”text/html"类型的响应总是被压缩。\n\n * gzip_vary\n\nSyntax: gzip_vary on | off;\nDefault: gzip_vary off;\nContext: http, server, location\n\n\n如果gzip,gzip_ static或gunzip是活跃的，开启或关闭在响应头插入"Vary:Accept-Encoding"区域。(给代理服务器用的，有的浏览器支持压缩，有的不支持，所以避免浪费不支持的也压缩，所以根据客户端的HTTP头来判断，是否需要压缩)\n\n * gzip_proxied\n\nSyntax: gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any ...;\nDefault: gzip_proxied off; \nContext: http, server , location\n\n\n依赖于请求和响应，开启对代理请求的gzip压缩。请求是被代理请求的确定是看请求头中是否出现"Via"区域。\n\n * 内嵌变量$gzip_ratio\n\n实现压缩比，计算为原始响应大小和压缩响应大小之间的比率，可以用于日志。\n\n * 配置\n\ngzip\t\ton; \ngzip_min_length 1000;\ngzip_proxied\texpired no-cache no-store private auth;\ngzip_types\t\ttext/plain application/xml;\n----------------------------------\n\ngzip on:\n\ngzip_comp_level 6;\ngzip_http_version 1.1;\ngzip_vary on;\ngzip_min_length 1024;\ngzip_buffers 16 8k;\ngzip_proxied any;\ngzip_disable "MSIE[1-6]\\.(?!.*SVl)";\ngzip_types text/xml text/plain text/css application/javascript application/xml\napplication/json;\n\n\n\n# 3、HTTP模块（ngx_http_ssl_module）\n\n此模块提供对HTTPS的必要支持。模块默认没有安装，需要通过--with-http_ssl_ module配置参数激活。这个模块需要OpenSSL库支持。\n\n * ssl\n\nSyntax: ssl on | off;\nDefault: ssl off;\nContext: http, server\n\n\n该指令在1.15.0版中被废弃。应改为使用listen指令的ssl参数\n\n * ssl_certificate ( [sərˈtɪfɪkət , sərˈtɪfɪkeɪt] )\n\nSyntax: ssl_certificate file;\nDefault: -\nContext: http, server\n\n\n为给定的虚拟服务器指定具有PEM格式证书的文件。如果除了主证书之外还应指定中间证书,则应按以下顺序在同一文件中指定证书；首先是主证书,然后是中间证书。PEM格式的密钥可以放在同一个文件中。 从版本1.11.0开始，可以多次指定此指令以加载不同类型的证书,例如RSA和ECDSA：\n\nserver {\n\tlisten\t\t\t\t443 ssl;\n\tserver_name\t\t\texample.com;\n    \n\tssl_certificate\t\texample.com.rsa.crt;\n\tssl_certificate_key\texample.com.rsa.key;\n    \n\tssl_certificate\t\texample.com.ecdsa.crt;\n\tssl_certificate_key example.com.ecdsa.key;\n    \n    ...\n}\n\n\n只有OpenSSL 1.0.2或更高版本支持不同证书的单独证书链。对于旧版本，只能使用一个证书链。应该记住，由于HTTPS协议对最大互操作性的限制，虚拟服务器应该侦听不同的IP地址。\n\n * sll_certificate_key\n\nSyntax: ssl_certificate_key file;\nDefault: -\nContext: http, server\n\n\n明确为虚拟服务器指定一个含有加密key的PEM格式文件。即证书的私钥文件。\n\n * ssl_protocols\n\nSyntax: ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2] [TLSv1.3];\nDefault: ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nContext: http, server\n\n\n启用指定的协议。\n\n仅当使用OpenSSL 1.0.1或更高版本时，TLSv1.1和TLSv1.2参数(1.1.13， 1.0.12) 才起作用。只有在使用了用TLSv1.3支持构建的OpenSSL 1.1.1时, TLSv1.3参数(1.13.0) 才有效。\n\n# 查看openssl版本\n$ rpm -qa | grep openssl\n$ rpm -qi openssl\n\n\n * ssl_session_cache\n\nSyntax: ssl_session_cache off | none | [builtin[:size]] [shared:name:size];\nDefault: ssl_session_cache none;\nContext: http, server\n\n\n设置存储会话的缓存的类型和大小。缓存可以是以下任何类型:\n\n * off：严格禁止使用会话缓存：nginx显式地告诉客户机会话不能被重用。\n * none：会话缓存的使用被悄悄地禁止：nginx告诉客户机会话可以重用，但实际上不会将会话参数存储在缓存中。\n * builtin: 内置OpenSSL缓存；仅被一个工作进程使用。缓存大小是在会话中指定的。如果没有给出大小，则等于20480个会话。使用内置缓存可能会导致内存碎片。\n * shared: 在所有工作进程之间共享的缓存。缓存大小以字节为单位； 1M字节可以存储大约4000个会话。每个共享缓存都应该有一个任意名称。具有相同名称的缓存可以在多个虚拟服务器中使用。\n\n两种缓存类型都可以同时使用，但是，只使用没有builtin缓存的shared缓存应该更高效。例如:\n\nssl_session_cache builtin:1000 shared:SSL:10m;\n\n\n * ssl_session_timeout\n\nSyntax: ssl_session_timeout time;\nDefault: ssl_session_timeout 5m;\nContext: http, server\n\n\n客户端可以重用会话参数的期限。\n\n * 配置案例\n\n\n为了减少处理器负载，建议:\n1.将工作进程数设置为处理器数，\n2.启用keep-alive连接，\n3.启用共享session缓存，\n4.禁用内置session缓存，\n5.并可能延长会话生存时间(默认为5分钟)\n"""\n\nworker_processes auto;\n\nhttp {\n\t...\n\tserver {\n\tlisten\t\t\t443 ssl;\n\tkeepalive_timeout\t\t70;\n        \n\tssl_protocols\t\tTLSv1 TLSv1.1 TLSv1.2;\n\tssl_ciphers\t\t\tAES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;\n\tssl_certificate\t\t/usr/1ocal/nginx/conf/cert.pem;\n\tssl_certificate_key /usr/1ocal/nginx/conf/cert.key;\n\tssl_session_cache\tshared:SSL:10m;\n\tssl_session_timeout 10m;\n\t\n    ...\n}\n\n\n\n# 4、反向代理模块(ngx_http_ proxy_ module)\n\n此模块允许将请求传递到其它的服务器。\n\n * proxy_pass\n\nSyntax: proxy_pass URL;\nDefault: -\nContext: location,\tif in location, limit_except\n\n\n设置一个被代理服务器的协议和地址以及选项URI，将其映射到一个location。协议可以指定"http"或"https"。地址可以指定为域名或IP地址，以及可选端口:\n\nproxy_pass http://localhost:8000/uri/;\n\n\n指定UNIX socket路径时,路径应放到关键字:unix后面，并用冒号括起来。\n\nproxy_pass unix:/tmp/backend.socket:/uri/;\n\n\n如果域名解析为多个地址，则所有地址将以轮询(round-robin) 方式使用。此外,可以将地址指定为服务器组。\n\n参数值不能包含变量。在这种情况下，如果将地址指定为域名，则会在所描述的服务器组中搜索该名称,如果找不到，则使用解析程序确定该名称。\n\n请求URl按如下方式传递到服务器:\n\n * 如果proxy_ pass指定了URI，那么标准请求URI中匹配了location的部分要被指令中指定的URl替代。\n\nlocation /name/ {\n\tproxy_pass http://127.0.0.1/remote/;\n}\n\n\n * 如果proxy_pass没有指定URI，当原始请求被处理时，请求URI将以客户端发送的相同形式传递给服务器;或者当处理改变的URI时，传递完全规范化的URI。(1.1.12之前，只传递原始的URI)\n\nlocation /some/path/ {\n\tproxy_pass http://127.0.0.1;\n}\n\n\n在某些情况下，无法确定要替换的请求URI部分:\n\n当使用正则表达式指定location时，并也在命名location内，proxy_pass应该做没有URI的指定。 当location中使用rewrite指令更改URI时，将使用相同的配置来处理请求(break)：\n\nlocation /name/ {\n\trewrite /name/([^/]+) /users?name=$l break;\n\tproxy_pass http://127.0.0.1;\n}\n# 在这种情况下，将忽略指令中指定的URI,并将完全更改的请求URI传递给服务器。\n\n\n * 当proxy_pass中使用了变量时如果在指令中指定了URI,则其会传递给服务器，原始请求URI被其替换。\n\nlocation /name/ {\n\tproxy_pass http://127.0.0.1$request_uri;\n}\n\n\n\n# 5、php相关模块(ngx_ http_ fastcgi module)\n\n这个模块允许传递一个请求给FastCGI Server。\n\n\n# 基本相关知识\n\n# 1.什么是FastCGl\n\nFastCGl是一个可伸缩地、高速地在HTTP server和动态脚本语言间通信的接口。多数流行的HTTP server都支持FastCGI,包括Apache、 Nginx和lighttpd等。 同时, FastCGI也被许多脚本语言支持，其中就有PHP。\n\nFastCGI接口方式采用C/S结构，可以将HTTP服务器和脚本解析服务器分开,同时在脚本解析服务器上启动一个或者多个脚本解析守护进程。当HTTP服务器每次遇到动态程序时， 可以将其直接交付给FastCGl进程来执行，然后将得到的结果返回给浏览器。这种方式可以让HTTP服务器专一地处理静态请求或者将动态脚本服务器的结果返回给客户端，这在很大程度上提高了整个应用系统的性能。\n\n# 2.Nginx+FastCGl运行原理\n\nNginx不支持对外部程序的直接调用或者解析，所有的外部程序(包括PHP)必须通过FastCG接口来调用。FastCGI接口在Linux 下是socket (这个socket可以是文件socket, 也可以是ip socket)。为了调用CGl程序,还需要一个FastCGl的 wrapper (wrapper可以理解为用于启动另一个程序的程序) ，这个wrapper绑定在某个固定socket上,如端口或者文件socket。当Nginx将CGI请求发送给这个socket的时候，通过FastCGI接口, wrapper接收到请求，然后派生出一个新的线程,这个线程调用解释器或者外部程序处理脚本并读取返回数据;接着，wrapper再将返回的数据通过FastCGl接口，沿着固定的socket传递给Nginx;最后, Nginx将返回的数据发送给客户端。这就是Nginx+FastCGl的整个运作过程。\n\n\n\n# 3. spawn-fcgi与PHP-FPM\n\nFastCGI接口方式在脚本解析服务器上启动一个或者多个守护进程对动态脚本进行解析，这些进程就是FastCGI进程管理器，或者称为FastCGI引擎。 spawn-fcgj与PHP-FPM就是支持PHP的两个FastCGl进程管理器。\n\nspawn-fcgi是HTTP服务器lighttpd的一部分，目前已经独立成为一个项目,一般与lighttpd配合使用来支持PHP。但是lighttpd的spwan-fcgi在高并发访问的时候，会出现内存泄漏甚至自动重启FastCG的问题。Nginx是个轻量级的HTTP server,必须借助第三方的FastCG处理器才可以对PHP进行解析,因此Nginx+spawn-fcgi的组合也可以实现对PHP的解析。\n\nPHP-FPM也是一个第三方的FastCGI进程管理器，它是作为PHP的一个补丁来开发的，在安装的时候也 需要和PHP源码一起编译，也就是说PHP-FPM被编译到PHP内核中，因此在处理性能方面更加优秀。同 时PHP-FPM在处理高并发方面也比spawn-fcgi引擎好很多，因此,推荐使用Nginx+PHP/PHP-FPM这个 组合对PHP进行解析。\n\nFastCGl的主要优点是把动态语言和HTTP Server分离开来，所以Nginx与PHP/PHP-FPM经常被部署在 不同的服务器上，以分担前端Nginx服务器的压力,使Nginx专一处理静态请求和转发动态请求, 而PHP/PHP- FPM服务器专一解析PHP动态请求。\n\n * fastcgi_pass\n\nSyntax: fastcgi_pass address;\nDefault: -\nContext: location, if in location\n\n\n设置FastCGI server的地址，地址可以是IP或者域名加上端口号。\n\nfastcgi_pass localhost: 9000;\n\n#也可以是UNIX socket路径\nfastcgi_pass unix:/tmp/fastcgi.socket;\n\n\n如果域名解析为多个地址，则所有地址都将以循环方式使用。此外,可以将地址指定为服务器组。参数值不能包含变量。\n\n * fastcgi_index\n\nSyntax: fastcgi_index name;\nDefault: -\nContext: http, server, location\n\n\n设置fastcgi默认的主页资源文件名\n\n * fastcgi_param\n\nSyntax: fastcgi_param parameter value [if_not_empty] ;\nDefault: -\nContext: http, server, location\n\n\n设置应传递给FastCGI服务器的参数。该值可以包含文本、变量及其组合。如果当前级别没有定义,会从上一级继承。\n\n对于PHP来说的最小化配置:\n\nfastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\nfastcgi_param QUERY_STRING\t\t$query_string;\n\n\nSCRIPT_ FILENAME参数用于PHP确定请求脚本的名字 QUERY_ STRING参数用于传递请求的参数\n\n对于处理POST请求的脚本，还需要以下三个参数:\n\nfastcgi_param REQUEST METHOD \t$request_method; ;\nfastcgi_param CONTENT_TYPE\t$content_type;\nfastcgi_param CONTENT_LENGTH\t$content_length;\n\n\n如果PHP编译时使用了--enable-force-cgi-redirect配置参数，则REDIRECT, _STATUS参数应该使用200值被传递\n\nfastcgi_param REDIRECT_STATUS 200; \n\n\n * fastcgi_cache_path\n\nSyntax: fastcgi_cache_path path [levels=levels] [use_temp_path=on|off] \nkeys_zone=name:size [inactive=time]\n\t\t[max_size=size] [manager_files=number] [manager_sleep=time]\n[manager_threshold=time] [loader_fi1es=number]\n\t\t[1oader_sleep=time] [loader_threshold=time] [purger=on|off]\n[purger_files=number] [purger_sleep=time]\n\t\t[purger_thresho1d=time] ;\nDefault: -\nContext: http\n\n\n设置缓存的路径和其他参数。缓存数据存储在文件中。levels的目录层级为1到3级,每级的取值为1或者2；levels=1:2表示定义的2层目录结构，levels=1:2:2表示定义的3层目录结构。\n\nfastcgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n\n\n缓存的文件名看起来如下:\n\n/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n\n\n一个缓存响应首先写入到临时文件，然后再重命名此文件，临时文件目录是否使用由use_temp_path参数定义的，如果这个参数省略或者设置为on，则临时文件目录为fastcgi_temp_path参数指定的位置，如果设置为off，则临时文件将直接放在缓存目录中。此外，所有活动key和有关数据的信息都存储在共享内存区域中，其名称和大小由keys_zone参数配置。1M字节的区域可以存储大约8000个key。\n\ninactive参数指定时间内没有被访问的缓存数据将被清除，其默认值为10分钟；\n\nmax_size参数设置最大缓存大小，如果超出，缓存管理器将删除最近最少被使用的数据\n\n * fastcgi_cache\n\nSyntax: fastcgi_cache zone | off;\nDefault: fastcgi_cache off;\nContext: http, server, location\n\n\n定义用于缓存的一个共享内存区域，同一个区域可以被用于多个位置；off取消缓存继承\n\n * fastcgi_cache_key\n\nSyntax: fastcgi_cache_key string;\nDefault: -\nContext: http, server, location\n\n\n定义一个缓存的key，例如:\n\nfastcgi_cache_key localhost:9000$request_uri;\n\n\n * fastcgi_cache_methods\n\nSyntax: fastcgi_cache_methods GETI HEAD | POST ...;\nDefault: fastcgi_cache_methods GET HEAD;\nContext: http, server, location\n\n\n定义缓存的客户端的请求方法，"GET"和"HEAD"方法总是被缓存，建议显式列出。\n\n * fastcgi_cache_min_uses\n\nSyntax: fastcgi_cache_min_uses number;\nDefault: fastcgi_cache_min_uses 1;\nContext: http, server, location\n\n\n定义响应被缓存后的最小访问次数\n\n * fastcgi_keep_conn\n\nSyntax: fastcgi_keep_conn on | off;\nDefault: fastcgi_keep_conn off;\nContext: http, server, location\n\n\n默认情况下，fastcgj服务器将在发送响应后立即关闭连接。当该指令设置为on时，nginx将指示fastcgi服务器保持连接打开建议开启。\n\n * fastcgi_cache_valid\n\nSyntax: fastcgi_cache_valid [code ...] time;\nDefault: -\nContext: http, server, location\n\n\n设置不同的响应码的缓存时间。例如:\n\nfastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 404\t1m;\n\n\n响应码为200和302的缓存时间为10分钟；404 响应码缓存时间为1分钟\n\nfastcgi_cache_valid 5m;\n\n\n如果仅设置时间，则只有200, 301, 302响应码被缓存\n\nfastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 301 1h;\nfastcgi_cache_valid any 1m;\n\n\n还可以指定any参数来缓存任何响应\n\n缓存参数也可以直接在响应头中设置。这比使用指令设置缓存时间具有更高的优先级。例如:如果头包含"Set-Cookie"字段，则不会缓存此类响应。\n\n# 4. 设置FastCGl\n\nlocation / {\n\tfastcgi_pass localhost :9000;\n\tfastcgi_index index.php;\n    \n\tfastcgi_param SCRIPT_FILENAME /home/www/scripts/phpsfastcgi_script_name;\n\tfastcgi_param QUERY_STRING\t$query_string;\n\tfastcgi_param REQUEST METHOD $request_method;\n\tfastcgi_param CONTENT TYPE\t$content_type;\n\tfastcgi_param CONTENT_LENGTH $content_length;\n}\n\n\n# 5. 设置缓存的例子\n\nhttp {\nfastcgi_cache_path /var/cache/nginx/fcgi_cache\nlevels=1:2:1 keys_zone=fcgicache:20m inactive=120s ;\n...\nserver {\n    location ~* \\. php$ {\n        ...\n        fastcgi_cache fcgicache;\n        fastcgi_cache_key $request_uri ;\n        fastcgi_cache_valid 200 302 10m;\n        fastcgi_cache_valid 301 lh;\n        fastcgi_cache_valid any lm;\n...\n}\n\n}\n',normalizedContent:'# nginx常用模块二\n\n\n# 1、日志记录模块（ngx_http_log_module）\n\n以指定格式写入请求日志。\n\n * access_log\n\nsyntax: access_log path [format [buffer=size] [gzip[=level]] [flush=time] [if=condition]];\n\taccess_log off;\ndefault: access_log logs/access.log combined;\ncontext: http, server, location, if in location, limit_except\n\n\n设置日志写入的路径、格式和配置。例如:\n\naccess_log /path/to/log.gz combined gzip flush=5m;\n# 如果希望gzip正常工作, nginx必须构建zlib库\n\n\n * log_format\n\nsyntax: log_format name [escape=default | json | none] string ...;\ndefault: log_format combined "...";\ncontext: http\n\n\n指定日志的格式。日志格式可以包含公共变量和仅在日志写入时存在的变量。\n\n配置：\n\nlog_format compression \'$remote_addr - $remote_user [$time_local]\'\n\t\t\t\t\t \'"$request" $status $bytes_sent\'\n   \t\t\t\t\t \'"$http_referer" "$http_user_agent" \t\t\t\t\t\t\t "$gzip_ratio"\';\naccess_log /spool/logs/nginx-access.log compression buffer=32k;\n\n#json格式日志:\nlog_format json \'{"@timestamp":"$time_iso8601",\'\n\t\t\t   \'"client_ip":"$remote_addr",\'\n\t\t\t   "size":$body_bytes_sent,\'\n\t\t\t   \'"responsetime":$request_time,\n\t\t\t   \'"upstreamtime": "$upstream_response_time",\'\n\t\t\t   "upstreamhost": "$upstream_addr",\'\n\t\t\t   \'"http_host":"$host",\'\n\t\t\t   \'"method": "$request_method",\'\n\t\t\t   \'"request_uri": "$request_uri",\'\n\t\t\t   \'"xff": "$http_x_forwarded_for",\'\n\t\t\t   \'"referrer": "$http_referer",\'\n\t\t\t   \'"agent": "$http_user_agent",\'\n\t\t\t   \'"status":"$status"}\';\n\n\n * open_log_file_cache\n\nsyntax: open_log_file_cache max=n [inactive=time] [min_uses=n] [valid=time]; \nopen_log_file_cache off;\ndefault: open_log_file_cache off;\ncontext: http, server, location\n\n\n定义一个缓存，用于存储名称中包含变量的常用日志的文件描述符。缓存常用日志文件相关的元数据信息。(对于每一条日志记录，都将是先打开文件，再写入日志，然后关闭。)\n\nopen_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;\n# max:缓存的最大文件描述符数量\n# min_uses:在inactive定义的时间内，允许描述符在缓存中保持打开状态的最小文件使用数\n# inactive:如果在此期间没有访问，则关闭缓存描述符的时间:\n# valid:此时间超时后，会检查文件还是否具有相同的名字。验正缓存中各缓存项是否为活动项的时间间隔。\n\n\n\n# 2、压缩相关配置（ngx_http_gzip_module）\n\n是一个使用"gzip"方法压缩响应的过滤器。这通常有助于将传输数据的大小减少一半甚至更多。\n\n * gzip\n\nsyntax: gzip on | off;\ndefault: gzip off;\ncontext: http, server, location, if in location\n\n\n为响应开启或者取消gzip压缩\n\n * gzip_comp_level\n\nsyntax: gzip_comp_level level;\ndefault: gzip_comp_level 1;\ncontext: http, server, location\n\n\n设置响应压缩的gzip级别，范围1-9\n\n * gzip_buffers\n\nsyntax: gzip_buffers number size;\ndefault: gzip_buffers 32 4k | 16 8k;\ncontext: http,server, location\n\n\n设置实现压缩功能时缓冲区数量及每个缓存区的大小。size默认大小等同于一个内存页, 4k或8k，取决于平台。\n\n * gzip_disable\n\nsyntax: gzip_disable regex ...;\ndefault: -\ncontext: http, server, location\n\n\n取消对匹配到的客户端浏览器的响应报文的gzip压缩。\n\n * gzip_http_version\n\nsyntax: gzip_http_version 1.0 | 1.1;\ndefault: gzip_http_version 1.1;\ncontext: http, server, location\n\n\n设置压缩响应时，所需的请求的最小http版本。\n\n * gzip_min_length\n\nsyntax: gzip_min_length length;\ndefault: gzip_min_length 20;\ncontext: http, server, location\n\n\n设置将被gzip处理的响应的最小长度。长度仅从"content-length"响应头字段确定。\n\n * gzip_types\n\nsyntax: gzip_types mime-type ...;\ndefault: gzip_types text/html;\ncontext: http, server, location\n\n\n除了"text/html"之外，还允许对指定的mime类型进行gzip处理。 特殊值"*"匹配任何mime类型(0.8.29) 带有”text/html"类型的响应总是被压缩。\n\n * gzip_vary\n\nsyntax: gzip_vary on | off;\ndefault: gzip_vary off;\ncontext: http, server, location\n\n\n如果gzip,gzip_ static或gunzip是活跃的，开启或关闭在响应头插入"vary:accept-encoding"区域。(给代理服务器用的，有的浏览器支持压缩，有的不支持，所以避免浪费不支持的也压缩，所以根据客户端的http头来判断，是否需要压缩)\n\n * gzip_proxied\n\nsyntax: gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any ...;\ndefault: gzip_proxied off; \ncontext: http, server , location\n\n\n依赖于请求和响应，开启对代理请求的gzip压缩。请求是被代理请求的确定是看请求头中是否出现"via"区域。\n\n * 内嵌变量$gzip_ratio\n\n实现压缩比，计算为原始响应大小和压缩响应大小之间的比率，可以用于日志。\n\n * 配置\n\ngzip\t\ton; \ngzip_min_length 1000;\ngzip_proxied\texpired no-cache no-store private auth;\ngzip_types\t\ttext/plain application/xml;\n----------------------------------\n\ngzip on:\n\ngzip_comp_level 6;\ngzip_http_version 1.1;\ngzip_vary on;\ngzip_min_length 1024;\ngzip_buffers 16 8k;\ngzip_proxied any;\ngzip_disable "msie[1-6]\\.(?!.*svl)";\ngzip_types text/xml text/plain text/css application/javascript application/xml\napplication/json;\n\n\n\n# 3、http模块（ngx_http_ssl_module）\n\n此模块提供对https的必要支持。模块默认没有安装，需要通过--with-http_ssl_ module配置参数激活。这个模块需要openssl库支持。\n\n * ssl\n\nsyntax: ssl on | off;\ndefault: ssl off;\ncontext: http, server\n\n\n该指令在1.15.0版中被废弃。应改为使用listen指令的ssl参数\n\n * ssl_certificate ( [sərˈtɪfɪkət , sərˈtɪfɪkeɪt] )\n\nsyntax: ssl_certificate file;\ndefault: -\ncontext: http, server\n\n\n为给定的虚拟服务器指定具有pem格式证书的文件。如果除了主证书之外还应指定中间证书,则应按以下顺序在同一文件中指定证书；首先是主证书,然后是中间证书。pem格式的密钥可以放在同一个文件中。 从版本1.11.0开始，可以多次指定此指令以加载不同类型的证书,例如rsa和ecdsa：\n\nserver {\n\tlisten\t\t\t\t443 ssl;\n\tserver_name\t\t\texample.com;\n    \n\tssl_certificate\t\texample.com.rsa.crt;\n\tssl_certificate_key\texample.com.rsa.key;\n    \n\tssl_certificate\t\texample.com.ecdsa.crt;\n\tssl_certificate_key example.com.ecdsa.key;\n    \n    ...\n}\n\n\n只有openssl 1.0.2或更高版本支持不同证书的单独证书链。对于旧版本，只能使用一个证书链。应该记住，由于https协议对最大互操作性的限制，虚拟服务器应该侦听不同的ip地址。\n\n * sll_certificate_key\n\nsyntax: ssl_certificate_key file;\ndefault: -\ncontext: http, server\n\n\n明确为虚拟服务器指定一个含有加密key的pem格式文件。即证书的私钥文件。\n\n * ssl_protocols\n\nsyntax: ssl_protocols [sslv2] [sslv3] [tlsv1] [tlsv1.1] [tlsv1.2] [tlsv1.3];\ndefault: ssl_protocols tlsv1 tlsv1.1 tlsv1.2;\ncontext: http, server\n\n\n启用指定的协议。\n\n仅当使用openssl 1.0.1或更高版本时，tlsv1.1和tlsv1.2参数(1.1.13， 1.0.12) 才起作用。只有在使用了用tlsv1.3支持构建的openssl 1.1.1时, tlsv1.3参数(1.13.0) 才有效。\n\n# 查看openssl版本\n$ rpm -qa | grep openssl\n$ rpm -qi openssl\n\n\n * ssl_session_cache\n\nsyntax: ssl_session_cache off | none | [builtin[:size]] [shared:name:size];\ndefault: ssl_session_cache none;\ncontext: http, server\n\n\n设置存储会话的缓存的类型和大小。缓存可以是以下任何类型:\n\n * off：严格禁止使用会话缓存：nginx显式地告诉客户机会话不能被重用。\n * none：会话缓存的使用被悄悄地禁止：nginx告诉客户机会话可以重用，但实际上不会将会话参数存储在缓存中。\n * builtin: 内置openssl缓存；仅被一个工作进程使用。缓存大小是在会话中指定的。如果没有给出大小，则等于20480个会话。使用内置缓存可能会导致内存碎片。\n * shared: 在所有工作进程之间共享的缓存。缓存大小以字节为单位； 1m字节可以存储大约4000个会话。每个共享缓存都应该有一个任意名称。具有相同名称的缓存可以在多个虚拟服务器中使用。\n\n两种缓存类型都可以同时使用，但是，只使用没有builtin缓存的shared缓存应该更高效。例如:\n\nssl_session_cache builtin:1000 shared:ssl:10m;\n\n\n * ssl_session_timeout\n\nsyntax: ssl_session_timeout time;\ndefault: ssl_session_timeout 5m;\ncontext: http, server\n\n\n客户端可以重用会话参数的期限。\n\n * 配置案例\n\n\n为了减少处理器负载，建议:\n1.将工作进程数设置为处理器数，\n2.启用keep-alive连接，\n3.启用共享session缓存，\n4.禁用内置session缓存，\n5.并可能延长会话生存时间(默认为5分钟)\n"""\n\nworker_processes auto;\n\nhttp {\n\t...\n\tserver {\n\tlisten\t\t\t443 ssl;\n\tkeepalive_timeout\t\t70;\n        \n\tssl_protocols\t\ttlsv1 tlsv1.1 tlsv1.2;\n\tssl_ciphers\t\t\taes128-sha:aes256-sha:rc4-sha:des-cbc3-sha:rc4-md5;\n\tssl_certificate\t\t/usr/1ocal/nginx/conf/cert.pem;\n\tssl_certificate_key /usr/1ocal/nginx/conf/cert.key;\n\tssl_session_cache\tshared:ssl:10m;\n\tssl_session_timeout 10m;\n\t\n    ...\n}\n\n\n\n# 4、反向代理模块(ngx_http_ proxy_ module)\n\n此模块允许将请求传递到其它的服务器。\n\n * proxy_pass\n\nsyntax: proxy_pass url;\ndefault: -\ncontext: location,\tif in location, limit_except\n\n\n设置一个被代理服务器的协议和地址以及选项uri，将其映射到一个location。协议可以指定"http"或"https"。地址可以指定为域名或ip地址，以及可选端口:\n\nproxy_pass http://localhost:8000/uri/;\n\n\n指定unix socket路径时,路径应放到关键字:unix后面，并用冒号括起来。\n\nproxy_pass unix:/tmp/backend.socket:/uri/;\n\n\n如果域名解析为多个地址，则所有地址将以轮询(round-robin) 方式使用。此外,可以将地址指定为服务器组。\n\n参数值不能包含变量。在这种情况下，如果将地址指定为域名，则会在所描述的服务器组中搜索该名称,如果找不到，则使用解析程序确定该名称。\n\n请求url按如下方式传递到服务器:\n\n * 如果proxy_ pass指定了uri，那么标准请求uri中匹配了location的部分要被指令中指定的url替代。\n\nlocation /name/ {\n\tproxy_pass http://127.0.0.1/remote/;\n}\n\n\n * 如果proxy_pass没有指定uri，当原始请求被处理时，请求uri将以客户端发送的相同形式传递给服务器;或者当处理改变的uri时，传递完全规范化的uri。(1.1.12之前，只传递原始的uri)\n\nlocation /some/path/ {\n\tproxy_pass http://127.0.0.1;\n}\n\n\n在某些情况下，无法确定要替换的请求uri部分:\n\n当使用正则表达式指定location时，并也在命名location内，proxy_pass应该做没有uri的指定。 当location中使用rewrite指令更改uri时，将使用相同的配置来处理请求(break)：\n\nlocation /name/ {\n\trewrite /name/([^/]+) /users?name=$l break;\n\tproxy_pass http://127.0.0.1;\n}\n# 在这种情况下，将忽略指令中指定的uri,并将完全更改的请求uri传递给服务器。\n\n\n * 当proxy_pass中使用了变量时如果在指令中指定了uri,则其会传递给服务器，原始请求uri被其替换。\n\nlocation /name/ {\n\tproxy_pass http://127.0.0.1$request_uri;\n}\n\n\n\n# 5、php相关模块(ngx_ http_ fastcgi module)\n\n这个模块允许传递一个请求给fastcgi server。\n\n\n# 基本相关知识\n\n# 1.什么是fastcgl\n\nfastcgl是一个可伸缩地、高速地在http server和动态脚本语言间通信的接口。多数流行的http server都支持fastcgi,包括apache、 nginx和lighttpd等。 同时, fastcgi也被许多脚本语言支持，其中就有php。\n\nfastcgi接口方式采用c/s结构，可以将http服务器和脚本解析服务器分开,同时在脚本解析服务器上启动一个或者多个脚本解析守护进程。当http服务器每次遇到动态程序时， 可以将其直接交付给fastcgl进程来执行，然后将得到的结果返回给浏览器。这种方式可以让http服务器专一地处理静态请求或者将动态脚本服务器的结果返回给客户端，这在很大程度上提高了整个应用系统的性能。\n\n# 2.nginx+fastcgl运行原理\n\nnginx不支持对外部程序的直接调用或者解析，所有的外部程序(包括php)必须通过fastcg接口来调用。fastcgi接口在linux 下是socket (这个socket可以是文件socket, 也可以是ip socket)。为了调用cgl程序,还需要一个fastcgl的 wrapper (wrapper可以理解为用于启动另一个程序的程序) ，这个wrapper绑定在某个固定socket上,如端口或者文件socket。当nginx将cgi请求发送给这个socket的时候，通过fastcgi接口, wrapper接收到请求，然后派生出一个新的线程,这个线程调用解释器或者外部程序处理脚本并读取返回数据;接着，wrapper再将返回的数据通过fastcgl接口，沿着固定的socket传递给nginx;最后, nginx将返回的数据发送给客户端。这就是nginx+fastcgl的整个运作过程。\n\n\n\n# 3. spawn-fcgi与php-fpm\n\nfastcgi接口方式在脚本解析服务器上启动一个或者多个守护进程对动态脚本进行解析，这些进程就是fastcgi进程管理器，或者称为fastcgi引擎。 spawn-fcgj与php-fpm就是支持php的两个fastcgl进程管理器。\n\nspawn-fcgi是http服务器lighttpd的一部分，目前已经独立成为一个项目,一般与lighttpd配合使用来支持php。但是lighttpd的spwan-fcgi在高并发访问的时候，会出现内存泄漏甚至自动重启fastcg的问题。nginx是个轻量级的http server,必须借助第三方的fastcg处理器才可以对php进行解析,因此nginx+spawn-fcgi的组合也可以实现对php的解析。\n\nphp-fpm也是一个第三方的fastcgi进程管理器，它是作为php的一个补丁来开发的，在安装的时候也 需要和php源码一起编译，也就是说php-fpm被编译到php内核中，因此在处理性能方面更加优秀。同 时php-fpm在处理高并发方面也比spawn-fcgi引擎好很多，因此,推荐使用nginx+php/php-fpm这个 组合对php进行解析。\n\nfastcgl的主要优点是把动态语言和http server分离开来，所以nginx与php/php-fpm经常被部署在 不同的服务器上，以分担前端nginx服务器的压力,使nginx专一处理静态请求和转发动态请求, 而php/php- fpm服务器专一解析php动态请求。\n\n * fastcgi_pass\n\nsyntax: fastcgi_pass address;\ndefault: -\ncontext: location, if in location\n\n\n设置fastcgi server的地址，地址可以是ip或者域名加上端口号。\n\nfastcgi_pass localhost: 9000;\n\n#也可以是unix socket路径\nfastcgi_pass unix:/tmp/fastcgi.socket;\n\n\n如果域名解析为多个地址，则所有地址都将以循环方式使用。此外,可以将地址指定为服务器组。参数值不能包含变量。\n\n * fastcgi_index\n\nsyntax: fastcgi_index name;\ndefault: -\ncontext: http, server, location\n\n\n设置fastcgi默认的主页资源文件名\n\n * fastcgi_param\n\nsyntax: fastcgi_param parameter value [if_not_empty] ;\ndefault: -\ncontext: http, server, location\n\n\n设置应传递给fastcgi服务器的参数。该值可以包含文本、变量及其组合。如果当前级别没有定义,会从上一级继承。\n\n对于php来说的最小化配置:\n\nfastcgi_param script_filename /home/www/scripts/php$fastcgi_script_name;\nfastcgi_param query_string\t\t$query_string;\n\n\nscript_ filename参数用于php确定请求脚本的名字 query_ string参数用于传递请求的参数\n\n对于处理post请求的脚本，还需要以下三个参数:\n\nfastcgi_param request method \t$request_method; ;\nfastcgi_param content_type\t$content_type;\nfastcgi_param content_length\t$content_length;\n\n\n如果php编译时使用了--enable-force-cgi-redirect配置参数，则redirect, _status参数应该使用200值被传递\n\nfastcgi_param redirect_status 200; \n\n\n * fastcgi_cache_path\n\nsyntax: fastcgi_cache_path path [levels=levels] [use_temp_path=on|off] \nkeys_zone=name:size [inactive=time]\n\t\t[max_size=size] [manager_files=number] [manager_sleep=time]\n[manager_threshold=time] [loader_fi1es=number]\n\t\t[1oader_sleep=time] [loader_threshold=time] [purger=on|off]\n[purger_files=number] [purger_sleep=time]\n\t\t[purger_thresho1d=time] ;\ndefault: -\ncontext: http\n\n\n设置缓存的路径和其他参数。缓存数据存储在文件中。levels的目录层级为1到3级,每级的取值为1或者2；levels=1:2表示定义的2层目录结构，levels=1:2:2表示定义的3层目录结构。\n\nfastcgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n\n\n缓存的文件名看起来如下:\n\n/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n\n\n一个缓存响应首先写入到临时文件，然后再重命名此文件，临时文件目录是否使用由use_temp_path参数定义的，如果这个参数省略或者设置为on，则临时文件目录为fastcgi_temp_path参数指定的位置，如果设置为off，则临时文件将直接放在缓存目录中。此外，所有活动key和有关数据的信息都存储在共享内存区域中，其名称和大小由keys_zone参数配置。1m字节的区域可以存储大约8000个key。\n\ninactive参数指定时间内没有被访问的缓存数据将被清除，其默认值为10分钟；\n\nmax_size参数设置最大缓存大小，如果超出，缓存管理器将删除最近最少被使用的数据\n\n * fastcgi_cache\n\nsyntax: fastcgi_cache zone | off;\ndefault: fastcgi_cache off;\ncontext: http, server, location\n\n\n定义用于缓存的一个共享内存区域，同一个区域可以被用于多个位置；off取消缓存继承\n\n * fastcgi_cache_key\n\nsyntax: fastcgi_cache_key string;\ndefault: -\ncontext: http, server, location\n\n\n定义一个缓存的key，例如:\n\nfastcgi_cache_key localhost:9000$request_uri;\n\n\n * fastcgi_cache_methods\n\nsyntax: fastcgi_cache_methods geti head | post ...;\ndefault: fastcgi_cache_methods get head;\ncontext: http, server, location\n\n\n定义缓存的客户端的请求方法，"get"和"head"方法总是被缓存，建议显式列出。\n\n * fastcgi_cache_min_uses\n\nsyntax: fastcgi_cache_min_uses number;\ndefault: fastcgi_cache_min_uses 1;\ncontext: http, server, location\n\n\n定义响应被缓存后的最小访问次数\n\n * fastcgi_keep_conn\n\nsyntax: fastcgi_keep_conn on | off;\ndefault: fastcgi_keep_conn off;\ncontext: http, server, location\n\n\n默认情况下，fastcgj服务器将在发送响应后立即关闭连接。当该指令设置为on时，nginx将指示fastcgi服务器保持连接打开建议开启。\n\n * fastcgi_cache_valid\n\nsyntax: fastcgi_cache_valid [code ...] time;\ndefault: -\ncontext: http, server, location\n\n\n设置不同的响应码的缓存时间。例如:\n\nfastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 404\t1m;\n\n\n响应码为200和302的缓存时间为10分钟；404 响应码缓存时间为1分钟\n\nfastcgi_cache_valid 5m;\n\n\n如果仅设置时间，则只有200, 301, 302响应码被缓存\n\nfastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 301 1h;\nfastcgi_cache_valid any 1m;\n\n\n还可以指定any参数来缓存任何响应\n\n缓存参数也可以直接在响应头中设置。这比使用指令设置缓存时间具有更高的优先级。例如:如果头包含"set-cookie"字段，则不会缓存此类响应。\n\n# 4. 设置fastcgl\n\nlocation / {\n\tfastcgi_pass localhost :9000;\n\tfastcgi_index index.php;\n    \n\tfastcgi_param script_filename /home/www/scripts/phpsfastcgi_script_name;\n\tfastcgi_param query_string\t$query_string;\n\tfastcgi_param request method $request_method;\n\tfastcgi_param content type\t$content_type;\n\tfastcgi_param content_length $content_length;\n}\n\n\n# 5. 设置缓存的例子\n\nhttp {\nfastcgi_cache_path /var/cache/nginx/fcgi_cache\nlevels=1:2:1 keys_zone=fcgicache:20m inactive=120s ;\n...\nserver {\n    location ~* \\. php$ {\n        ...\n        fastcgi_cache fcgicache;\n        fastcgi_cache_key $request_uri ;\n        fastcgi_cache_valid 200 302 10m;\n        fastcgi_cache_valid 301 lh;\n        fastcgi_cache_valid any lm;\n...\n}\n\n}\n',charsets:{cjk:!0}},{title:"Nginx常用模块三",frontmatter:{},regularPath:"/Nginx/02_Nginx%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86/Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%9703.html",relativePath:"Nginx/02_Nginx模块管理/Nginx常用模块03.md",key:"v-1fb921c8",path:"/nginx/02_nginxmo-kuai-guan-li/nginxchang-yong-mo-kuai-03.html",headers:[{level:2,title:"1、负载平衡模块(ngxhttpupstream_module)",slug:"_1、负载平衡模块-ngx-http-upstream-module",normalizedTitle:"1、负载平衡模块(ngxhttpupstream_module)",charIndex:null},{level:2,title:"2. 重定向模块（ngx http rewrite_ module）",slug:"_2-重定向模块-ngx-http-rewrite-module",normalizedTitle:"2. 重定向模块（ngx http rewrite_ module）",charIndex:null},{level:2,title:"3.引用模块（ngxhttpreferer_module）",slug:"_3-引用模块-ngx-http-referer-module",normalizedTitle:"3.引用模块（ngxhttpreferer_module）",charIndex:null},{level:2,title:"4. ngx streamcore_ module模块",slug:"_4-ngx-stream-core-module模块",normalizedTitle:"4. ngx streamcore_ module模块",charIndex:null},{level:2,title:"5. ngxstreamproxy_module模块",slug:"_5-ngx-stream-proxy-module模块",normalizedTitle:"5. ngxstreamproxy_module模块",charIndex:null}],headersStr:"1、负载平衡模块(ngxhttpupstream_module) 2. 重定向模块（ngx http rewrite_ module） 3.引用模块（ngxhttpreferer_module） 4. ngx streamcore_ module模块 5. ngxstreamproxy_module模块",content:'# Nginx常用模块三\n\n\n# 1、负载平衡模块(ngx_http_upstream_module)\n\n用于定义服务器组，这些服务器组可以被proxy_pass，fastcgi_pass，uwsgi_pass，scgi_pass,memcached_pass，grpc_pass指令引用。\n\n * upstream\n\nSyntax: upstream name { ... }\nDefault: -\nContext: http\n\n\n定义服务器组，服务器可以侦听不同的端口，另外，侦听TCP和Unix scoket的服务器可以混用。例如:\n\nupstream backend {\n\tserver backendl.example.com weight=5;\n\tserver 127.0.0.1:8080\tmax_fails=3 fail_timeout=30s;\n\tserver unix:/tmp/backend3;\n\tserver backupl.example.com backup;\n}\n\n\n默认情况下，使用加权轮询平衡算法分配请求，上面的例子中，如果有7个请求，则backend1.example.com服务器会分配5个，第二个和第三个服务器各分配一个；如果在与服务器通信期间发生错误，则请求将传递到下一个服务器，依此类推，直到尝试所有运行中的服务器为止。如果无法从任何服务器获得成功的响应，客户端将得到backup1.example.com的响应。\n\n * server\n\nSyntax: server address [parameters]; \nDefault: -\nContext: upstream\n\n\n定义服务器地址和其它参数,地址可以是IP地址或者域名加可选端口，也可以是使用"unix\' 开头的UNIX socket路径,端口如果没有指定，默认为80。一个可以解析为多个地址的域名一次性定义了多个服务器。\n\n能定义的参数有：\n\n 1. weight=number : 设置权重，默认是1\n 2. max_conns=number : 限制与代理服务器同时进行活动连接的最大数目,默认为0,意思是不限制\n 3. max_fails=number : 失败尝试最大次数；超出此处指定的次数时 server将被标记为不可用，默认为1\n 4. fail_timeout=time : 后端服务器标记为不可用状态的连接超时时长，默认10s\n 5. backup : 标记这个服务器为备份服务器\n 6. down : 将服务器标记为永久不可用。配合ip_hash使用，实现灰度发布。\n\n * ip_hash\n\nSyntax: ip_hash;\nDefault: -\nContext: upstream\n\n\n使用ip_hash的负载平衡方式。该方法确保来自同一客户端的请求总是传递到同一服务器，除非该服务器不可用。在后一种情况下，客户机请求将传递到另一个服务器。 如果其中一个服务器需要临时删除，则应使用down参数对其进行标记，以保留客户端IP地址的当前哈希。\n\n例如:\n\nupstream backend {\n\tip_hash;\n    \n\tserver backend1.example.com;\n\tserver backend2.example.com;\n\tserver backend3.example.com down;\n\tserver backend4.examp1e.com;\n}\n\n\n * least_conn\n\nSyntax: least_conn;\nDefault: -\nContext: upstream\n\n\n最少活跃连接调度算法，同时也要考虑权重，如果连接数相同，则使用加权轮询平衡算法。\n\n * least_time （least [liːst] 最少的）\n\nSyntax: least_time header | last_byte [inflight];\nDefault: -\nContext: upstream\nThis di rective appeared in version 1.7.10.\n\n\n以最小的平均响应时间和最少的活动连接数做为负载平衡算法。同时考虑服务器的权重。如果有多个这样的服务器，则使用加权循环平衡方法。商业版本才支持这个指令。\n\n * hash\n\nSyntax: hash key [consistent] ;\nDefault: -\nContext: upstream\nThis di rective appeared in version 1.7.2.\n\n\n基于指定的key的hash算法来建立client-server映射表实现对请求的调度，此处的key可以是文本，变量或二者组合。\n\n作用：将请求分类,同-类请求将发往同一个upstream server，使用consistent参数，将使用ketama一致性hash算法， 适用于后端是Cache服务器 (如varnish) 时使用。\n\nhash $request_uri consistent;\nhash $remote_addr;\n\n\n * keepalive\n\nSyntax: keepalive connections;\nDefault: -\nContext: upstream\nThis di rective appeared in version 1.1.4.\n\n\n为到上游服务器的连接激活缓存。connections参数为同上游服务器的空闲保持连接的最大数量。 connections参数应该设置为足够小的数字，以便上游服务器可以处理新的传入连接。 带keepalive的memcached上游配置示例:\n\nupstream memcached_backend {\n\tserver 127.0.0.1:11211;\n\tserver 10.0.0.2:11211;\n    \n\tkeepalive 32;\n}\nserver {\n    ...\n\tlocation /memcached/ {\n\t\tset $memcached_key $uri;\n\t\tmemcached_pass memcached_backend;\n\t}\n}\n\n\n\n对于HTTP , proxy_http_version指令应该设置到1.1,并且"Connection"头区域应该被清空。\n\nupstream http_backend {\n\tserver 127.0.0.1:8080;\n\tkeepalive 16;\n}\nserver {\n    ...\n        \n\tlocation /http/ {\n\t\tproxy_pass http://http_backend;\n\t\tproxy_http_version 1.1; \n\t\tproxy_set_header Connection "";\n        ...\n\t}\n}\n\n\n对于FastCGI服务器，fastcgi_keep_conn应该被设置on。\n\nupstream fastcgi_backend {\n\tserver 127.0.0.1:9000;\n\tkeepalive 8;\n}\n\nserver {\n    ...\n        \n\tlocation /fastcgi/ {\n\t\tfastcgi_pass fastcgi_backend;\n\t\tfastcgi_keep_conn on; \n\t}\n}\n\n\n\n注：负载平衡方法应该在keepalive指令前面配置; SCGI和uwsgi协议没有保持连接的概念。\n\n * health_check (nginx plus支持的健康检查机制)\n * nginx_upstream_check_module (淘宝开发的第三方健康检查模块)\n\n下载地址: https://www.keepalived.org/download.html\n\n配置案例：\n\nupstream backend {\n\tserver backend1.example.com\tweight=5;\n\tserver backend2.example.com:8080;\n\tserver unix:/tmp/backend3;\n    \n\tserver backup1.example.com:8080\tbackup;\n\tserver backup2.example.com:8080 backup;\n}\nserver {\n\tlocation / {\n\t\tproxy_pass http://backend;\n\t}\n}\n\n\n\n# 2. 重定向模块（ngx_ http_ rewrite_ module）\n\n这个模块使用PCRE正则表达式更改请求的URI，返回重定向指令并有条件的选择配置。\n\nbreak，if，return，rewrite，set指令执行顺序如下:\n\n * 这个模块的指令在server级别是顺序执行\n\n * 重复 。基于请求的URI查找对应的一个location 。在找到的location中，模块指令按顺序执行 。如果请求的URl被重写，则循环重复,但不超过10次\n\n * break\n\nSyntax: break;\nDefault: -\ncontext: server, location, if\n\n\n停止处理当前的ngx-http-rewrite-module指令集。如果该指令是在location中，那么在这个location中，对请求的进一步处理将继续进行。\n\nif ($slow) {\n\t1imit_rate 10k;\n\tbreak;\n}\n\n\n * if\n\nSyntax: if (condition) { ... }\nDefault: -\ncontext: server, location\n\n\n若条件判断为真，则执行花括号内的指令，并且将括号内的配置应用到请求上。if指令中的配置是从上一层配置中继承的。\n\n条件判断式的有如”下种类:\n\n * 一个变量名。如果值为空或者0，则为flase\n * 比较字符串变量使用"="和"!=”\n * 测试一个变量是否与一个正则表达式匹配，正则表达式前使用"~"(区分大小写)或"~* "(不区分大小写)操作符，正则表达式能使用"$1到$9"变量，以便后面可以重复使用；不匹配，使用"!~"和"!~*"操作符，如果正则表达式中含有"}"或";"符号，应使用单引号或双引号将正则表达式括起来。\n * 测试一个文件是否存在使用"-f"和"!-f"\n * 测试一个目录是否存在使用"-d"和"!-d"\n * 测试一个文件、目录、或符号链接文件是否存在，使用"-e"和"!-e"\n * 测试一个文件是否可执行使用"-x"和"!-x"\n\n例如：\n\nif ($http_user_agent ~ MSIE) {\n\trewrite ^(.*)$ /msie/$1 break;\n}\n\nif ($http_cookie ~* "id=([^;]+)(?:;|$)") {\n\tset $id $1;\n}\n\nif ($request_method = POST) {\n\treturn 405; \n}\n\nif ($slow) {\n\t1imit_rate 10k;\n}\n\nif ($invalid_referer) {\n\treturn 403 ;\n}\n\n\n$invalid_referer是一个内建变量，由valid_referers指令进行设置\n\n * return\n\nSyntax:\t return code [text];\n\t\treturn code URL;\n\t\treturn URL;\nDefault: -\nContext: server, location, if\n\n\n停止处理，返回状态码code给客户端。返回非标准码444将关闭该连接,而且不发送响应header。\n\n * rewrite （replacement [rɪˈpleɪsmənt] 替换）\n\nSyntax: rewrite regex replacement [flag] ;\nDefault: -\nContext: server, location, if\n\n\n如果regex匹配了一个请求的URI， 该URI被替换为replacement。rewrite 指令在配置文件中按照出现的顺序执行。可使用flag中止进一步的处理。如果replacement以"http://","https://"为起始的字符串，将中止处理，并返回重定向指令给客户端。 flag参数的值可以为:\n\nlast停止当前ngx_http_rewrite_module模块指令集的处理，并为修改后的URl寻找新的匹配的location break停止当前ngx_http_rewrite_module模块指令集的处理，与break指令作用相同 redirect 返回302代码的临时重定向，当replacement不以"http://","https://"为起始的字符串时使用 permanent 返回301代码的永久重定向\n\n例子：\n\nif ($http_user_agent ~ MSIE) {\n\trewrite ^(.*)$ /msie/$1 break; \n}\n\nif ($http_cookie ~* "id=([^;]+)(?:;|$)") {\n\tset $id $1;\n}\n\nif ($request_method = POST) {\n\treturn 405;\n}\n\nif ($slow) {\n\t1imit_rate 10k;\n}\n\nif ($invalid_referer) {\nreturn 403; \n}\n\n\n$invalid_referer是一个内建变量，由valid_referers指令进行设置\n\n * return\n\nSyntax:\t return code [text] ;\n\t\treturn code URL;\n\t\treturn URL;\nDefault: -\nContext: server, location, if\n\n\n停止处理，返回状态码code给客户端。返回非标准码444将关闭该连接，而且不发送响应header。\n\n * rewrite\n\nSyntax: rewrite regex replacement [flag];\nDefault: -\nContext: server, location, if\n\n\n如果regex匹配了一个请求的URI，该URI被替换为replacement。rewrite 指令在配置文件中按照出现的顺序执行。可使用flag中止进一步的处理。如果replacement以"http://","https/”为起始的字符串,将中止处理,并返回重定向指令给客户端。\n\nflag参数的值可以为:\n\n * last停止当前ngx_http_rewrite_module模块指令集的处理，并为修改后的URI寻找新的匹配的location\n * break停止当前ngx_http_rewrite_module模块指令集的处理，与break指令作用相同\n * redirect返回302代码的临时重定向,当replacement不以htp://*,"https://"为起始的字符串时使用\n * permanent返回301代码的永久重定向\n\n例子：\n\nserver {\n    ...\n\trewrite ^(/download/. *)/media/(.*)\\..*$ $1/mp3/$2.mp3 last;\n\trewrite ^(/download/. *)/audio/(.*)\\..*$ $1/mp3/$2.ra last;\n\treturn 403;\n    ...\n}\n\n\n但如果这些指令被放入"/download/" location区块中，应将last flag替换为break，否则nginx会不断循环，达到10次后，返回500 error\n\nlocation /download/ {\n\trewrite ^(/download/.*)/media/(.*)\\..*$ $l/mp3/$2.mp3 break;\n\trewrite ^(/download/.*)/audio/(.*)\\..*$ $l/mp3/$2.ra break;\n\treturn 403;\n}\n\n\n如果replacement包含请求参数，原来的请求参数将被追加在后面。如果不希望追加原来的请求参数，可在replacement字符串的末尾添加一个"?”符号，例如:\n\nrewrite ^/users/(.*)$ /show?user=$l? last;\n\n\n * rewrite_log\n\nSyntax: rewrite_log on | off;\nDefault: rewrite_log off;\ncontext: http, server, location, if\n\n\n是否开启ngx_http_rewrite_module模块的日志，如果开启，该模块的日志将被记录进入error_log中，日志的级别为notice （ [ˈnoʊtɪs] 通知）\n\n * set\n\nSyntax: set $variable value;\nDefault: -\nContext: server, location, if\n\n\n为变量赋值。value可包含：文本，变量，或文本和变量的组合\n\n\n# 3.引用模块（ngx_http_referer_module）\n\n用于阻止"referer”头字段中具有无效值的请求访问站点。\n\n * valid_refers\n\nSyntax: valid_referers none | blocked | server_names | string ...;\nDefault: -\nContext: server, location\n\n\n定义referer首部的合法可用值，不能匹配的将是非法值。指定"referer”请求头字段值，该值将导致内置变量$invalid_ referer为空字符串。否则，变量值为"1"。搜索匹配项不区分大小写。参数如下:\n\n * none: 请求报文首部没有referer首部\n * blocked: "referer “字段存在于请求头中，但其值已被防火墙或代理服务器删除；这些值是不以"http://"或"https://"开头的字符串;\n * server_names: "referer"请求头字段包含一个服务器名称；\n * arbitrary string: 任意字符串，定义服务器名称和一个可选的URl前缀，开头和结尾可以使用 "* "；检查时，忽略"referer”字段的服务器端口。（arbitrary [ˈɑːrbɪtreri] 任意的）\n * regular expression: 正则表达式匹配到的字符串。第一个符号应该是"~"。 应该注意,表达式将与"http://"或"https://"之 后开始的文本匹配。（regular [ˈreɡjələr] 有规律的 expression [ɪkˈspreʃn]）\n\n配置举例：\n\nvalid_referers none blocked server_names\n\t\t\t*.example.com example.* www.example.org/galleries/\n\t\t\t~\\.goog1e\\.;\nif ($invalid_referer) {\n\treturn 403;\n}\n\n\n\n# 4. ngx_ stream_core_ module模块\n\n基于tcp或udp的服务连接的反向代理，即工作于传输层的反向代理或调度器。此模块从1.9.0版开始可用。这个模块在默认情况下不会构建，应该使用--with-stream配置参数来启用它。\n\n * listen\n\n设置服务器接收的地址和端口组合，也可以只设置端口\n\nSyntax: listen address:port [ssl] [udp] [proxy_protoco1] [backlog=number][rcvbuf=size] [sndbuf=size] [bind]\n\t\t[ipv6only=on | off] [reuseport] [so_ keepalive=on|off| [keepid1e]: \n[keepintvl]:[keepcnt]];\nDefault: -\nContext: server\n\n\n * 例如：\n\nlisten 127.0.0.1:12345;\n1isten *:12345;\nlisten 12345;\t# same as *:12345\nlisten localhost:12345;\n\nlisten [::1] :12345;\nlisten [::]:12345;\n\nlisten unix:/var/run/nginx.sock;\n\nlisten 127.0.0.1:12345-12399;\nlisten 12345-12399;\n\n\n配置案例：\n\nworker_processes auto;\nerror_log /var/1og/nginx/error.log info;\n\nevents {\n\tworker_connections 1024;\n}\n\nstream {\n\tupstream backend {\n\t\thash $remote_addr consistent;\n        \n\t\tserver backendl.example.com:12345 weight=5;\n\t\tserver 127.0.0.1:12345\t\tmax_fails=3 fails_timeout=30s;\n\t\tserver unix:/tmp/backend3;\n    }\n\n    upstream dns {\n            server 192.168.0.1:53535;\n            server dns.example.com:53;\n    }\n\n    server {\n\n            listen 12345;\n            proxy_connect_timeout 1s;\n            proxy_timeout 3s;\n            proxy_pass backend;\n    }\n\n    # reuseport 重用端口 同一个端口可以有多个socket同时进行监听\n    \n    server {\n            listen 127.0.0.1:53 udp reuseport;\n            proxy_timeout 20s;\n            proxy_pass dns;\n    }\n\n    server {\n            listen [::1]:12345;\n            proxy_pass unix:/tmp/stream.socket;\n        }\n}\n\n\n\n# 5. ngx_stream_proxy_module模块\n\n允许代理TCP/UDP和UNIX socket数据流\n\n * proxy_pass\n\nSyntax: proxy_pass address;\nDefault: -\nContext: server\n\n\n设置被代理服务器的地址。可以是域名或IP地址和一个端口，或者UNIX socket路径\n\nproxy-pass localhost:12345;\nproxy_pass unix:/tmp/stream.socket;\n\n\n * proxy_timeout\n\nSyntax: proxy_timeout timeout;\nDefault: proxy_timeout 10m;\nContext: stream, server\n\n\n设置客户端或代理服务器连接上两个连续读或写操作之间的超时时间。如果在这段时间内没有数据传输，则连接将关闭。\n\n * proxy_connect_timeout\n\nSyntax:\nproxy_connect_timeout time;\nDefault: proxy_connect_timeout 60s;\nContext: stream, server\n\n\n定义与被代理服务器建立连接的超时时间\n\n * proxy_bind\n\nSyntax: proxy_bind address [transparent] | off;\nDefault: -\ncontext: stream, server\nThis di rective appeared in version 1.9.2.\n\n\n指定到被代理服务器数据包的源IP地址。参数可以包含变量，off表示取消从上一级的继承配置，以便让系统自动分配本地的地址。\n\ntransparent（[trænsˈpærənt]透明的）启用透明代理\n\n透明代理的意思是客户端根本不需要知道有代理服务器的存在。既然透明代理是感知不了代理的存在，那么非透明代理就是可以感知到代理的存在了，最简单的方式就是你要去访问网站A，在正常情况下，网站A看到访问是来自于你的终端的（比如源IP地址是你自己浏览器的），假如你的终端是通过代理来访问网站A的，在普通非透明代理情况下，网站A看到请求是来自于你的代理IP而看不到你这个终端，在透明代理情况下，网站A感知不到你和它之间中间有一层代理，网站A看到的请求是来自于你的终端地址。\n\nproxy_bind $remote_addr transparent;\n\n\n配置案例\n\nserver {\n\tlisten 127.0.0.1:12345;\n\tproxy_pass 127.0.0.1:8080; \n}\n\nserver {\n\tlisten 12345; \n\tproxy_connect_timeout 1s;\n\tproxy_timeout 1m;\n\tproxy_pass example.com:12345 ;\n}\n\nserver {\n\tlisten 53 udp reuseport;\n\tproxy_timeout 20s;\n\tproxy_pass dns.xample.com:53;\n}\n\nserver {\n\tlisten [::1]:12345;\n\tproxy_pass unix:/tmp/stream.socket;\n}\n\n\n附录：PCRE正则表达式语法\n\n字符            描述\n\\             将下一个字符标记为一个特殊字符，或一个原义字符，或一个向后引用，或一个八进制转义符。例如，”\\n”匹配一个换行符。\n^             匹配输入字符串的开始位置。\n$             匹配输入字符串的结束位置。\n*             匹配前面的子表达式零次或多次，等价于{0,}\n+             匹配前面的子表达式一次或多次，等价于{1,}\n?             匹配前面的子表达式零次或一次，等价于{0,1}\n?             当该字符紧跟在任何一个其他限制符(*,+,?,{n},{n,},{n,m})后面时，匹配模式是非贪婪的。非贪婪模式尽可能少地匹配所搜索的字符串，而默认的贪婪模式则尽可能多地匹配所搜索的字符串。例如，对于字符串”oooo”,”o+?”将匹配单个”o”,而”o+”将匹配所有的”o”。\n{n}           N是一个非负整数，匹配确定的n次。\n{n,}          N是一个非负整数，至少匹配n次。\n{n,m}         M和n均为非负整数，其中n<=m，最少匹配n次且最多匹配m次。\n.             匹配除”\\n”之外的任何单个字符。要匹配包括”\\n”在内的任何字符，请使用像”[.\\n]”的模式\n(pattern)     匹配pattern并获取这一匹配。\n(?:pattern)   匹配pattern但不获取匹配结果。这在使用“或”字符(|)来组合一个模式的各个部分是很有用的。例如:’industry|industries’就可以用’industr(?:y|ies)’代替\n(?=pattern)   正向预查，在任何匹配pattern的字符串开始处匹配查找字符串。例如：”Windows(?=95|98|NT|2000)”能匹配”Windows2000”中的”Windows”，但不能匹配”Windows3.1”中的”Windows”。\n(?!pattern)   负向预查，在任何不匹配pattern的字符串开始处匹配查找字符串。例如：”Windows(?!95|98|NT|2000)”能匹配”Windows3.1”中的”Windows”，但不能匹配”Windows2000”中的”Windows”。\nx|y           匹配x或y。\n[xyz]         字符集合，匹配所包含的任何一个字符。\n[^xyz]        负值字符集合，匹配未包含的任意字符。\n[a-z]         字符范围，匹配指定范围内的任意字符。\n[^a-z]        负值字符范围，匹配任何不在指定范围内的任意字符。\n\\b            匹配一个单词边界，也就是单词和空格间的位置。\n\\B            匹配非单词边界。\n\\cx           匹配由x指明的控制字符。X的值必须为A-Z或a-z之间\n\\d            匹配一个数字字符。等价于[0-9]\n\\D            匹配一个非数字字符。等价于[^0-9]\n\\f            匹配一个换页符。等价于\\x0c和\\cL\n\\n            匹配一个换行符。等价于\\x0a和\\cJ\n\\r            匹配一个回车符。等价于\\x0d和\\cM\n\\s            匹配任何空白字符，包括空格、制表符、换页符等。\n\\S            匹配任何非空白符。\n\\t            匹配一个制表符\n\\w            匹配包括下划线的任何单词字符。等价于[a-zA-Z0-9_]\n\\W            匹配任何非单词字符。\n\\xn           匹配n，其中n为十六进制转义值。例如”\\x41”匹配”A”。\n\\num          匹配num，其中num是一个正整数。对所获取的匹配的引用。例如：”(.)\\1”',normalizedContent:'# nginx常用模块三\n\n\n# 1、负载平衡模块(ngx_http_upstream_module)\n\n用于定义服务器组，这些服务器组可以被proxy_pass，fastcgi_pass，uwsgi_pass，scgi_pass,memcached_pass，grpc_pass指令引用。\n\n * upstream\n\nsyntax: upstream name { ... }\ndefault: -\ncontext: http\n\n\n定义服务器组，服务器可以侦听不同的端口，另外，侦听tcp和unix scoket的服务器可以混用。例如:\n\nupstream backend {\n\tserver backendl.example.com weight=5;\n\tserver 127.0.0.1:8080\tmax_fails=3 fail_timeout=30s;\n\tserver unix:/tmp/backend3;\n\tserver backupl.example.com backup;\n}\n\n\n默认情况下，使用加权轮询平衡算法分配请求，上面的例子中，如果有7个请求，则backend1.example.com服务器会分配5个，第二个和第三个服务器各分配一个；如果在与服务器通信期间发生错误，则请求将传递到下一个服务器，依此类推，直到尝试所有运行中的服务器为止。如果无法从任何服务器获得成功的响应，客户端将得到backup1.example.com的响应。\n\n * server\n\nsyntax: server address [parameters]; \ndefault: -\ncontext: upstream\n\n\n定义服务器地址和其它参数,地址可以是ip地址或者域名加可选端口，也可以是使用"unix\' 开头的unix socket路径,端口如果没有指定，默认为80。一个可以解析为多个地址的域名一次性定义了多个服务器。\n\n能定义的参数有：\n\n 1. weight=number : 设置权重，默认是1\n 2. max_conns=number : 限制与代理服务器同时进行活动连接的最大数目,默认为0,意思是不限制\n 3. max_fails=number : 失败尝试最大次数；超出此处指定的次数时 server将被标记为不可用，默认为1\n 4. fail_timeout=time : 后端服务器标记为不可用状态的连接超时时长，默认10s\n 5. backup : 标记这个服务器为备份服务器\n 6. down : 将服务器标记为永久不可用。配合ip_hash使用，实现灰度发布。\n\n * ip_hash\n\nsyntax: ip_hash;\ndefault: -\ncontext: upstream\n\n\n使用ip_hash的负载平衡方式。该方法确保来自同一客户端的请求总是传递到同一服务器，除非该服务器不可用。在后一种情况下，客户机请求将传递到另一个服务器。 如果其中一个服务器需要临时删除，则应使用down参数对其进行标记，以保留客户端ip地址的当前哈希。\n\n例如:\n\nupstream backend {\n\tip_hash;\n    \n\tserver backend1.example.com;\n\tserver backend2.example.com;\n\tserver backend3.example.com down;\n\tserver backend4.examp1e.com;\n}\n\n\n * least_conn\n\nsyntax: least_conn;\ndefault: -\ncontext: upstream\n\n\n最少活跃连接调度算法，同时也要考虑权重，如果连接数相同，则使用加权轮询平衡算法。\n\n * least_time （least [liːst] 最少的）\n\nsyntax: least_time header | last_byte [inflight];\ndefault: -\ncontext: upstream\nthis di rective appeared in version 1.7.10.\n\n\n以最小的平均响应时间和最少的活动连接数做为负载平衡算法。同时考虑服务器的权重。如果有多个这样的服务器，则使用加权循环平衡方法。商业版本才支持这个指令。\n\n * hash\n\nsyntax: hash key [consistent] ;\ndefault: -\ncontext: upstream\nthis di rective appeared in version 1.7.2.\n\n\n基于指定的key的hash算法来建立client-server映射表实现对请求的调度，此处的key可以是文本，变量或二者组合。\n\n作用：将请求分类,同-类请求将发往同一个upstream server，使用consistent参数，将使用ketama一致性hash算法， 适用于后端是cache服务器 (如varnish) 时使用。\n\nhash $request_uri consistent;\nhash $remote_addr;\n\n\n * keepalive\n\nsyntax: keepalive connections;\ndefault: -\ncontext: upstream\nthis di rective appeared in version 1.1.4.\n\n\n为到上游服务器的连接激活缓存。connections参数为同上游服务器的空闲保持连接的最大数量。 connections参数应该设置为足够小的数字，以便上游服务器可以处理新的传入连接。 带keepalive的memcached上游配置示例:\n\nupstream memcached_backend {\n\tserver 127.0.0.1:11211;\n\tserver 10.0.0.2:11211;\n    \n\tkeepalive 32;\n}\nserver {\n    ...\n\tlocation /memcached/ {\n\t\tset $memcached_key $uri;\n\t\tmemcached_pass memcached_backend;\n\t}\n}\n\n\n\n对于http , proxy_http_version指令应该设置到1.1,并且"connection"头区域应该被清空。\n\nupstream http_backend {\n\tserver 127.0.0.1:8080;\n\tkeepalive 16;\n}\nserver {\n    ...\n        \n\tlocation /http/ {\n\t\tproxy_pass http://http_backend;\n\t\tproxy_http_version 1.1; \n\t\tproxy_set_header connection "";\n        ...\n\t}\n}\n\n\n对于fastcgi服务器，fastcgi_keep_conn应该被设置on。\n\nupstream fastcgi_backend {\n\tserver 127.0.0.1:9000;\n\tkeepalive 8;\n}\n\nserver {\n    ...\n        \n\tlocation /fastcgi/ {\n\t\tfastcgi_pass fastcgi_backend;\n\t\tfastcgi_keep_conn on; \n\t}\n}\n\n\n\n注：负载平衡方法应该在keepalive指令前面配置; scgi和uwsgi协议没有保持连接的概念。\n\n * health_check (nginx plus支持的健康检查机制)\n * nginx_upstream_check_module (淘宝开发的第三方健康检查模块)\n\n下载地址: https://www.keepalived.org/download.html\n\n配置案例：\n\nupstream backend {\n\tserver backend1.example.com\tweight=5;\n\tserver backend2.example.com:8080;\n\tserver unix:/tmp/backend3;\n    \n\tserver backup1.example.com:8080\tbackup;\n\tserver backup2.example.com:8080 backup;\n}\nserver {\n\tlocation / {\n\t\tproxy_pass http://backend;\n\t}\n}\n\n\n\n# 2. 重定向模块（ngx_ http_ rewrite_ module）\n\n这个模块使用pcre正则表达式更改请求的uri，返回重定向指令并有条件的选择配置。\n\nbreak，if，return，rewrite，set指令执行顺序如下:\n\n * 这个模块的指令在server级别是顺序执行\n\n * 重复 。基于请求的uri查找对应的一个location 。在找到的location中，模块指令按顺序执行 。如果请求的url被重写，则循环重复,但不超过10次\n\n * break\n\nsyntax: break;\ndefault: -\ncontext: server, location, if\n\n\n停止处理当前的ngx-http-rewrite-module指令集。如果该指令是在location中，那么在这个location中，对请求的进一步处理将继续进行。\n\nif ($slow) {\n\t1imit_rate 10k;\n\tbreak;\n}\n\n\n * if\n\nsyntax: if (condition) { ... }\ndefault: -\ncontext: server, location\n\n\n若条件判断为真，则执行花括号内的指令，并且将括号内的配置应用到请求上。if指令中的配置是从上一层配置中继承的。\n\n条件判断式的有如”下种类:\n\n * 一个变量名。如果值为空或者0，则为flase\n * 比较字符串变量使用"="和"!=”\n * 测试一个变量是否与一个正则表达式匹配，正则表达式前使用"~"(区分大小写)或"~* "(不区分大小写)操作符，正则表达式能使用"$1到$9"变量，以便后面可以重复使用；不匹配，使用"!~"和"!~*"操作符，如果正则表达式中含有"}"或";"符号，应使用单引号或双引号将正则表达式括起来。\n * 测试一个文件是否存在使用"-f"和"!-f"\n * 测试一个目录是否存在使用"-d"和"!-d"\n * 测试一个文件、目录、或符号链接文件是否存在，使用"-e"和"!-e"\n * 测试一个文件是否可执行使用"-x"和"!-x"\n\n例如：\n\nif ($http_user_agent ~ msie) {\n\trewrite ^(.*)$ /msie/$1 break;\n}\n\nif ($http_cookie ~* "id=([^;]+)(?:;|$)") {\n\tset $id $1;\n}\n\nif ($request_method = post) {\n\treturn 405; \n}\n\nif ($slow) {\n\t1imit_rate 10k;\n}\n\nif ($invalid_referer) {\n\treturn 403 ;\n}\n\n\n$invalid_referer是一个内建变量，由valid_referers指令进行设置\n\n * return\n\nsyntax:\t return code [text];\n\t\treturn code url;\n\t\treturn url;\ndefault: -\ncontext: server, location, if\n\n\n停止处理，返回状态码code给客户端。返回非标准码444将关闭该连接,而且不发送响应header。\n\n * rewrite （replacement [rɪˈpleɪsmənt] 替换）\n\nsyntax: rewrite regex replacement [flag] ;\ndefault: -\ncontext: server, location, if\n\n\n如果regex匹配了一个请求的uri， 该uri被替换为replacement。rewrite 指令在配置文件中按照出现的顺序执行。可使用flag中止进一步的处理。如果replacement以"http://","https://"为起始的字符串，将中止处理，并返回重定向指令给客户端。 flag参数的值可以为:\n\nlast停止当前ngx_http_rewrite_module模块指令集的处理，并为修改后的url寻找新的匹配的location break停止当前ngx_http_rewrite_module模块指令集的处理，与break指令作用相同 redirect 返回302代码的临时重定向，当replacement不以"http://","https://"为起始的字符串时使用 permanent 返回301代码的永久重定向\n\n例子：\n\nif ($http_user_agent ~ msie) {\n\trewrite ^(.*)$ /msie/$1 break; \n}\n\nif ($http_cookie ~* "id=([^;]+)(?:;|$)") {\n\tset $id $1;\n}\n\nif ($request_method = post) {\n\treturn 405;\n}\n\nif ($slow) {\n\t1imit_rate 10k;\n}\n\nif ($invalid_referer) {\nreturn 403; \n}\n\n\n$invalid_referer是一个内建变量，由valid_referers指令进行设置\n\n * return\n\nsyntax:\t return code [text] ;\n\t\treturn code url;\n\t\treturn url;\ndefault: -\ncontext: server, location, if\n\n\n停止处理，返回状态码code给客户端。返回非标准码444将关闭该连接，而且不发送响应header。\n\n * rewrite\n\nsyntax: rewrite regex replacement [flag];\ndefault: -\ncontext: server, location, if\n\n\n如果regex匹配了一个请求的uri，该uri被替换为replacement。rewrite 指令在配置文件中按照出现的顺序执行。可使用flag中止进一步的处理。如果replacement以"http://","https/”为起始的字符串,将中止处理,并返回重定向指令给客户端。\n\nflag参数的值可以为:\n\n * last停止当前ngx_http_rewrite_module模块指令集的处理，并为修改后的uri寻找新的匹配的location\n * break停止当前ngx_http_rewrite_module模块指令集的处理，与break指令作用相同\n * redirect返回302代码的临时重定向,当replacement不以htp://*,"https://"为起始的字符串时使用\n * permanent返回301代码的永久重定向\n\n例子：\n\nserver {\n    ...\n\trewrite ^(/download/. *)/media/(.*)\\..*$ $1/mp3/$2.mp3 last;\n\trewrite ^(/download/. *)/audio/(.*)\\..*$ $1/mp3/$2.ra last;\n\treturn 403;\n    ...\n}\n\n\n但如果这些指令被放入"/download/" location区块中，应将last flag替换为break，否则nginx会不断循环，达到10次后，返回500 error\n\nlocation /download/ {\n\trewrite ^(/download/.*)/media/(.*)\\..*$ $l/mp3/$2.mp3 break;\n\trewrite ^(/download/.*)/audio/(.*)\\..*$ $l/mp3/$2.ra break;\n\treturn 403;\n}\n\n\n如果replacement包含请求参数，原来的请求参数将被追加在后面。如果不希望追加原来的请求参数，可在replacement字符串的末尾添加一个"?”符号，例如:\n\nrewrite ^/users/(.*)$ /show?user=$l? last;\n\n\n * rewrite_log\n\nsyntax: rewrite_log on | off;\ndefault: rewrite_log off;\ncontext: http, server, location, if\n\n\n是否开启ngx_http_rewrite_module模块的日志，如果开启，该模块的日志将被记录进入error_log中，日志的级别为notice （ [ˈnoʊtɪs] 通知）\n\n * set\n\nsyntax: set $variable value;\ndefault: -\ncontext: server, location, if\n\n\n为变量赋值。value可包含：文本，变量，或文本和变量的组合\n\n\n# 3.引用模块（ngx_http_referer_module）\n\n用于阻止"referer”头字段中具有无效值的请求访问站点。\n\n * valid_refers\n\nsyntax: valid_referers none | blocked | server_names | string ...;\ndefault: -\ncontext: server, location\n\n\n定义referer首部的合法可用值，不能匹配的将是非法值。指定"referer”请求头字段值，该值将导致内置变量$invalid_ referer为空字符串。否则，变量值为"1"。搜索匹配项不区分大小写。参数如下:\n\n * none: 请求报文首部没有referer首部\n * blocked: "referer “字段存在于请求头中，但其值已被防火墙或代理服务器删除；这些值是不以"http://"或"https://"开头的字符串;\n * server_names: "referer"请求头字段包含一个服务器名称；\n * arbitrary string: 任意字符串，定义服务器名称和一个可选的url前缀，开头和结尾可以使用 "* "；检查时，忽略"referer”字段的服务器端口。（arbitrary [ˈɑːrbɪtreri] 任意的）\n * regular expression: 正则表达式匹配到的字符串。第一个符号应该是"~"。 应该注意,表达式将与"http://"或"https://"之 后开始的文本匹配。（regular [ˈreɡjələr] 有规律的 expression [ɪkˈspreʃn]）\n\n配置举例：\n\nvalid_referers none blocked server_names\n\t\t\t*.example.com example.* www.example.org/galleries/\n\t\t\t~\\.goog1e\\.;\nif ($invalid_referer) {\n\treturn 403;\n}\n\n\n\n# 4. ngx_ stream_core_ module模块\n\n基于tcp或udp的服务连接的反向代理，即工作于传输层的反向代理或调度器。此模块从1.9.0版开始可用。这个模块在默认情况下不会构建，应该使用--with-stream配置参数来启用它。\n\n * listen\n\n设置服务器接收的地址和端口组合，也可以只设置端口\n\nsyntax: listen address:port [ssl] [udp] [proxy_protoco1] [backlog=number][rcvbuf=size] [sndbuf=size] [bind]\n\t\t[ipv6only=on | off] [reuseport] [so_ keepalive=on|off| [keepid1e]: \n[keepintvl]:[keepcnt]];\ndefault: -\ncontext: server\n\n\n * 例如：\n\nlisten 127.0.0.1:12345;\n1isten *:12345;\nlisten 12345;\t# same as *:12345\nlisten localhost:12345;\n\nlisten [::1] :12345;\nlisten [::]:12345;\n\nlisten unix:/var/run/nginx.sock;\n\nlisten 127.0.0.1:12345-12399;\nlisten 12345-12399;\n\n\n配置案例：\n\nworker_processes auto;\nerror_log /var/1og/nginx/error.log info;\n\nevents {\n\tworker_connections 1024;\n}\n\nstream {\n\tupstream backend {\n\t\thash $remote_addr consistent;\n        \n\t\tserver backendl.example.com:12345 weight=5;\n\t\tserver 127.0.0.1:12345\t\tmax_fails=3 fails_timeout=30s;\n\t\tserver unix:/tmp/backend3;\n    }\n\n    upstream dns {\n            server 192.168.0.1:53535;\n            server dns.example.com:53;\n    }\n\n    server {\n\n            listen 12345;\n            proxy_connect_timeout 1s;\n            proxy_timeout 3s;\n            proxy_pass backend;\n    }\n\n    # reuseport 重用端口 同一个端口可以有多个socket同时进行监听\n    \n    server {\n            listen 127.0.0.1:53 udp reuseport;\n            proxy_timeout 20s;\n            proxy_pass dns;\n    }\n\n    server {\n            listen [::1]:12345;\n            proxy_pass unix:/tmp/stream.socket;\n        }\n}\n\n\n\n# 5. ngx_stream_proxy_module模块\n\n允许代理tcp/udp和unix socket数据流\n\n * proxy_pass\n\nsyntax: proxy_pass address;\ndefault: -\ncontext: server\n\n\n设置被代理服务器的地址。可以是域名或ip地址和一个端口，或者unix socket路径\n\nproxy-pass localhost:12345;\nproxy_pass unix:/tmp/stream.socket;\n\n\n * proxy_timeout\n\nsyntax: proxy_timeout timeout;\ndefault: proxy_timeout 10m;\ncontext: stream, server\n\n\n设置客户端或代理服务器连接上两个连续读或写操作之间的超时时间。如果在这段时间内没有数据传输，则连接将关闭。\n\n * proxy_connect_timeout\n\nsyntax:\nproxy_connect_timeout time;\ndefault: proxy_connect_timeout 60s;\ncontext: stream, server\n\n\n定义与被代理服务器建立连接的超时时间\n\n * proxy_bind\n\nsyntax: proxy_bind address [transparent] | off;\ndefault: -\ncontext: stream, server\nthis di rective appeared in version 1.9.2.\n\n\n指定到被代理服务器数据包的源ip地址。参数可以包含变量，off表示取消从上一级的继承配置，以便让系统自动分配本地的地址。\n\ntransparent（[trænsˈpærənt]透明的）启用透明代理\n\n透明代理的意思是客户端根本不需要知道有代理服务器的存在。既然透明代理是感知不了代理的存在，那么非透明代理就是可以感知到代理的存在了，最简单的方式就是你要去访问网站a，在正常情况下，网站a看到访问是来自于你的终端的（比如源ip地址是你自己浏览器的），假如你的终端是通过代理来访问网站a的，在普通非透明代理情况下，网站a看到请求是来自于你的代理ip而看不到你这个终端，在透明代理情况下，网站a感知不到你和它之间中间有一层代理，网站a看到的请求是来自于你的终端地址。\n\nproxy_bind $remote_addr transparent;\n\n\n配置案例\n\nserver {\n\tlisten 127.0.0.1:12345;\n\tproxy_pass 127.0.0.1:8080; \n}\n\nserver {\n\tlisten 12345; \n\tproxy_connect_timeout 1s;\n\tproxy_timeout 1m;\n\tproxy_pass example.com:12345 ;\n}\n\nserver {\n\tlisten 53 udp reuseport;\n\tproxy_timeout 20s;\n\tproxy_pass dns.xample.com:53;\n}\n\nserver {\n\tlisten [::1]:12345;\n\tproxy_pass unix:/tmp/stream.socket;\n}\n\n\n附录：pcre正则表达式语法\n\n字符            描述\n\\             将下一个字符标记为一个特殊字符，或一个原义字符，或一个向后引用，或一个八进制转义符。例如，”\\n”匹配一个换行符。\n^             匹配输入字符串的开始位置。\n$             匹配输入字符串的结束位置。\n*             匹配前面的子表达式零次或多次，等价于{0,}\n+             匹配前面的子表达式一次或多次，等价于{1,}\n?             匹配前面的子表达式零次或一次，等价于{0,1}\n?             当该字符紧跟在任何一个其他限制符(*,+,?,{n},{n,},{n,m})后面时，匹配模式是非贪婪的。非贪婪模式尽可能少地匹配所搜索的字符串，而默认的贪婪模式则尽可能多地匹配所搜索的字符串。例如，对于字符串”oooo”,”o+?”将匹配单个”o”,而”o+”将匹配所有的”o”。\n{n}           n是一个非负整数，匹配确定的n次。\n{n,}          n是一个非负整数，至少匹配n次。\n{n,m}         m和n均为非负整数，其中n<=m，最少匹配n次且最多匹配m次。\n.             匹配除”\\n”之外的任何单个字符。要匹配包括”\\n”在内的任何字符，请使用像”[.\\n]”的模式\n(pattern)     匹配pattern并获取这一匹配。\n(?:pattern)   匹配pattern但不获取匹配结果。这在使用“或”字符(|)来组合一个模式的各个部分是很有用的。例如:’industry|industries’就可以用’industr(?:y|ies)’代替\n(?=pattern)   正向预查，在任何匹配pattern的字符串开始处匹配查找字符串。例如：”windows(?=95|98|nt|2000)”能匹配”windows2000”中的”windows”，但不能匹配”windows3.1”中的”windows”。\n(?!pattern)   负向预查，在任何不匹配pattern的字符串开始处匹配查找字符串。例如：”windows(?!95|98|nt|2000)”能匹配”windows3.1”中的”windows”，但不能匹配”windows2000”中的”windows”。\nx|y           匹配x或y。\n[xyz]         字符集合，匹配所包含的任何一个字符。\n[^xyz]        负值字符集合，匹配未包含的任意字符。\n[a-z]         字符范围，匹配指定范围内的任意字符。\n[^a-z]        负值字符范围，匹配任何不在指定范围内的任意字符。\n\\b            匹配一个单词边界，也就是单词和空格间的位置。\n\\b            匹配非单词边界。\n\\cx           匹配由x指明的控制字符。x的值必须为a-z或a-z之间\n\\d            匹配一个数字字符。等价于[0-9]\n\\d            匹配一个非数字字符。等价于[^0-9]\n\\f            匹配一个换页符。等价于\\x0c和\\cl\n\\n            匹配一个换行符。等价于\\x0a和\\cj\n\\r            匹配一个回车符。等价于\\x0d和\\cm\n\\s            匹配任何空白字符，包括空格、制表符、换页符等。\n\\s            匹配任何非空白符。\n\\t            匹配一个制表符\n\\w            匹配包括下划线的任何单词字符。等价于[a-za-z0-9_]\n\\w            匹配任何非单词字符。\n\\xn           匹配n，其中n为十六进制转义值。例如”\\x41”匹配”a”。\n\\num          匹配num，其中num是一个正整数。对所获取的匹配的引用。例如：”(.)\\1”',charsets:{cjk:!0}},{title:"Nginx网站服务",frontmatter:{},regularPath:"/Nginx/03_LNMP%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/1.Nginx%E7%BD%91%E7%AB%99%E6%9C%8D%E5%8A%A1.html",relativePath:"Nginx/03_LNMP环境部署/1.Nginx网站服务.md",key:"v-79a75635",path:"/nginx/03_lnmphuan-jing-bu-shu/1.nginxwang-zhan-fu-wu.html",headers:[{level:2,title:"1. 安装Nginx",slug:"_1-安装nginx",normalizedTitle:"1. 安装nginx",charIndex:45},{level:2,title:"2. 调整配置文件",slug:"_2-调整配置文件",normalizedTitle:"2. 调整配置文件",charIndex:76},{level:3,title:"2.1 全局配置",slug:"_2-1-全局配置",normalizedTitle:"2.1 全局配置",charIndex:215},{level:3,title:"2.2 I/O事件配置",slug:"_2-2-i-o事件配置",normalizedTitle:"2.2 i/o事件配置",charIndex:549},{level:3,title:"2.3 HTTP配置",slug:"_2-3-http配置",normalizedTitle:"2.3 http配置",charIndex:875},{level:2,title:"3. 访问状态统计",slug:"_3-访问状态统计",normalizedTitle:"3. 访问状态统计",charIndex:1986},{level:2,title:"4. Nginx访问控制",slug:"_4-nginx访问控制",normalizedTitle:"4. nginx访问控制",charIndex:2954},{level:3,title:"4.1 基于授权的访问控制",slug:"_4-1-基于授权的访问控制",normalizedTitle:"4.1 基于授权的访问控制",charIndex:2971},{level:3,title:"4.2 基于客户端的访问控制",slug:"_4-2-基于客户端的访问控制",normalizedTitle:"4.2 基于客户端的访问控制",charIndex:4053},{level:2,title:"5. 虚拟主机",slug:"_5-虚拟主机",normalizedTitle:"5. 虚拟主机",charIndex:4689},{level:3,title:"5.1 基于域名的虚拟主机 (使用的最多)",slug:"_5-1-基于域名的虚拟主机-使用的最多",normalizedTitle:"5.1 基于域名的虚拟主机 (使用的最多)",charIndex:4920},{level:3,title:"5.2 基于ip的虚拟主机",slug:"_5-2-基于ip的虚拟主机",normalizedTitle:"5.2 基于ip的虚拟主机",charIndex:5689},{level:3,title:"5.3 基于端口的虚拟主机",slug:"_5-3-基于端口的虚拟主机",normalizedTitle:"5.3 基于端口的虚拟主机",charIndex:5989}],headersStr:"1. 安装Nginx 2. 调整配置文件 2.1 全局配置 2.2 I/O事件配置 2.3 HTTP配置 3. 访问状态统计 4. Nginx访问控制 4.1 基于授权的访问控制 4.2 基于客户端的访问控制 5. 虚拟主机 5.1 基于域名的虚拟主机 (使用的最多) 5.2 基于ip的虚拟主机 5.3 基于端口的虚拟主机",content:'# Nginx网站服务\n\n本章节主要目的是配置Nginx成为一个网站server\n\n\n# 1. 安装Nginx\n\nyum安装或者编译安装均可以\n\n\n# 2. 调整配置文件\n\n在Nginx服务器的主配置文件/usr/local/nginx/conf/nginx.conf中，包括全局配置、I/O事件配置和HTTP配置这三大块内容，配置语句的格式为"指令 值；" (末尾以分号表示结束)，以 " # " 开始的部分表示注释。\n\n\n# 2.1 全局配置\n\n由各种配置语句组成，不使用特定的界定标记。全局配置部分包括Nginx服务的运行用户、工作进程数、错误日志、PID存放位置等基本设置。\n\nuser nginx nginx;\t     \t# 运行用户和组\nworker_processes auto;\t \t# 工作进程数量\nworker_cpu_affinity auto;\t# 工作进程自动绑定到特定CPU\nworker_rlimit_nofile 65535; # 工作进程打开的最大文件数\n\nerror_log  /var/log/nginx/error.log warn;\t# 错误日志位置\npid        /var/run/nginx.pid;\t\t\t   # PID文件位置\n\n\n\n# 2.2 I/O事件配置\n\n使用"events { }"界定标记，用来指定Nginx进程的I/O响应模型、每个进程的连接数等设置。对于2.6及以上版本的内核,建议使用epoll模型以提高性能；每个进程的连接数应根据实际需要来定，一般在1000以下(默认为1024)。\n\nevents {\n    use epoll;\t\t\t\t\t#使用epoll模型\n    worker_connections  8192;\t #每进程处理8192个连接（默认为1024）\n}\n\n\n若工作进程数为4，每个进程处理8192个连接，则允许Nginx正常提供服务的连接数已超过3万个(8192*4=32768)，当然具体还要看服务器硬件、网络带宽等物理条件的性能表现。\n\n\n# 2.3 HTTP配置\n\n使用"http { }"界定标记，包括访问日志、HTTP端口、网页目录、默认字符集、连接保持，以及后面要讲到的虚拟Web主机、PHP解析等一系列设置， 其中大部分配置语句都包含在子界定标记"server { }"内。\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n                      \'$status $body_bytes_sent "$http_referer" \'\n                      \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    access_log  /var/log/nginx/access.log  main;\t# 访问日志位置\n\n    sendfile        on;\t\t\t# 静态服务器时，开启大大提升性能\n    #tcp_nopush     on;\n\n\t#keepalive_timeout  0;\n    keepalive_timeout  65;\t\t# 连接保持超时事件\n\n    #gzip  on;\n\n\tserver {\n\t\tlisten\t\t80;\t\t# 侦听地址\n\t\tserver_name www.shengzhe.com;\t# 网站域名\n\t\t\n\t\tcharset utf-8;\t\t# 网页的默认字符集\n\t\t\n\t\tlocation / {\t\t#根目录配置\n\t\t\troot\thtml;\t#根目录位置\n\t\t\tindex\tindex.html index.html;\t# 默认首页\n\t\t}\n        \n        error_page\t500 502 503 504\t/50x.html;\t# 内部错误的反馈页面\n        location = /50x.html {\t#错误页面的配置\n            root html;\n        }\n\t}\n}\n\n\n上述配置中，listen语句允许同时限定IP地址，采用"IP地址：端口形式；root 语句用来设置特定访问位置(如"location/"表示根目录)的网页文档路径，默认为Nginx安装目录下的html/子目录，根据需要可改为/var/ww/html等其他路径。\n\n\n# 3. 访问状态统计\n\nNginx内置了HTTP_ STUB_ STATUS状态统计模块，用来反馈当前的Web访问情况，配置编译参数时可添加 --with-http_stub_ status_module 来启用此模块支持，可以使用命令 $ nginx /usr/local/nginx/sbin/nginx -V查看已安装的Nginx是否包含HTTP STUB _STATUS模块( 或者使用命令$ nginx -V 查看已安装的模块)。\n\n要使用Nginx的状态统计功能，除了启用内建模块以外，还需要修改nginx.conf配置文件，指定访问位置并添加stub_ status配置代码。\n\n（yum安装配置文件在/etc/nginx/conf.d目录下）\n\nserver {\n    listen       80;\n    server_name  localhost;\n\n    #charset koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    location /status {\t#访问位置为/status\n        stub_status;\t#打开状态统计功能\n        access_log off;  #关闭此位置的日志记录\n    }\n\n\n新的配置生效以后，在浏览器中访问Nginx服务器的/status网站位置，可以看到当前的状态统计信息：\n\n\n\n\n# 4. Nginx访问控制\n\n\n# 4.1 基于授权的访问控制\n\nNginx可以实现基于用户授权的访问控制，当客户端想要访问相应网站或者目录时，要求用户输入用户名和密码才能正常访问，配置步骤如下：\n\n 1. 生成用户密码认证文件。\n 2. 修改配置文件相对应目录，添加认证配置项。\n 3. 启动服务，访问测试。\n\n * 使用htpasswd生成用户认证文件，如果没有该命令，可使用yum安装httpd-tools软件包。\n   \n   $ yum install httpd-tools -y\n   $ htpasswd -c passwd.db test\n   New password: \n   Re-type new password: \n   Adding password for user test\n   $ cat passwd.db\n   test:$apr1$sgQpKECK$MVHuob9Qgj53nK6RNXoaf.\n   \n\n * 修改密码文件的权限为400，将所有者改为www，设置nginx的运行用户能够读取。\n   \n    $ chmod 400 passwd.db \n    $ chown www passwd.db \n    $ ls -l passwd.db \n   -r--------. 1 www root 43 Apr 14 08:34 passwd.db\n   \n\n * 修改主配置文件nginx.conf，添加相应认证配置项。\n   \n   location /status {\n           stub_status;\n           access_log off;\n           auth_basic "admin";\n           auth_basic_user_file /etc/nginx/conf.d/passwd.db;\n       }\n   \n\n * 检查语法，重启服务。\n   \n   $ nginx -t\n   nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\n   nginx: configuration file /etc/nginx/nginx.conf test is successful\n   $ systemctl restart nginx\n   \n\n * 用浏览器访问网址，检验控制效果，如图所示：\n   \n   \n   \n   需要输入用户名和密码进行访问，验证通过才能访问到页面。\n\n\n# 4.2 基于客户端的访问控制\n\n基于客户端的访问控制是通过客户端IP地址，决定是否允许对页面访问。Nginx基于客户端的访问控制规则如下：\n\n 1. denyIP/IP段：拒绝某个IP或IP段的客户端访问。\n 2. allowIP/IP段：允许某个IP或IP段的客户端访问。\n 3. 规则从上往下执行，如匹配则停止，不再往下匹配。\n\n * 修改主配置文件nginx.conf，添加相应配置项\n   \n   location = /basic_status {\n           stub_status;\n           deny 192.168.57.1;\t\t    #拒绝这个地址\n           allow 192.168.87.0/24;\t\t#允许这个网段\n           deny all;\t\t\t\t   #拒绝所有其他地址\n       }\n   \n\n * 重启服务\n   \n   $ nginx -t\n   nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\n   nginx: configuration file /etc/nginx/nginx.conf test is successful\n   $ systemctl restart nginx\n   \n\n * 使用 192.168.57.1地址访问，不能访问，其他地址可以\n   \n   \n\n\n# 5. 虚拟主机\n\n利用虚拟主机，不用为每个要运行的网站提供-台单独的Nginx服务器或单独运行一组Nginx进程，虚拟主机提供了在同一台服务器，同一组Nginx进程上运行多个网站的功能。Nginx可以配置多种类型的虚拟主机，分别是基于IP的虚拟主机、基于域名的虚拟主机、基于端口的虚拟主机。\n\n使用Nginx搭建虚拟主机服务器时，每个虚拟Web站点拥有独立的"server{ }"配置段，各自监听的IP地址、端口号可以单独指定，当然网站名称也是不同的。\n\n\n# 5.1 基于域名的虚拟主机 (使用的最多)\n\n配置文件案例：\n\nserver {\t\t\t# 加入 www.bt.com\n    listen 80;\n    server_name www.bt.com;\t\t# 监听域名\n    charset utf-8;\n    access_log logs/www.bt.access.log;\t# 日志文件\n    location / {\n        root /var/www/html/btcom;\t# www.bt.com 的工作目录\n        index index.html index.htm;\n    }\n\terror_page 500 502 503 504 /50x.html;\n\tlocation = 50x.html {\n\t\troot html;\n\t}\n}\nserver {\t\t\t# 加入 www.test.com 对应的站点\n    listen 80;\n    server_name www.test.com;\t\t# 监听域名\n    charset utf-8;\n    access_log logs/www.test.access.log;\t# 日志文件\n    location / {\n        root /var/www/html/testcom;\t# www.test.com 的工作目录\n        index index.html index.htm;\n    }\n\terror_page 500 502 503 504 /50x.html;\n\tlocation = 50x.html {\n\t\troot html;\n\t}\n}\n\n\n * 首先建立2个网站的根目录\n * 修改配置文件如上\n * 客户端使用域名访问验证即可\n\n\n# 5.2 基于ip的虚拟主机\n\n配置文件案例：\n\nserver {\n\tlisten 192.168.9.158:80;\t# 监听 192.168.9.158\n\tserver_name 192.168.9.158:80;\n\t................ # 省略内容\n}\nserver {\n\tlisten 192.168.9.110:80;\t# 监听 192.168.9.110\n\tserver_name 192.168.9.110:80;\n\t................ # 省略内容\n}\n\n\n * 首先给服务器配置2个不同的IP地址\n * 修改配置文件如上\n * 客户端访问测试即可\n\n\n# 5.3 基于端口的虚拟主机\n\n配置文件案例：\n\nserver {\n\tlisten 192.168.9.158:6666;\t# 监听 6666 端口\n\tserver_name 192.168.9.158:6666;\t# 域名也可\n\t................ # 省略内容\n}\nserver {\n\tlisten 192.168.9.158:8888;\t# 监听 8888 端口\n\tserver_name 192.168.9.158:8888;\t# 域名也可\n\t................ # 省略内容\n}\n\n\n * 修改配置文件\n * 防火墙放行以上端口\n * 客户端使用不同的端口进行测试即可',normalizedContent:'# nginx网站服务\n\n本章节主要目的是配置nginx成为一个网站server\n\n\n# 1. 安装nginx\n\nyum安装或者编译安装均可以\n\n\n# 2. 调整配置文件\n\n在nginx服务器的主配置文件/usr/local/nginx/conf/nginx.conf中，包括全局配置、i/o事件配置和http配置这三大块内容，配置语句的格式为"指令 值；" (末尾以分号表示结束)，以 " # " 开始的部分表示注释。\n\n\n# 2.1 全局配置\n\n由各种配置语句组成，不使用特定的界定标记。全局配置部分包括nginx服务的运行用户、工作进程数、错误日志、pid存放位置等基本设置。\n\nuser nginx nginx;\t     \t# 运行用户和组\nworker_processes auto;\t \t# 工作进程数量\nworker_cpu_affinity auto;\t# 工作进程自动绑定到特定cpu\nworker_rlimit_nofile 65535; # 工作进程打开的最大文件数\n\nerror_log  /var/log/nginx/error.log warn;\t# 错误日志位置\npid        /var/run/nginx.pid;\t\t\t   # pid文件位置\n\n\n\n# 2.2 i/o事件配置\n\n使用"events { }"界定标记，用来指定nginx进程的i/o响应模型、每个进程的连接数等设置。对于2.6及以上版本的内核,建议使用epoll模型以提高性能；每个进程的连接数应根据实际需要来定，一般在1000以下(默认为1024)。\n\nevents {\n    use epoll;\t\t\t\t\t#使用epoll模型\n    worker_connections  8192;\t #每进程处理8192个连接（默认为1024）\n}\n\n\n若工作进程数为4，每个进程处理8192个连接，则允许nginx正常提供服务的连接数已超过3万个(8192*4=32768)，当然具体还要看服务器硬件、网络带宽等物理条件的性能表现。\n\n\n# 2.3 http配置\n\n使用"http { }"界定标记，包括访问日志、http端口、网页目录、默认字符集、连接保持，以及后面要讲到的虚拟web主机、php解析等一系列设置， 其中大部分配置语句都包含在子界定标记"server { }"内。\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n                      \'$status $body_bytes_sent "$http_referer" \'\n                      \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    access_log  /var/log/nginx/access.log  main;\t# 访问日志位置\n\n    sendfile        on;\t\t\t# 静态服务器时，开启大大提升性能\n    #tcp_nopush     on;\n\n\t#keepalive_timeout  0;\n    keepalive_timeout  65;\t\t# 连接保持超时事件\n\n    #gzip  on;\n\n\tserver {\n\t\tlisten\t\t80;\t\t# 侦听地址\n\t\tserver_name www.shengzhe.com;\t# 网站域名\n\t\t\n\t\tcharset utf-8;\t\t# 网页的默认字符集\n\t\t\n\t\tlocation / {\t\t#根目录配置\n\t\t\troot\thtml;\t#根目录位置\n\t\t\tindex\tindex.html index.html;\t# 默认首页\n\t\t}\n        \n        error_page\t500 502 503 504\t/50x.html;\t# 内部错误的反馈页面\n        location = /50x.html {\t#错误页面的配置\n            root html;\n        }\n\t}\n}\n\n\n上述配置中，listen语句允许同时限定ip地址，采用"ip地址：端口形式；root 语句用来设置特定访问位置(如"location/"表示根目录)的网页文档路径，默认为nginx安装目录下的html/子目录，根据需要可改为/var/ww/html等其他路径。\n\n\n# 3. 访问状态统计\n\nnginx内置了http_ stub_ status状态统计模块，用来反馈当前的web访问情况，配置编译参数时可添加 --with-http_stub_ status_module 来启用此模块支持，可以使用命令 $ nginx /usr/local/nginx/sbin/nginx -v查看已安装的nginx是否包含http stub _status模块( 或者使用命令$ nginx -v 查看已安装的模块)。\n\n要使用nginx的状态统计功能，除了启用内建模块以外，还需要修改nginx.conf配置文件，指定访问位置并添加stub_ status配置代码。\n\n（yum安装配置文件在/etc/nginx/conf.d目录下）\n\nserver {\n    listen       80;\n    server_name  localhost;\n\n    #charset koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    location /status {\t#访问位置为/status\n        stub_status;\t#打开状态统计功能\n        access_log off;  #关闭此位置的日志记录\n    }\n\n\n新的配置生效以后，在浏览器中访问nginx服务器的/status网站位置，可以看到当前的状态统计信息：\n\n\n\n\n# 4. nginx访问控制\n\n\n# 4.1 基于授权的访问控制\n\nnginx可以实现基于用户授权的访问控制，当客户端想要访问相应网站或者目录时，要求用户输入用户名和密码才能正常访问，配置步骤如下：\n\n 1. 生成用户密码认证文件。\n 2. 修改配置文件相对应目录，添加认证配置项。\n 3. 启动服务，访问测试。\n\n * 使用htpasswd生成用户认证文件，如果没有该命令，可使用yum安装httpd-tools软件包。\n   \n   $ yum install httpd-tools -y\n   $ htpasswd -c passwd.db test\n   new password: \n   re-type new password: \n   adding password for user test\n   $ cat passwd.db\n   test:$apr1$sgqpkeck$mvhuob9qgj53nk6rnxoaf.\n   \n\n * 修改密码文件的权限为400，将所有者改为www，设置nginx的运行用户能够读取。\n   \n    $ chmod 400 passwd.db \n    $ chown www passwd.db \n    $ ls -l passwd.db \n   -r--------. 1 www root 43 apr 14 08:34 passwd.db\n   \n\n * 修改主配置文件nginx.conf，添加相应认证配置项。\n   \n   location /status {\n           stub_status;\n           access_log off;\n           auth_basic "admin";\n           auth_basic_user_file /etc/nginx/conf.d/passwd.db;\n       }\n   \n\n * 检查语法，重启服务。\n   \n   $ nginx -t\n   nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\n   nginx: configuration file /etc/nginx/nginx.conf test is successful\n   $ systemctl restart nginx\n   \n\n * 用浏览器访问网址，检验控制效果，如图所示：\n   \n   \n   \n   需要输入用户名和密码进行访问，验证通过才能访问到页面。\n\n\n# 4.2 基于客户端的访问控制\n\n基于客户端的访问控制是通过客户端ip地址，决定是否允许对页面访问。nginx基于客户端的访问控制规则如下：\n\n 1. denyip/ip段：拒绝某个ip或ip段的客户端访问。\n 2. allowip/ip段：允许某个ip或ip段的客户端访问。\n 3. 规则从上往下执行，如匹配则停止，不再往下匹配。\n\n * 修改主配置文件nginx.conf，添加相应配置项\n   \n   location = /basic_status {\n           stub_status;\n           deny 192.168.57.1;\t\t    #拒绝这个地址\n           allow 192.168.87.0/24;\t\t#允许这个网段\n           deny all;\t\t\t\t   #拒绝所有其他地址\n       }\n   \n\n * 重启服务\n   \n   $ nginx -t\n   nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\n   nginx: configuration file /etc/nginx/nginx.conf test is successful\n   $ systemctl restart nginx\n   \n\n * 使用 192.168.57.1地址访问，不能访问，其他地址可以\n   \n   \n\n\n# 5. 虚拟主机\n\n利用虚拟主机，不用为每个要运行的网站提供-台单独的nginx服务器或单独运行一组nginx进程，虚拟主机提供了在同一台服务器，同一组nginx进程上运行多个网站的功能。nginx可以配置多种类型的虚拟主机，分别是基于ip的虚拟主机、基于域名的虚拟主机、基于端口的虚拟主机。\n\n使用nginx搭建虚拟主机服务器时，每个虚拟web站点拥有独立的"server{ }"配置段，各自监听的ip地址、端口号可以单独指定，当然网站名称也是不同的。\n\n\n# 5.1 基于域名的虚拟主机 (使用的最多)\n\n配置文件案例：\n\nserver {\t\t\t# 加入 www.bt.com\n    listen 80;\n    server_name www.bt.com;\t\t# 监听域名\n    charset utf-8;\n    access_log logs/www.bt.access.log;\t# 日志文件\n    location / {\n        root /var/www/html/btcom;\t# www.bt.com 的工作目录\n        index index.html index.htm;\n    }\n\terror_page 500 502 503 504 /50x.html;\n\tlocation = 50x.html {\n\t\troot html;\n\t}\n}\nserver {\t\t\t# 加入 www.test.com 对应的站点\n    listen 80;\n    server_name www.test.com;\t\t# 监听域名\n    charset utf-8;\n    access_log logs/www.test.access.log;\t# 日志文件\n    location / {\n        root /var/www/html/testcom;\t# www.test.com 的工作目录\n        index index.html index.htm;\n    }\n\terror_page 500 502 503 504 /50x.html;\n\tlocation = 50x.html {\n\t\troot html;\n\t}\n}\n\n\n * 首先建立2个网站的根目录\n * 修改配置文件如上\n * 客户端使用域名访问验证即可\n\n\n# 5.2 基于ip的虚拟主机\n\n配置文件案例：\n\nserver {\n\tlisten 192.168.9.158:80;\t# 监听 192.168.9.158\n\tserver_name 192.168.9.158:80;\n\t................ # 省略内容\n}\nserver {\n\tlisten 192.168.9.110:80;\t# 监听 192.168.9.110\n\tserver_name 192.168.9.110:80;\n\t................ # 省略内容\n}\n\n\n * 首先给服务器配置2个不同的ip地址\n * 修改配置文件如上\n * 客户端访问测试即可\n\n\n# 5.3 基于端口的虚拟主机\n\n配置文件案例：\n\nserver {\n\tlisten 192.168.9.158:6666;\t# 监听 6666 端口\n\tserver_name 192.168.9.158:6666;\t# 域名也可\n\t................ # 省略内容\n}\nserver {\n\tlisten 192.168.9.158:8888;\t# 监听 8888 端口\n\tserver_name 192.168.9.158:8888;\t# 域名也可\n\t................ # 省略内容\n}\n\n\n * 修改配置文件\n * 防火墙放行以上端口\n * 客户端使用不同的端口进行测试即可',charsets:{cjk:!0}},{title:"LNMP环境部署",frontmatter:{},regularPath:"/Nginx/03_LNMP%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/2.LNMP%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2.html",relativePath:"Nginx/03_LNMP环境部署/2.LNMP环境部署.md",key:"v-fcb7d568",path:"/nginx/03_lnmphuan-jing-bu-shu/2.lnmphuan-jing-bu-shu.html",headers:[{level:2,title:"1. 安装操作系统",slug:"_1-安装操作系统",normalizedTitle:"1. 安装操作系统",charIndex:177},{level:2,title:"2.系统初始化配置",slug:"_2-系统初始化配置",normalizedTitle:"2.系统初始化配置",charIndex:414},{level:2,title:"3. 安装配置Nginx网站服务器",slug:"_3-安装配置nginx网站服务器",normalizedTitle:"3. 安装配置nginx网站服务器",charIndex:1344},{level:3,title:"3.1 安装nginx服务",slug:"_3-1-安装nginx服务",normalizedTitle:"3.1 安装nginx服务",charIndex:1366},{level:3,title:"3.2 调整nginx配置文件",slug:"_3-2-调整nginx配置文件",normalizedTitle:"3.2 调整nginx配置文件",charIndex:3137},{level:2,title:"4.安装配置MySQL数据库服务器",slug:"_4-安装配置mysql数据库服务器",normalizedTitle:"4.安装配置mysql数据库服务器",charIndex:6650},{level:3,title:"4.1 安装mysql源",slug:"_4-1-安装mysql源",normalizedTitle:"4.1 安装mysql源",charIndex:6921},{level:3,title:"4.2 安装mysql数据库",slug:"_4-2-安装mysql数据库",normalizedTitle:"4.2 安装mysql数据库",charIndex:7130},{level:3,title:"4.3 MySQL数据库初始化(从MySQL 5.7开始)",slug:"_4-3-mysql数据库初始化-从mysql-5-7开始",normalizedTitle:"4.3 mysql数据库初始化(从mysql 5.7开始)",charIndex:8377},{level:3,title:"4.4 配置开机启动mysql服务",slug:"_4-4-配置开机启动mysql服务",normalizedTitle:"4.4 配置开机启动mysql服务",charIndex:9036},{level:2,title:"5. 安装配置PHP环境",slug:"_5-安装配置php环境",normalizedTitle:"5. 安装配置php环境",charIndex:9781},{level:3,title:"5.1 安装php7的YUM源",slug:"_5-1-安装php7的yum源",normalizedTitle:"5.1 安装php7的yum源",charIndex:9798},{level:3,title:"5.2 安装PHP7.2",slug:"_5-2-安装php7-2",normalizedTitle:"5.2 安装php7.2",charIndex:9970},{level:3,title:"5.3 安装php-fpm并启动",slug:"_5-3-安装php-fpm并启动",normalizedTitle:"5.3 安装php-fpm并启动",charIndex:10114},{level:3,title:"5.4 调整php-fpm 配置文件",slug:"_5-4-调整php-fpm-配置文件",normalizedTitle:"5.4 调整php-fpm 配置文件",charIndex:11001},{level:3,title:"5.5 调整nginx配置文件",slug:"_5-5-调整nginx配置文件",normalizedTitle:"5.5 调整nginx配置文件",charIndex:11088},{level:3,title:"5.6 创建MySQL数据库管理员",slug:"_5-6-创建mysql数据库管理员",normalizedTitle:"5.6 创建mysql数据库管理员",charIndex:11762},{level:2,title:"6.LNMP环境测试",slug:"_6-lnmp环境测试",normalizedTitle:"6.lnmp环境测试",charIndex:12023},{level:3,title:"6.1 测试LNMP环境",slug:"_6-1-测试lnmp环境",normalizedTitle:"6.1 测试lnmp环境",charIndex:12038},{level:3,title:"6.2 测试是否可以连接MySQL数据库文件",slug:"_6-2-测试是否可以连接mysql数据库文件",normalizedTitle:"6.2 测试是否可以连接mysql数据库文件",charIndex:12138},{level:2,title:"7. 部署开源论坛Discuz",slug:"_7-部署开源论坛discuz",normalizedTitle:"7. 部署开源论坛discuz",charIndex:12388},{level:3,title:"7.1 下载Discuz论坛文件",slug:"_7-1-下载discuz论坛文件",normalizedTitle:"7.1 下载discuz论坛文件",charIndex:12408},{level:3,title:"7.2 建立Discuz论坛所用数据库",slug:"_7-2-建立discuz论坛所用数据库",normalizedTitle:"7.2 建立discuz论坛所用数据库",charIndex:12744},{level:3,title:"7.3 安装Discuz论坛",slug:"_7-3-安装discuz论坛",normalizedTitle:"7.3 安装discuz论坛",charIndex:13354},{level:3,title:"7.4 可以使用论坛管理员admin用户做论坛管理",slug:"_7-4-可以使用论坛管理员admin用户做论坛管理",normalizedTitle:"7.4 可以使用论坛管理员admin用户做论坛管理",charIndex:13752}],headersStr:"1. 安装操作系统 2.系统初始化配置 3. 安装配置Nginx网站服务器 3.1 安装nginx服务 3.2 调整nginx配置文件 4.安装配置MySQL数据库服务器 4.1 安装mysql源 4.2 安装mysql数据库 4.3 MySQL数据库初始化(从MySQL 5.7开始) 4.4 配置开机启动mysql服务 5. 安装配置PHP环境 5.1 安装php7的YUM源 5.2 安装PHP7.2 5.3 安装php-fpm并启动 5.4 调整php-fpm 配置文件 5.5 调整nginx配置文件 5.6 创建MySQL数据库管理员 6.LNMP环境测试 6.1 测试LNMP环境 6.2 测试是否可以连接MySQL数据库文件 7. 部署开源论坛Discuz 7.1 下载Discuz论坛文件 7.2 建立Discuz论坛所用数据库 7.3 安装Discuz论坛 7.4 可以使用论坛管理员admin用户做论坛管理",content:"# LNMP环境部署\n\nLNMP是指一组通常一 起使用来运行动态网站或者服务器的自由软件名称首字母缩写。L指Linux，N指Nginx，M一般指MySQL，也可以指MariaDB, P一般指PHP，也可以指Perl或Python。 可以在独立主机上轻松的安装LNMP生产环境。本案例主要介绍LNMP框架安装方法以及部署Discuz社区论坛应用。\n\n\n# 1. 安装操作系统\n\n * 使用VMware workstation新建虚拟机\n\n * 安装CentOS7.5系统，最小化安装，记得要选中开发工具(development tools)\n\n * 安装bash-completion以便可以命令补全\n   \n   $ yum install bash-completion -y\n   \n\n * 安装vim等基础包\n   \n   $ yum install vim wget net-tools curl -y\n   \n\n\n# 2.系统初始化配置\n\n * Linux 系统资源调配\n   \n   $ cat /etc/security/limits.conf \n   *               soft    nofile            65535\n   *               soft    nofile            65535\n   \n\n * 修改主机名字\n   \n   $ hostnamectl set-hostname www.lnmp.com\n   \n\n * 配置网络。设置固定IP地址，网关及DNS服务器地址\n   \n   $ nmcli connection modify ens33 ipv4.addresses 192.168.154.137/24 ipv4.gateway 192.168.154.2 ipv4.dns 192.168.154.2 autoconnect yes\n   $ nmcli connection up ens33\n   Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/5)\n   \n\n * 关闭Selinux\n   \n   $ vi /etc/selinux/config\n   SELINUX=disabled\n   \n\n * yum源的配置，可以根据业务需求来安装epel、 nginx、 remi源，且修改配置参数。\n   \n   $ yum install epel-release -y\n   $ rpm -ivh http://rpms.remirepo.net/enterprise/remi-release-7.rpm\n   $ vi remi.repo\n   [epel]\n   enabled=1\n   \n\n * DNS 解析域名设置\n   \n   $ cat /etc/resolve.conf \n   nameserver 192.168.154.2\n   nameserver 202.106.0.20\n   \n\n\n# 3. 安装配置Nginx网站服务器\n\n\n# 3.1 安装nginx服务\n\n * 设置nginx yum源\n   \n   $ yum install yum-utils -y\n   $ cat /etc/yum.repos.d/nginx.repo \n   [nginx-stable]\n   name=nginx stable repo\n   baseurl=http://nginx.org/packages/centos/$releasever/$basearch/\n   gpgcheck=1\n   enabled=1\n   gpgkey=https://nginx.org/keys/nginx_signing.key\n   \n   [nginx-mainline]\n   name=nginx mainline repo\n   baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\n   gpgcheck=1\n   enabled=0\n   gpgkey=https://nginx.org/keys/nginx_signing.key\n   \n\n * 安装nginx服务，会安装1.16.0版本\n   \n   $ yum install nginx -y\n   \n\n * 设置nginx开机启动并开启nginx服务\n   \n   $ systemctl enable nginx\n   Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.\n   $ systemctl start nginx\n   $ systemctl status nginx\n   ● nginx.service - nginx - high performance web server\n      Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)\n      Active: active (running) since Tue 2020-04-14 12:01:46 EDT; 6s ago\n        Docs: http://nginx.org/en/docs/\n     Process: 20355 ExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf (code=exited, status=0/SUCCESS)\n    Main PID: 20356 (nginx)\n      CGroup: /system.slice/nginx.service\n              ├─20356 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf\n              └─20357 nginx: worker process\n   \n   Apr 14 12:01:46 www.lnmp.com systemd[1]: Starting nginx - high performance web server...\n   Apr 14 12:01:46 www.lnmp.com systemd[1]: Started nginx - high performance web server.\n   \n\n * 防火墙放行http服务\n   \n   $ firewall-cmd --add-service=http --permanent\n   success\n   $ firewall-cmd --add-service=http\n   success\n   \n\n * 测试是够可以访问nginx\n   \n   $ curl 192.168.154.137\n   \n   \n   或者找个客户端，使用浏览器访问服务器地址\n\n\n# 3.2 调整nginx配置文件\n\n(文件夹有default.conf和nginx.conf)\n\n$ vim /etc/nginx/nginx.conf\nuser  nginx nginx;\nworker_processes  4;\nworker_cpu_affinity 00000001 00000010 00000100 00001000;\nworker_rlimit_nofile 65535;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    use epoll;\n    worker_connections  10240;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    server_names_hash_bucket_size 128;\n    client_header_buffer_size 2k;\n    large_client_header_buffers 4 4k;\n    client_max_body_size 8m;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    tcp_nopush     on;\n    tcp_nodelay on;\n    keepalive_timeout  65;\n    fastcgi_cache_path /etc/nginx/fastcgi_cache levels=1:2 keys_zone=TEST:10m inactive=5m;\n    fastcgi_cache_key http://$host$request_uri;\n    fastcgi_connect_timeout 300;\n    fastcgi_send_timeout 300;\n    fastcgi_read_timeout 300;\n    fastcgi_buffer_size 4k;\n    fastcgi_buffers 8 4k;\n    fastcgi_busy_buffers_size 8k;\n    fastcgi_temp_file_write_size 8k;\n    fastcgi_cache TEST;\n    fastcgi_cache_valid 200 302 1h;\n    fastcgi_cache_valid 301 1d;\n    fastcgi_cache_valid any 1m;\n    fastcgi_cache_min_uses 1;\n    fastcgi_cache_use_stale error timeout invalid_header http_500;\n    open_file_cache max=204800 inactive=20s;\n    open_file_cache_min_uses 1;\n    open_file_cache_valid 30s;\n\n    gzip  on;\n    gzip_min_length 1k;\n    gzip_buffers 4 16k;\n    gzip_http_version 1.0;\n    gzip_comp_level 2;\n    gzip_types text/plain application/x-javascript text/css application/xml;\n    gzip_vary on;\n\n    include /etc/nginx/conf.d/*.conf;\n}\n\n\n$ vim /etc/nginx/conf.d/default.conf\nserver {\n    listen       80;\n    server_name  www.lnmp.com;\n\n    #charset koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n    location /status\n    {\n        stub_status on;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /opt/nginx/html;\n    }\n    location ~ .*/.(gif|jpg|gpeg|png|bmp|swf|js|css)$\n    {\n        expires 30d;\n    }\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #}\n\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n\n\n * 由于更改了根目录，所以需要创建新的根目录\n   \n   $ mkdir /opt/nginx/html -p\n   $ cp /usr/share/nginx/html/* /opt/nginx/html/\n   $ ll /opt/nginx/html/\n   total 8\n   -rw-r--r--. 1 root root 494 Apr 14 12:48 50x.html\n   -rw-r--r--. 1 root root 612 Apr 14 12:48 index.html\n   \n\n * 改变了服务配置文件，所以需要重新启动服务\n   \n   $ nginx -t #检测配置文件语法是否有错误\n   $ systemctl restart nginx\n   $ systemctl status nginx\n   \n\n\n# 4.安装配置MySQL数据库服务器\n\nMySQL是目前使用最受信赖和广泛使用的开源数据库平台。全球十大最受欢迎和高流量的网站中有10个依赖于MySQL。MySQL 8.0通过提供全面的改进建立在这一势头上，旨在使创新的DBA和开发人员能够在最新一代的开发框架和硬件上创建和部署下一代Web，嵌入式，移动和云/ SaaS/ PaaS/ DBaaS应用程序平台。MySQL 8.0亮点包括：\n\n * MySQL文档存储\n * 交易数据字典\n * SQL角色\n * 默认为utf8mb4\n * 公用表表达式\n * 窗口功能\n * 以及更多\n\n\n# 4.1 安装mysql源\n\n * 下载MySQL YUM 仓库：\n   \n   $ wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm\n   \n\n * 安装MySQL YUM 仓库：\n   \n   $ rpm -Uvh mysql80-community-release-el7-3.noarch.rpm\n   \n\n\n# 4.2 安装mysql数据库\n\n * 默认安装最新GA版MySQL\n\n * 可以通过运行以下命令并检查其输出来验证是否已启用和禁用了正确的子存储库\n   \n   $ yum repolist enabled | grep mysql\n   Repository 'epel' is missing name in configuration, using id\n   Repository epel is listed more than once in the configuration\n   mysql-connectors-community/x86_64 MySQL Connectors Community                 141\n   mysql-tools-community/x86_64      MySQL Tools Community                      105\n   mysql80-community/x86_64          MySQL 8.0 Community Server                 161\n   \n\n * 安装MySQL\n   \n   $ yum remove mariadb-libs -y\n   $ yum install mysql-community-server -y\n   $ systemctl start mysqld\n   $ systemctl status mysqld\n   ● mysqld.service - MySQL Server\n      Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)\n      Active: active (running) since Tue 2020-04-14 13:18:59 EDT; 16s ago\n        Docs: man:mysqld(8)\n              http://dev.mysql.com/doc/refman/en/using-systemd.html\n    Main PID: 21009 (mysqld)\n      Status: \"Server is operational\"\n      CGroup: /system.slice/mysqld.service\n              └─21009 /usr/sbin/mysqld\n   \n   Apr 14 13:18:55 www.lnmp.com systemd[1]: Starting MySQL Server...\n   Apr 14 13:18:59 www.lnmp.com systemd[1]: Started MySQL Server.\n   \n\n\n# 4.3 MySQL数据库初始化(从MySQL 5.7开始)\n\n在服务器初始启动时，如果服务器的数据目录为空，则会发生以下情况：\n\n * 服务器已初始化。\n\n * 在数据目录中生成SSL证书和密钥文件。\n\n * 该validate_ password插件安装并启用。\n\n * 将'root'@'localhost 创建一个超级用户帐户。 设置超级用户的密码并将其存储在错误日志文件中。要显示它，请使用以下命令：\n   \n   $ grep 'temporary password' /var/log/mysqld.log\n   2020-04-14T17:18:57.123362Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: tqlbNLQ*v5j1\n   \n   \n   ○ 通过使用生成的临时密码登录并为超级用户帐户设置自定义密码，尽快更改root密码：\n   \n   $ mysql -uroot -ptqlbNLQ*v5j1\n   # 进入数据库后更改密码\n   > alter user 'root'@'localhost' identified by 'Com.123456';\n   # 注意: MySQL的validate_ password 插件默认安装。这将要求密码包含至少一个大写字母，一个小写字母，一个数字和一个特殊字符，并且密码总长度至少为8个字符。\n   \n\n\n# 4.4 配置开机启动mysql服务\n\n$ systemctl enable mysqld\n$ systemctl restart mysqld\n$ systemctl status mysqld\n● mysqld.service - MySQL Server\n   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)\n   Active: active (running) since Wed 2020-04-15 07:38:02 EDT; 6s ago\n     Docs: man:mysqld(8)\n           http://dev.mysql.com/doc/refman/en/using-systemd.html\n  Process: 21314 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS)\n Main PID: 21338 (mysqld)\n   Status: \"Server is operational\"\n   CGroup: /system.slice/mysqld.service\n           └─21338 /usr/sbin/mysqld\n\nApr 15 07:38:01 www.lnmp.com systemd[1]: Starting MySQL Server...\nApr 15 07:38:02 www.lnmp.com systemd[1]: Started MySQL Server.\n\n\n\n# 5. 安装配置PHP环境\n\n\n# 5.1 安装php7的YUM源\n\n$ rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n$ rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n\n\n\n# 5.2 安装PHP7.2\n\n$ yum install php72w php72w-cli php72w-common php72w-gd php72w-ldap php72w-mbstring php72w-mcrypt php72w-mysql php72w-pdo -y\n\n\n\n# 5.3 安装php-fpm并启动\n\n$ yum install php72w-fpm php72w-opcache -y\n$ systemctl enable php-fpm\n$ systemctl start php-fpm\n$ systemctl status php-fpm\n● php-fpm.service - The PHP FastCGI Process Manager\n   Loaded: loaded (/usr/lib/systemd/system/php-fpm.service; enabled; vendor preset: disabled)\n   Active: active (running) since Wed 2020-04-15 08:23:23 EDT; 4s ago\n Main PID: 21961 (php-fpm)\n   Status: \"Ready to handle connections\"\n   CGroup: /system.slice/php-fpm.service\n           ├─21961 php-fpm: master process (/etc/php-fpm.conf)\n           ├─21962 php-fpm: pool www\n           ├─21963 php-fpm: pool www\n           ├─21964 php-fpm: pool www\n           ├─21965 php-fpm: pool www\n           └─21966 php-fpm: pool www\n\nApr 15 08:23:23 www.lnmp.com systemd[1]: Starting The PHP FastCGI Process Manager...\nApr 15 08:23:23 www.lnmp.com systemd[1]: Started The PHP FastCGI Process Manager.\n\n\n\n# 5.4 调整php-fpm 配置文件\n\n$ vi /etc/php-fpm.d/www.conf\n[www]\nuser = nginx\ngroup = nginx\n\n\n\n# 5.5 调整nginx配置文件\n\n$ vi /etc/nginx/conf.d/default.conf \nlocation / {\n        root   /opt/nginx/html;\n        index  index.php index.html index.htm;\n     }\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    location ~ \\.php$ {\n        root           /opt/nginx/html;\n        fastcgi_pass   127.0.0.1:9000;\n        fastcgi_index  index.php;\n    #   fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n    \tfastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n        include        fastcgi_params;\n\tfastcgi_cache TEST;\n\tfastcgi_cache_valid 300 302 1h;\n\tfastcgi_cache_valid 301 1d;\n\tfastcgi_cache_valid any 1m;\n    }\n\n\n\n# 5.6 创建MySQL数据库管理员\n\n认证机制必须是mysql_native_ password；默认mysql8使用caching_sha2_ password的身份验证机制\n\n> create user 'dbadmin'@'%' identified with mysql_native_password by 'Com.123456';\n> grant all on *.* to 'dbadmin'@'%';\n> grant grant option on *.* to 'dbadmin'@'%';\n\n\n\n# 6.LNMP环境测试\n\n\n# 6.1 测试LNMP环境\n\n$ cat test.php \n<?php\nphpinfo();\n?>\n\n\n * 在客户端访问 http://192.168.154.137/test.php\n\n\n\n\n# 6.2 测试是否可以连接MySQL数据库文件\n\n$ cat mysql_test.php \n<?PHP\n    $conn=mysqli_connect(\"localhost\",\"dbadmin\",\"Com.123456\");\n    if($conn){\n        echo\"ok\";\n    }else{\n    echo\"error\";\n    }\n?>\n\n\n * 在客户端访问\n\n$ curl http://192.168.154.137/mysql_test.php\nok\n\n\n\n# 7. 部署开源论坛Discuz\n\n\n# 7.1 下载Discuz论坛文件\n\nDiscuz现在在gitee.com进行维护，地址为：http://gitee.com/ComsenzDiscuz/DiscuzX\n\n * 下载文件\n   \n   $ wget https://gitee.com/ComsenzDiscuz/DiscuzX/repository/archive/master.zip\n   \n\n * 解压并上传upload目录到网站根目录\n   \n   $ unzip master.zip \n   $ cd DiscuzX/\n   $ ls\n   readme  README.md  upload  utility\n   $ mv upload/ /opt/nginx/html/\n   \n\n\n# 7.2 建立Discuz论坛所用数据库\n\n$ mysql -uroot -pCom.123456\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n4 rows in set (0.01 sec)\n\nmysql> create database discuz;\nQuery OK, 1 row affected (0.01 sec)\n\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| discuz             |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n\n\n\n# 7.3 安装Discuz论坛\n\n * 在客户端使用浏览器打开网站地址：http://192.168.154.137/upload/install ，会显示以下安装界面：\n   \n   \n\n * 点击我同意\n   \n   \n\n * 解决所有文件权限，需要可写权限\n   \n   $ cd /opt/nginx/html/upload/\n   $ chmod -R 777 ./config/ ./data/ ./uc_client/ ./uc_server/\n   \n\n * 然后刷新界面\n   \n   \n\n * 选择全新安装，点击下一步\n   \n   \n\n * 添加安装数据库有关信息必须要按照实际情况添加。\n   \n   \n\n * 会开始安装论坛，安装完毕后就可以访问论坛了，可以把upload文件夹重命名\n   \n   $ mv upload/ discuz\n   \n\n访问论坛\n\n\n\n\n# 7.4 可以使用论坛管理员admin用户做论坛管理\n\n使用论坛管理员账号admin登录管理中心，就可以管理论坛了。",normalizedContent:"# lnmp环境部署\n\nlnmp是指一组通常一 起使用来运行动态网站或者服务器的自由软件名称首字母缩写。l指linux，n指nginx，m一般指mysql，也可以指mariadb, p一般指php，也可以指perl或python。 可以在独立主机上轻松的安装lnmp生产环境。本案例主要介绍lnmp框架安装方法以及部署discuz社区论坛应用。\n\n\n# 1. 安装操作系统\n\n * 使用vmware workstation新建虚拟机\n\n * 安装centos7.5系统，最小化安装，记得要选中开发工具(development tools)\n\n * 安装bash-completion以便可以命令补全\n   \n   $ yum install bash-completion -y\n   \n\n * 安装vim等基础包\n   \n   $ yum install vim wget net-tools curl -y\n   \n\n\n# 2.系统初始化配置\n\n * linux 系统资源调配\n   \n   $ cat /etc/security/limits.conf \n   *               soft    nofile            65535\n   *               soft    nofile            65535\n   \n\n * 修改主机名字\n   \n   $ hostnamectl set-hostname www.lnmp.com\n   \n\n * 配置网络。设置固定ip地址，网关及dns服务器地址\n   \n   $ nmcli connection modify ens33 ipv4.addresses 192.168.154.137/24 ipv4.gateway 192.168.154.2 ipv4.dns 192.168.154.2 autoconnect yes\n   $ nmcli connection up ens33\n   connection successfully activated (d-bus active path: /org/freedesktop/networkmanager/activeconnection/5)\n   \n\n * 关闭selinux\n   \n   $ vi /etc/selinux/config\n   selinux=disabled\n   \n\n * yum源的配置，可以根据业务需求来安装epel、 nginx、 remi源，且修改配置参数。\n   \n   $ yum install epel-release -y\n   $ rpm -ivh http://rpms.remirepo.net/enterprise/remi-release-7.rpm\n   $ vi remi.repo\n   [epel]\n   enabled=1\n   \n\n * dns 解析域名设置\n   \n   $ cat /etc/resolve.conf \n   nameserver 192.168.154.2\n   nameserver 202.106.0.20\n   \n\n\n# 3. 安装配置nginx网站服务器\n\n\n# 3.1 安装nginx服务\n\n * 设置nginx yum源\n   \n   $ yum install yum-utils -y\n   $ cat /etc/yum.repos.d/nginx.repo \n   [nginx-stable]\n   name=nginx stable repo\n   baseurl=http://nginx.org/packages/centos/$releasever/$basearch/\n   gpgcheck=1\n   enabled=1\n   gpgkey=https://nginx.org/keys/nginx_signing.key\n   \n   [nginx-mainline]\n   name=nginx mainline repo\n   baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\n   gpgcheck=1\n   enabled=0\n   gpgkey=https://nginx.org/keys/nginx_signing.key\n   \n\n * 安装nginx服务，会安装1.16.0版本\n   \n   $ yum install nginx -y\n   \n\n * 设置nginx开机启动并开启nginx服务\n   \n   $ systemctl enable nginx\n   created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.\n   $ systemctl start nginx\n   $ systemctl status nginx\n   ● nginx.service - nginx - high performance web server\n      loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)\n      active: active (running) since tue 2020-04-14 12:01:46 edt; 6s ago\n        docs: http://nginx.org/en/docs/\n     process: 20355 execstart=/usr/sbin/nginx -c /etc/nginx/nginx.conf (code=exited, status=0/success)\n    main pid: 20356 (nginx)\n      cgroup: /system.slice/nginx.service\n              ├─20356 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf\n              └─20357 nginx: worker process\n   \n   apr 14 12:01:46 www.lnmp.com systemd[1]: starting nginx - high performance web server...\n   apr 14 12:01:46 www.lnmp.com systemd[1]: started nginx - high performance web server.\n   \n\n * 防火墙放行http服务\n   \n   $ firewall-cmd --add-service=http --permanent\n   success\n   $ firewall-cmd --add-service=http\n   success\n   \n\n * 测试是够可以访问nginx\n   \n   $ curl 192.168.154.137\n   \n   \n   或者找个客户端，使用浏览器访问服务器地址\n\n\n# 3.2 调整nginx配置文件\n\n(文件夹有default.conf和nginx.conf)\n\n$ vim /etc/nginx/nginx.conf\nuser  nginx nginx;\nworker_processes  4;\nworker_cpu_affinity 00000001 00000010 00000100 00001000;\nworker_rlimit_nofile 65535;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    use epoll;\n    worker_connections  10240;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    server_names_hash_bucket_size 128;\n    client_header_buffer_size 2k;\n    large_client_header_buffers 4 4k;\n    client_max_body_size 8m;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    tcp_nopush     on;\n    tcp_nodelay on;\n    keepalive_timeout  65;\n    fastcgi_cache_path /etc/nginx/fastcgi_cache levels=1:2 keys_zone=test:10m inactive=5m;\n    fastcgi_cache_key http://$host$request_uri;\n    fastcgi_connect_timeout 300;\n    fastcgi_send_timeout 300;\n    fastcgi_read_timeout 300;\n    fastcgi_buffer_size 4k;\n    fastcgi_buffers 8 4k;\n    fastcgi_busy_buffers_size 8k;\n    fastcgi_temp_file_write_size 8k;\n    fastcgi_cache test;\n    fastcgi_cache_valid 200 302 1h;\n    fastcgi_cache_valid 301 1d;\n    fastcgi_cache_valid any 1m;\n    fastcgi_cache_min_uses 1;\n    fastcgi_cache_use_stale error timeout invalid_header http_500;\n    open_file_cache max=204800 inactive=20s;\n    open_file_cache_min_uses 1;\n    open_file_cache_valid 30s;\n\n    gzip  on;\n    gzip_min_length 1k;\n    gzip_buffers 4 16k;\n    gzip_http_version 1.0;\n    gzip_comp_level 2;\n    gzip_types text/plain application/x-javascript text/css application/xml;\n    gzip_vary on;\n\n    include /etc/nginx/conf.d/*.conf;\n}\n\n\n$ vim /etc/nginx/conf.d/default.conf\nserver {\n    listen       80;\n    server_name  www.lnmp.com;\n\n    #charset koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n    location /status\n    {\n        stub_status on;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /opt/nginx/html;\n    }\n    location ~ .*/.(gif|jpg|gpeg|png|bmp|swf|js|css)$\n    {\n        expires 30d;\n    }\n\n    # proxy the php scripts to apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n    # pass the php scripts to fastcgi server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  script_filename  /scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #}\n\n    # deny access to .htaccess files, if apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n\n\n * 由于更改了根目录，所以需要创建新的根目录\n   \n   $ mkdir /opt/nginx/html -p\n   $ cp /usr/share/nginx/html/* /opt/nginx/html/\n   $ ll /opt/nginx/html/\n   total 8\n   -rw-r--r--. 1 root root 494 apr 14 12:48 50x.html\n   -rw-r--r--. 1 root root 612 apr 14 12:48 index.html\n   \n\n * 改变了服务配置文件，所以需要重新启动服务\n   \n   $ nginx -t #检测配置文件语法是否有错误\n   $ systemctl restart nginx\n   $ systemctl status nginx\n   \n\n\n# 4.安装配置mysql数据库服务器\n\nmysql是目前使用最受信赖和广泛使用的开源数据库平台。全球十大最受欢迎和高流量的网站中有10个依赖于mysql。mysql 8.0通过提供全面的改进建立在这一势头上，旨在使创新的dba和开发人员能够在最新一代的开发框架和硬件上创建和部署下一代web，嵌入式，移动和云/ saas/ paas/ dbaas应用程序平台。mysql 8.0亮点包括：\n\n * mysql文档存储\n * 交易数据字典\n * sql角色\n * 默认为utf8mb4\n * 公用表表达式\n * 窗口功能\n * 以及更多\n\n\n# 4.1 安装mysql源\n\n * 下载mysql yum 仓库：\n   \n   $ wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm\n   \n\n * 安装mysql yum 仓库：\n   \n   $ rpm -uvh mysql80-community-release-el7-3.noarch.rpm\n   \n\n\n# 4.2 安装mysql数据库\n\n * 默认安装最新ga版mysql\n\n * 可以通过运行以下命令并检查其输出来验证是否已启用和禁用了正确的子存储库\n   \n   $ yum repolist enabled | grep mysql\n   repository 'epel' is missing name in configuration, using id\n   repository epel is listed more than once in the configuration\n   mysql-connectors-community/x86_64 mysql connectors community                 141\n   mysql-tools-community/x86_64      mysql tools community                      105\n   mysql80-community/x86_64          mysql 8.0 community server                 161\n   \n\n * 安装mysql\n   \n   $ yum remove mariadb-libs -y\n   $ yum install mysql-community-server -y\n   $ systemctl start mysqld\n   $ systemctl status mysqld\n   ● mysqld.service - mysql server\n      loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)\n      active: active (running) since tue 2020-04-14 13:18:59 edt; 16s ago\n        docs: man:mysqld(8)\n              http://dev.mysql.com/doc/refman/en/using-systemd.html\n    main pid: 21009 (mysqld)\n      status: \"server is operational\"\n      cgroup: /system.slice/mysqld.service\n              └─21009 /usr/sbin/mysqld\n   \n   apr 14 13:18:55 www.lnmp.com systemd[1]: starting mysql server...\n   apr 14 13:18:59 www.lnmp.com systemd[1]: started mysql server.\n   \n\n\n# 4.3 mysql数据库初始化(从mysql 5.7开始)\n\n在服务器初始启动时，如果服务器的数据目录为空，则会发生以下情况：\n\n * 服务器已初始化。\n\n * 在数据目录中生成ssl证书和密钥文件。\n\n * 该validate_ password插件安装并启用。\n\n * 将'root'@'localhost 创建一个超级用户帐户。 设置超级用户的密码并将其存储在错误日志文件中。要显示它，请使用以下命令：\n   \n   $ grep 'temporary password' /var/log/mysqld.log\n   2020-04-14t17:18:57.123362z 5 [note] [my-010454] [server] a temporary password is generated for root@localhost: tqlbnlq*v5j1\n   \n   \n   ○ 通过使用生成的临时密码登录并为超级用户帐户设置自定义密码，尽快更改root密码：\n   \n   $ mysql -uroot -ptqlbnlq*v5j1\n   # 进入数据库后更改密码\n   > alter user 'root'@'localhost' identified by 'com.123456';\n   # 注意: mysql的validate_ password 插件默认安装。这将要求密码包含至少一个大写字母，一个小写字母，一个数字和一个特殊字符，并且密码总长度至少为8个字符。\n   \n\n\n# 4.4 配置开机启动mysql服务\n\n$ systemctl enable mysqld\n$ systemctl restart mysqld\n$ systemctl status mysqld\n● mysqld.service - mysql server\n   loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)\n   active: active (running) since wed 2020-04-15 07:38:02 edt; 6s ago\n     docs: man:mysqld(8)\n           http://dev.mysql.com/doc/refman/en/using-systemd.html\n  process: 21314 execstartpre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/success)\n main pid: 21338 (mysqld)\n   status: \"server is operational\"\n   cgroup: /system.slice/mysqld.service\n           └─21338 /usr/sbin/mysqld\n\napr 15 07:38:01 www.lnmp.com systemd[1]: starting mysql server...\napr 15 07:38:02 www.lnmp.com systemd[1]: started mysql server.\n\n\n\n# 5. 安装配置php环境\n\n\n# 5.1 安装php7的yum源\n\n$ rpm -uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n$ rpm -uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n\n\n\n# 5.2 安装php7.2\n\n$ yum install php72w php72w-cli php72w-common php72w-gd php72w-ldap php72w-mbstring php72w-mcrypt php72w-mysql php72w-pdo -y\n\n\n\n# 5.3 安装php-fpm并启动\n\n$ yum install php72w-fpm php72w-opcache -y\n$ systemctl enable php-fpm\n$ systemctl start php-fpm\n$ systemctl status php-fpm\n● php-fpm.service - the php fastcgi process manager\n   loaded: loaded (/usr/lib/systemd/system/php-fpm.service; enabled; vendor preset: disabled)\n   active: active (running) since wed 2020-04-15 08:23:23 edt; 4s ago\n main pid: 21961 (php-fpm)\n   status: \"ready to handle connections\"\n   cgroup: /system.slice/php-fpm.service\n           ├─21961 php-fpm: master process (/etc/php-fpm.conf)\n           ├─21962 php-fpm: pool www\n           ├─21963 php-fpm: pool www\n           ├─21964 php-fpm: pool www\n           ├─21965 php-fpm: pool www\n           └─21966 php-fpm: pool www\n\napr 15 08:23:23 www.lnmp.com systemd[1]: starting the php fastcgi process manager...\napr 15 08:23:23 www.lnmp.com systemd[1]: started the php fastcgi process manager.\n\n\n\n# 5.4 调整php-fpm 配置文件\n\n$ vi /etc/php-fpm.d/www.conf\n[www]\nuser = nginx\ngroup = nginx\n\n\n\n# 5.5 调整nginx配置文件\n\n$ vi /etc/nginx/conf.d/default.conf \nlocation / {\n        root   /opt/nginx/html;\n        index  index.php index.html index.htm;\n     }\n    # pass the php scripts to fastcgi server listening on 127.0.0.1:9000\n    #\n    location ~ \\.php$ {\n        root           /opt/nginx/html;\n        fastcgi_pass   127.0.0.1:9000;\n        fastcgi_index  index.php;\n    #   fastcgi_param  script_filename  /scripts$fastcgi_script_name;\n    \tfastcgi_param  script_filename  $document_root$fastcgi_script_name;\n        include        fastcgi_params;\n\tfastcgi_cache test;\n\tfastcgi_cache_valid 300 302 1h;\n\tfastcgi_cache_valid 301 1d;\n\tfastcgi_cache_valid any 1m;\n    }\n\n\n\n# 5.6 创建mysql数据库管理员\n\n认证机制必须是mysql_native_ password；默认mysql8使用caching_sha2_ password的身份验证机制\n\n> create user 'dbadmin'@'%' identified with mysql_native_password by 'com.123456';\n> grant all on *.* to 'dbadmin'@'%';\n> grant grant option on *.* to 'dbadmin'@'%';\n\n\n\n# 6.lnmp环境测试\n\n\n# 6.1 测试lnmp环境\n\n$ cat test.php \n<?php\nphpinfo();\n?>\n\n\n * 在客户端访问 http://192.168.154.137/test.php\n\n\n\n\n# 6.2 测试是否可以连接mysql数据库文件\n\n$ cat mysql_test.php \n<?php\n    $conn=mysqli_connect(\"localhost\",\"dbadmin\",\"com.123456\");\n    if($conn){\n        echo\"ok\";\n    }else{\n    echo\"error\";\n    }\n?>\n\n\n * 在客户端访问\n\n$ curl http://192.168.154.137/mysql_test.php\nok\n\n\n\n# 7. 部署开源论坛discuz\n\n\n# 7.1 下载discuz论坛文件\n\ndiscuz现在在gitee.com进行维护，地址为：http://gitee.com/comsenzdiscuz/discuzx\n\n * 下载文件\n   \n   $ wget https://gitee.com/comsenzdiscuz/discuzx/repository/archive/master.zip\n   \n\n * 解压并上传upload目录到网站根目录\n   \n   $ unzip master.zip \n   $ cd discuzx/\n   $ ls\n   readme  readme.md  upload  utility\n   $ mv upload/ /opt/nginx/html/\n   \n\n\n# 7.2 建立discuz论坛所用数据库\n\n$ mysql -uroot -pcom.123456\nmysql> show databases;\n+--------------------+\n| database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n4 rows in set (0.01 sec)\n\nmysql> create database discuz;\nquery ok, 1 row affected (0.01 sec)\n\nmysql> show databases;\n+--------------------+\n| database           |\n+--------------------+\n| discuz             |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n\n\n\n# 7.3 安装discuz论坛\n\n * 在客户端使用浏览器打开网站地址：http://192.168.154.137/upload/install ，会显示以下安装界面：\n   \n   \n\n * 点击我同意\n   \n   \n\n * 解决所有文件权限，需要可写权限\n   \n   $ cd /opt/nginx/html/upload/\n   $ chmod -r 777 ./config/ ./data/ ./uc_client/ ./uc_server/\n   \n\n * 然后刷新界面\n   \n   \n\n * 选择全新安装，点击下一步\n   \n   \n\n * 添加安装数据库有关信息必须要按照实际情况添加。\n   \n   \n\n * 会开始安装论坛，安装完毕后就可以访问论坛了，可以把upload文件夹重命名\n   \n   $ mv upload/ discuz\n   \n\n访问论坛\n\n\n\n\n# 7.4 可以使用论坛管理员admin用户做论坛管理\n\n使用论坛管理员账号admin登录管理中心，就可以管理论坛了。",charsets:{cjk:!0}},{title:"Nginx优化及防盗链",frontmatter:{},regularPath:"/Nginx/04_nginx%E4%BC%98%E5%8C%96%E7%AE%A1%E7%90%86/1.%20Nginx%E4%BC%98%E5%8C%96%E5%8F%8A%E9%98%B2%E7%9B%97%E9%93%BE/Nginx%E4%BC%98%E5%8C%96%E5%8F%8A%E9%98%B2%E7%9B%97%E9%93%BE.html",relativePath:"Nginx/04_nginx优化管理/1. Nginx优化及防盗链/Nginx优化及防盗链.md",key:"v-66bdd3e8",path:"/nginx/04_nginxyou-hua-guan-li/1.-nginxyou-hua-ji-fang-dao-lian/nginxyou-hua-ji-fang-dao-lian.html",headers:[{level:2,title:"1、隐藏版本等信息",slug:"_1、隐藏版本等信息",normalizedTitle:"1、隐藏版本等信息",charIndex:134},{level:3,title:"优化方式",slug:"优化方式",normalizedTitle:"优化方式",charIndex:461},{level:2,title:"2、工作进程数优化",slug:"_2、工作进程数优化",normalizedTitle:"2、工作进程数优化",charIndex:2087},{level:2,title:"3、Nginx事件处理模型",slug:"_3、nginx事件处理模型",normalizedTitle:"3、nginx事件处理模型",charIndex:2580},{level:2,title:"4、开启高效传输模式",slug:"_4、开启高效传输模式",normalizedTitle:"4、开启高效传输模式",charIndex:3090},{level:2,title:"5、连接超时时间",slug:"_5、连接超时时间",normalizedTitle:"5、连接超时时间",charIndex:3627},{level:2,title:"6、fastcgi调优",slug:"_6、fastcgi调优",normalizedTitle:"6、fastcgi调优",charIndex:4924},{level:2,title:"7、gzip调优",slug:"_7、gzip调优",normalizedTitle:"7、gzip调优",charIndex:7226},{level:2,title:"8、配置网页缓存时间",slug:"_8、配置网页缓存时间",normalizedTitle:"8、配置网页缓存时间",charIndex:8324},{level:2,title:"9、防盗链",slug:"_9、防盗链",normalizedTitle:"9、防盗链",charIndex:8872},{level:2,title:"10、内核参数优化",slug:"_10、内核参数优化",normalizedTitle:"10、内核参数优化",charIndex:9258},{level:3,title:"内核优化案例",slug:"内核优化案例",normalizedTitle:"内核优化案例",charIndex:10995},{level:3,title:"实验优化案例",slug:"实验优化案例",normalizedTitle:"实验优化案例",charIndex:12049},{level:3,title:"验证、压力测试",slug:"验证、压力测试",normalizedTitle:"验证、压力测试",charIndex:15059}],headersStr:"1、隐藏版本等信息 优化方式 2、工作进程数优化 3、Nginx事件处理模型 4、开启高效传输模式 5、连接超时时间 6、fastcgi调优 7、gzip调优 8、配置网页缓存时间 9、防盗链 10、内核参数优化 内核优化案例 实验优化案例 验证、压力测试",content:'# Nginx优化及防盗链\n\n在企业信息化应用环境中，服务器的安全性和响应速度需要根据实际情况进行相应参数配置,以达到最优的用户体验。默认的Nginx安装参数只能提供最基本的服务，需要调整如网页缓存时间、连接超时、网页压缩等相应参数，发挥出服务器的最大作用。\n\n\n# 1、隐藏版本等信息\n\n在生产环境中，需要隐藏Nginx的版本号， 以避免泄漏Nginx的版本， 使攻击者不能针对特定版本进行攻击。 优化前访问:\n\nHTTP/1.1 200 OK\nserver: nginx/1.16.0\t#版本信息\nDate: Thu, 04 Jul 2019 15:06:57 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 626\nLast-Modified: Mon， 01 Jul 2019 09:26:46 GMT\nConnection: keep-alive\nETag: "5d19d1d6-272"\nAccept-Ranges: bytes\n\n\n\n# 优化方式\n\n * 修改主配置文件\n   \n   将Nginx的配置文件中的server_tokens选项值设置为off,如没有该配置项,加上即可。\n   \n   http {\n   include\t\t mime.types;\n   default_type application/octet-stream;\n   server_tokens off ;\n   …………\t#省略很多内容\n   }\n   \n\n使用了php处理动态网页,如果php配置文件中配置了fastcgi_param SERVER_SOFTWARE选项,则编辑php-fpm配置文件，将fastcgi_param SERVER_SOFTWARE对应的值修改为fastcgi_param SERVER_SOFTWARE nginx。\n\n重启服务后，再次查看：\n\n  $ curl -I http://127.0.0.1\n  HTTP/1.1 200 OK\n  Server: nginx\n  Date: Tue, 21 Apr 2020 14:35:15 GMT\n  Content-Type: text/html\n  Content-Length: 612\n  Last-Modified: Tue, 21 Apr 2020 13:35:13 GMT\n  Connection: keep-alive\n  ETag: "5e9ef691-264"\n  Accept-Ranges: bytes\n\n\n * 编译安装前修改源码\n   \n   编译前的优化主要是用来修改程序名等等，目的更改源码隐藏软件名称和版本号。\n   \n   1.进入解压后的源码目录,进行修改\n   \n   修改前\n   \n   $ vim src/core/nginx.h\n   #define NGINX_VERSION\t   "1.16.0"\t  #定义的版本号\n   #define NGINX_VER\t\t  "nginx/" NGINX_VERSION  #定义的软件名称\n   \n   \n   修改后\n   \n   $ vim src/core/nginx.h\n   #define NGINX_VERSION\t\t"7.0"\n   #define NGINX_VER\t\t\t"IIS/" NGINX_VERSION\n   \n   \n   2、修改HTTP头信息中的connection字段，防止回显具体版本号\n   \n   拓展:通用http头,通用头包含请求和响应消息都支持的头，通用头包含Cache-Control、Connection、Date、 Pragma、 Transfer-Encoding、 Upgrade、 Via。 对通用头的扩展要求通讯双方都支持此扩展，如果存在不支持的通用头, 一般将会作为实体头处理。那么也就是说有部分设备或者是软件能获取到connection， 要隐藏就要彻底!\n   \n   修改前：\n   \n   $ vim src/core/nginx.h\n   static u_char ngx_http_error_tail[] =\n   "<hr><center>nginx</center>" CRLF\n   "</body>" CRLF\n   \'</html>" CRLF\n   ;\n   \n\n修改后：\n\n  static u_char ngx_http_error_tail[] =\n  "<hr><center>IIS</center>" CRLF\n  "</body>" CRLF\n  "</html>" CRLF\n  ;\n\n\n修改完毕后进行编译安装，安装完成后,查看测试:\n\n  $ curl -I http://127.0.0.1\n  HTTP/1.1 200 OK\n  Server: IIS/7.0 \n  …………\t\t#省略很多内容\n\n\n\n# 2、工作进程数优化\n\nNginx默认只开启一个worker进程， 一般都设置为CPU个数，查看CPU个数使用如下命令:\n\n$ grep -C \'processor\' /proc/cpuinfo\n4\n\n\n所以应该配置成：\n\nworker_processes 4;\nworker_cpu_affinity 0001 0010 0100 1000; #将每个工作进程绑定到单独的CPU\nworker_rlimit_nofile 65535; #工作进程打开的最大文件数\n\n\n也可以这样调整(1.9.0版本后)\n\nworker_processes auto;\nworker_cpu_affinity auto;\n#1.9.10版本后允许将工作进程自动绑定到可用的CPU\n\n\n打开的最大文件数还要和系统的一致，使用ulimit -n查看，如果不一致,需要调整\n\n$ vim /etc/security/limits.conf\n* soft nofile 65535\n* hard nofile 65535\n* soft noproc 65535\n* hard noproc 65535\n\n\n\n# 3、Nginx事件处理模型\n\nevents {\n\tuse epoll;\n\tworker_connections 8192;\n\taccept_mutex on;\n\tmulti_accept on;\n}\n\n\nnginx采用epolI事件模型，处理效率高。\n\nwork_connections是单个worker进程允许客户端最大连接数,这个数值一般根据服务器性能和内存来制定，实际最大值就是worker进程数乘以work_connections\n\naccept_mutex（ [əkˈsept] //,mjuː ˈtɛks//）如果启用on,工作进程将轮流接受新的连接。否则，将通知所有工作进程有关新连接的信息,但只有一个进程可以获得连接。如果新连接的数量较低，则某些工作进程可能会浪费系统资源。如果是并发连接数很大的情况，应该调整为off.新版本默认是off,在版本1.1 1.3之前，默认值为on。\n\nmulti_accept指令使得NGINX worker能够在获得新连接的通知时尽可能多的接受连接。此指令的作用是立即接受所有连接放到监听队列中。如果指令被禁用, worker进程将逐个接受连接。默认是off。\n\n\n# 4、开启高效传输模式\n\nhttp {\n\tinclude\t\t\tmime.types;\n\tdefault_type \tapplication/octet-stream;\n\tsendfile\t\ton;\n\ttcp_nopush\t\ton;\n\t}\n\n\ninclude mime.types; //媒体类型,include只是一个在当前文件中包含另一个文件内容的指令。 default_type application/octet-stream; //默认媒体类型\n\nsendfile on; //开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为on,如果用来进行下载等应用磁盘I/0重负载应用，可设置为off, 以平衡磁盘与网络I/O处理速度，降低系统的负载。注意:如果图片显示不正常把这个改成off。当Nginx是一个静态文件服务器的时候，开启sendfile配置项能大大提高Nginx的性能。\n\ntcp_nopush on;必须在sendfile开启模式才有效,防止网路阻塞,积极的减少网络报文段的数量(告诉nginx在一个数据包里发送所有头文件,而不是一个接一个的发送。 同tcp_nodelay选项互斥)\n\n\n# 5、连接超时时间\n\n主要目的是保护服务器资源，CPU,内存,控制连接数，因为建立连接也是需要消耗资源的\n\nkeepalive_timeout 60;\ntcp_nodelay on;\nclient_header_buffer_size 4k;\nopen_file_cache max=102400 inactive=20s;\nopen_file_cache_valid 30s;\nopen_file_cache_min_uses 1;\nclient_header_timeout 15 ;\nclient_body_timeout 15;\nreset_timedout_connection on ;\nsend_timeout 15;\nserver_tokens off;\nclient_max_body_size 10m;\n\n\nkeepalived_timeout客户端连接保持会话超时时间,超过这个时间，服务器断开这个链接\n\ntcp_nodelay off,会增加通信的延时,但是会提高带宽利用率。在高延时、数据量大的通信场景中应该会有不错的效果;tcp_nodelay on,会增加小包的数量,但是可以提高响应速度。在及时性高的通信场景中应该会有不错的效果;\n\nclient_header_buffer_size 4k; 客户端请求头部的缓冲区大小，这个可以根据你的系统分页大小来设置，一般一个请求头的大小不会超过1k,不过由于一般系统分页都要大于1k, 所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。\n\nopen_file_cache max=102400 inactive=20s; 这个将为打开文件指定缓存，默认是没有启用的，max指定缓存数量,建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。\n\nopen_file_cache_valid 30s;这个是指多长时间检查一次缓存的有效信息。 open_file_cache_min_uses 1;open_file_cache 指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive时间内一次没被使用，它将被移除\n\nclient_header_timeout设置请求头的超时时间。我们也可以把这个设置低些，如果超过这个时间没有发送任何数据，nginx将返回request time out的错误\n\nclient_body_timeout设置请求体的超时时间。我们也可以把这个设置低些，超过这个时间没有发送任何数据，和上面一样的错误提示\n\nreset_timeout_connection 告诉nginx关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间。\n\nsend_timeout响应客户端超时时间，这个超时时间仅限于两个活动之间的时间，如果超过这个时间，客户端没有任何活动，nginx 关闭连接\n\nclient_max_body_size.上传文件大小限制。\n\n\n# 6、fastcgi调优\n\nfastcgi_connect_timeout 600 ;\nfastcgi_send_timeout 600;\nfastcgi_read_timeout 600;\nfastcgi_buffer_size 64k;\nfastcgi_buffers 4 64k;\nfastcgi_busy_buffers_size 128k;\nfastcgi_temp_file_write_size 128k;\nfastcgi_temp_path /usr/local/nginx1.10/nginx_tmp;\nfastcgi_intercept_errors on;\nfastcgi_cache_path /usr/1ocal/nginx1.10/fastcgi_cache levels=1:2\nkeys_zone=cache_fastcgi:128m\ninactive=1d max_size=10g;\n\n\nfastcgi_connect_timeout 600; #指定连接到后端FastCGI的超时时间。 fastcgi_send_timeout 600; #向FastCGl传送请求的超时时间。 fastcgi_read_timeout 600; #指定接收FastCGI应答的超时时间。 fastcgi_buffer_size 64k; #指定读取FastCGI应答第一部分需要用多大的缓冲区，默认的缓冲区大小为一个内存页大小(4K或者8K)，可以将这个值设置更小。\n\nfastcgi_buffers 4 64k; #指定本地需要用多少和多大的缓冲区来缓冲FastCGl的应答请求,如果一个php脚本所产生的页面大小为256KB,那么会分配4个64KB的缓冲区来缓存,如果页面大小大于256KB,那么大于256KB的部分会缓存到fastcgi_temp_path指定的路径中，但是这并不是好方法,因为内存中的数据处理速度要快于磁盘。一般这个值应该为站点中 php脚本所产生的页面大小的中间值，如果站点大部分脚本所生的页面大小为256KB,那么可以把这个值设置为“8 32K"、“4 64k”等。\n\nfastcgi_busy_buffers_size 128k; #建议设置为fastcgi_buffers的两倍，繁忙时候的buffer\n\nfastcgi_temp_file_write_size 128k; #在写入fastcgi_temp_path 时将用多大的数据块，默认值是fastcgi_ buffers的两倍,该数值设置过小时若负载上来时可能报502 Bad Gateway\n\nfastcgi_temp_path #缓存临时目录\n\nfastcgi_intercept_errors on;#这个指令指定是否传递4xx和5xx错误信息到客户端，或者允许nginx使用error_page处理错误信息。注:静态文件不存在会返回404页面，但是php页面则返回空白页!\n\nfastcgi_cache_path /usr/local/nginx1.1 0/fastcgi_cache levels=1:2 keys_zone=cache_fastcgi:128m inactive=1d.max_size=10g; # fastcgi_cache 缓存目录，可以设置目录层级，比如1:2会生成16*256个子目录，cache_fastcgi 是这个缓存空间的名字，cache 是用多少内存(这样热门的内容nginx直接放内存，提高访问速度)，inactive表示默认失效时间，如果缓存数据在失效时间内没有被访问，将被删除，max_size 表示最多用多少硬盘空间。\n\nfastcgi_cache cache_fastcgi; #表示开启FastCGI缓存并为其指定一个名称。开启缓存非常有用，可以有效降低CPU的负载，并且防止502的错误发生。cache_fastcgi为proxy_cache_path指令创建的缓存区名称\n\nfastcgi_cache_valid 200 302 1h;#用来指定应答代码的缓存时间,实例中的值表示将200和302应答缓存一小时，要和fastcgi. cache配合使用\n\nfastcgi_cache. valid 301 1d; #将301应答缓存一天\n\nfastcgi_cache_valid any 1m; #将其他应答缓存为1分钟 fastcgi_cache_min_uses 1; #该指令用于设置经过多少次请求的相同URL将被缓存。 fastcgi_cache_key http://$host$request_uri; #该指令用来设置web缓存的Key值,nginx根据Key值md5哈希存储,一-般根据$host(域名)、$request_uri(请求的路径)等变量组合成proxy_cache_key\n\n总结：\n\nnginx的缓存功能有: proxy_cache和fastcgi_cache\n\n * proxy_cache的作用是缓存后端服务器的内容,可能是任何内容,包括静态的和动态。\n\n * fastcgi_cache的作用是缓存fastcgj生成的内容，很多情况是php生成的动态的内容。\n\n * proxy_cache缓存减少了nginx与后端通信的次数，节省了传输时间和后端宽带。\n\n * fastcgi_cache缓存减少了nginx与php的通信的次数， 更减轻了php和数据库(mysql)的压力。\n\n\n# 7、gzip调优\n\n使用gzip压缩功能，可节约带宽，加快传输速度,有更好的体验,也为我们节约成本,所以说这是一个重点。Nginx启用压缩功能需要你来ngx_http_gzip_module模块，apache使用的是mod_deflate. 一般我们需要压缩的内容有:文本，js, html, Css, 对于图片,视频，flash什么的不压缩，同时也要注意,使用gzip的功能是需要消耗CPU的。\n\ngzip on;\ngzip_min_length 2k;\ngzip_buffers 4 32k;\ngzip_http_version 1.1;\ngzip_comp_level 6;\ngzip_types text/plain text/css text/javascript application/json\napplication/javascript\napplication/x-javascript application/xml;gzip_vary on; \ngzip_proxied any;\n\n\ngzip on; #开启压缩功能 gzip_min_length 1k; #设置允许压缩的页面最小字节数，页面字节数从header头的Content-Length中获取，默认值是20字节,建议设置成大于1K,如果小于1 K可能会越压越大。\n\ngzip_buffers 4 32k; #压缩缓冲区大小,表示申请4个单位为32K的内存作为压缩结果流缓存,默认值是申请与原始数据大小相同的内存空间来存储gzip压缩结果。\n\ngzip_http_version 1.1; #压缩版本，用于设置识别HTTP协议版本,默认是1.1,目前大部分浏览器已经支持GZIP解压，使用默认即可\n\ngzip_comp_level 6; #压缩比例，用来指定GZIP压缩比，1压缩比最小，处理速度最快，9压缩比最大,传输速度快，但是处理慢，也比较消耗CPU资源。默认是1\n\ngzip_types text/css text/xml application/javascript; #用来指定压缩的类型，\'text/html类型总是会被压缩。默认值: gzip_types text/html (默认不对js/CSS文件进行压缩)\n\ngzip_vary on;开启和关闭插入"Vary: Accept-Encoding"响应头区域\n\ngzip_proxied any; #Nginx作为反向代理的时候启用,根据后端服务器的相应头区域是否有"Via”区域来开启或者是关闭压缩。any就是所有的代理请求都压缩。\n\n\n# 8、配置网页缓存时间\n\n当Nginx将网页数据返回给客户端后，可设置缓存的时间，以方便在日后进行相同内容的请求时直接返回，以避免重复请求，加快了访问速度，一般针对静态资源进行设置, 对动态网页不用设置缓存时间。 下面对图片做缓存配置:\n\nlocation ~ \\.(gif|jpg|jpeg|png|bmp|ico)$ {\t\t#加入新的location\n\t\troot html ;\n\t\texpires 1d;\t\t\t\t#指定缓存时间\n}\n\n\n设置缓存一天的时间，一天之内浏览器访问这个页面， 都是用缓存中的数据，而不需要向Nginx服务器重新发出请求，减少了服务器的使用带宽。\n\n总结：\n\nexpire功能优点:\n\n * expires可以降低网站购买的带宽， 节约成本\n * 同时提升用户访问体验\n * 减轻服务的压力，节约服务器成本，是web服务非常重要的功能。\n * expire功能缺点:\n * 被缓存的页面或数据更新了,用户看到的可能还是旧的内容,反而影响用户体验。\n * 解决办法: 。第一个缩短缓存时间，例如: 1天,但不彻底，除非更新频率大于1天; 。第二个对缓存的对象改名。\n * 网站不希望被缓存的内容: 。网站流量统计工具 。更新频繁的文件(google的logo)\n\n\n# 9、防盗链\n\n在企业网站服务中，一般都要配置防盗链功能，以避免网站内容被非法盗用，造成经济损失，也避免了不必要的带宽浪费。Nginx的防盗链功能也非常强大，在默认情况下，只需要进行很简单的配置，即可实现防盗链处理。\n\nlocation ~* \\.(jpg|gif|swf)$ {\n    valid_referers none blocked web.test.cn;\n    if ($invalid_referer) {\n        rewrite ^/ http://web.test.cn/meinv02.jpg;\n    }\n    root   /usr/share/nginx/html/web;\n}\n\n\nNginx的防盗链原理是加入location项，用正则表达式过滤图片类型文件,对于信任的网址可以正常使用，不信任的网址返回相应的错误图片。\n\n\n# 10、内核参数优化\n\nfs.file-max = 999999:\n\n这个参数表示进程(比如一个worker进程)可以同时打开的最大句柄数，这个参数直线限制最大并发连接数，需根据实际情况配置。\n\nnet.ipv4.tcp_max_tw_buckets = 6000\n\n这个参数表示操作系统允许TIME_WAIT套接字数量的最大值,如果超过这个数字，TIME_WAIT套接字将立刻被清除并打印警告信息。该参数默认为180000,过多的TIME_WAIT套接字会使Web服务器变慢。 注:主动关闭连接的服务端会产生 TIME_WAIT状态的连接\n\nnet.ipv4.ip_local_port_range = 1024 65000 允许系统打开的端口范围\n\nnet.ipv4.tcp_tw_recycle= 1 启用timewait快速回收\n\nnet.ipv4.tcp_tw_reuse= 1 开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接。这对于服务器来说很有意义,因为服务器上总会有大量TIME-WAIT状态的连接。\n\nnet.ipv4.tcp_keepalive_time= 30 这个参数表示当keepalive启用时，TCP发送keepalive消息的频度。默认是2小时,若将其设置的小一些，可以更快地清理无效的连接。\n\nnet.ipv4.tcp_syncookies= 1 开启SYN Cookies当出现SYN等待队列溢出时，启用cookies来处理。该参数与性能无关，用于解决TCP的SYN攻击。\n\nnet.core.somaxconn = 40960 somaxconn参数:定义了系统中每一个端口最大的监听队列的长度，这是个全局的参数默认值为128，对于一个经常处理新连接的高负载web服务环境来说，默认的128太小了。大多数环境这个值建议增加到1024或者更多。大的侦听队列对防止拒绝服务DoS攻击也会有所帮助。 web应用中listen函数的backlog默认会给我们内核参数的net.core.somaxconn限制到128,而nginx定义的NGX_LISTEN_BACKLOG 默认为511,所以有必要调整这个值。 注:对于一 个TCP连接, Server与Client需要通过三次握手来建立网络连接.当三次握手成功后,我们可以看到端口的状态由LISTEN转变为ESTABLISHED（ [ɪˈstæblɪʃt] 建立），接着这条链路上就可以开始传送数据了。每一个处于监听(Listen)状态的端口,都有自己的监听队列.监听队列的长度与此somaxconn参数和使用该端口的程序中listen()函数有关\n\nnet.core.netdev_max_backlog = 262144 每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。\n\nnet.ipv4.tcp_max_syn_backlog = 262144 这个参数标示TCP三次握手建立阶段接受SYN请求队列的最大长度,默认为1024,将其设置得大一些可以使出现Nginx繁忙来不及accept新连接的情况时，Linux 不至于丢失客户端发起的连接请求。\n\nnet.ipv4.tcp_rmem = 10240 87380 12582912 这个参数定义了TCP接受缓存(用于TCP接受滑动窗口)的最小值、默认值、最大值。\n\nnet.ipv4.tcp_wmem = 10240 87380 12582912 这个参数定义了TCP发送缓存(用于TCP发送滑动窗口)的最小值、默认值、最大值。\n\nnet.core.rmem_default = 6291456 这个参数表示内核套接字接受缓存区默认的大小。\n\nnet.core.wmem_default = 6291456 这个参数表示内核套接字发送缓存区默认的大小。\n\nnet.core.rmem_max= 12582912 这个参数表示内核套接字接受缓存区的最大大小。\n\nnet.core.wmem_max = 12582912 这个参数表示内核套接字发送缓存区的最大大小。\n\n\n# 内核优化案例\n\nfs.file-max = 99999\nnet.ipv4.ip_forward = 0\nnet.ipv4.conf.default.rp_filter = 1\nnet.ipv4.conf.default.accept_source_route = 0\nkernel.sysrq = 0\nkernel.core_uses_pid = 1\nnet.ipv4.tcp_syncookies = 1\nkernel.msgmnb = 65536\nkernel.msgmax = 65536\nkernel.shmmax = 68719476736\nkernel.shmall = 4294967296\nnet.ipv4.tcp_max_tw_buckets = 6000\nnet.ipv4.tcp_sack = 1\nnet.ipv4.tcp_window_scaling = 1\nnet.ipv4.tcp_rmem = 10240 87380 12582912\nnet.ipv4.tcp_wmem = 10240 87380 12582912\nnet.core.wmem_default = 8388608\nnet.core.rmem_default = 8388608\nnet.core.rmem_max = 16777216\nnet.core.wmem_max = 16777216\nnet.core.netdev_max_backlog = 262144\nnet.core.somaxconn = 40960\nnet.ipv4.tcp_max_orphans = 3276800\nnet.ipv4.tcp_max_syn_backlog = 262144\nnet.ipv4.tcp_timestamps = 0\nnet.ipv4.tcp_synack_retries = 1\nnet.ipv4.tcp_syn_retries = 1\nnet.ipv4.tcp_tw_recycle = 1\nnet.ipv4.tcp_tw_reuse = 1\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\nnet.ipv4.tcp_fin_timeout = 1\nnet.ipv4.tcp_keepalive_time = 30\nnet.ipv4.ip_local_port_range = 1024 65000\n\n\n执行sysctl -p 使内核修改生效\n\n\n# 实验优化案例\n\n部署实验环境\n\n1、部署LNMP环境(略)\n\n2、一个完整的Nginx配置文件案例\n\nuser www www;\nworker_processes 4 :\nworker_cpu_affinity 0001 0010 0100 1000;\nworker_rlimit_nofile 65535;\nerror_log logs/error.log;\n#error_log logs/error.log notice; \n#error_log logs/error.log info; \npid logs/nginx.pid;\nevents {\n\tuse epoll;\n\tworker_connections 8192;\n\tmulti_accept on;\n}\nhttp {\n\tinclude mime.types;\n\tdefault_type application/octet-stream; \n\tlog_format main \'$remote_addr - $remote_user [$time_local] "$request" \'\n\t\t\t\t   \'$status $body_bytes_sent ”$http_referer\'\n\t\t\t\t   \'"$http_user_agent" "Shttp_x_forwarded_for"\';\n\t#access_log logs/access.log main;\n\tsendfile on;\n\ttcp_nopush on;\n\tkeepalive_timeout 65;\n\ttcp_nodelay on;\n\tclient_header_buffer_size 4k;\n\topen_file_cache max=102400 inactive=20s ;\n\topen_file_cache_valid 30s;\n\topen_file_cache_min_uses 1\n\tclient_header_timeout 15;\n\tclient_body_timeout 15;\n\treset_timedout_connection on;\n\tsend_timeout 15;\n\tserver_tokens off;\n\tclient_max_body_size 10m;\n\tfastcgi_connect timeout 600;\n\tfastcgi_send timeout 600;\n\tfastcgi_read timeout 600;\n\tfastcgi_buffer_size 64k;\n\tfastcgi_buffers 4 64k;\n\tfastcgi_busy_buffers_size 128k;\n\tfastcgi_temp_file_write_size 128k;\n\tfastcgi_temp path /usr/local/nginx1.10/nginx_tmp;\n\tfastcgi_intercept_errors on;\n\tfastcgi_cache_path /usr/local/nginx1.10/fastcgi_cache levels=1:2\n\tkeys_zone=cache_fastcgi:128m inactive=1d max_size=10g;\n\tgzip on;\n\tgzip_min_length 2k;\n\tgzip_buffers 4 32k;gzip_http_version 1.1;\n\tgzip_comp_level 6;\n\tgzip_types text/plain text/css text/javascript application/json\napplication/javascript\napplication/x-javascript application/xml ;\n\tgzip_vary on;\n\tgzip_proxied any;\nserver {\n\tlisten 80; \n\tserver_name www.shengzhe.com; \n\t#charset koi8-r;\n\t#access_log logs/host.access.log main;\n\tlocation ~* ^.+\\.(jpg|gif|png|swf|flv|wma|wmv|asf|mp3|mmf|zip|rar)${\n\t\tvalid_referers none blocked www.shengzhe.com shengzhe.com;\n\t\t\tif ($invalid_referer) {\n\t\t\t\t#return 302 http://www.shengzhe.com/img/nolink.jpg;\n\t\t\t\treturn 404;\n\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\taccess_log off;\n\t\t\t}\n\t\tlocation / {\n\t\t\troot html;\n\t\t\tindex index.php index.html index.htm;\n\t\t\t}\n\t\tlocation ~* \\.(ico|jpeg|gif|png|bmp|swf|flv)$ {\n\t\t\texpires 30d;\n\t\t\t#log_not_found off;\n\t\t\taccess_log off;\n\t\t\t}\n\t\tlocation ~* \\.(js|css)$ {\n\t\t\texpires 7d;\n\t\t\tlog_not_found off;\n\t\t\taccess_log off;\n\t\t\t}\n\t\tlocation = /(favicon.ico|roboots.txt) {\n\t\t\taccess_log off;\n\t\t\tlog_not_found off;\n\t\t\t}\n\t\tlocation /status {\n\t\t\tstub_status on;\n\t\tlocation ~ . *\\.(php|php5)?$ {\n\t\t\troot html;\n\t\t\tfastcgi_pass 127.0.0.1:9000;\n\t\t\tfastcgi_index index.php;\n\t\t\tinclude fastcgi.conf;\n\t\t\tfastcgi_cache cache_fastcgi;\n\t\t\tfastcgi_cache_alid 200 302 1h;\n\t\t\tfastcgi_cache_valid 301 1d;\n\t\t\tfastcgi_cache_valid any 1m;\n\t\t\tfastcgi_cache_min_uses 1;\n\t\t\tfastcgi_cache_use_stale error timeout invalid_header http_500;\n\t\t\tfastcgi_cache_key http://$host$request_uri;\n\t\t#error_page 404 /404.html;\n\t\t# redirect server error pages to the static page /50x.html\n\t\t#\n\t\terror_page 500 502 503 504 /50x.html;\n\t\tlocation = /50x.html {\n\t\t\troot html ;\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\n# 验证、压力测试\n\n# 1.验证防盗链\n\n使用Apache做为一个测试站点，域名为www.test.com,在测试页上做一个超链接， 链接nginx站点的一张图片\n\n$ cat /var/www/html/index.html\n<a href="http://www.shengzhe.com/11.gif">lianjie</a>\n\n\nNginx站点的网页目录结如下:\n\n$ tree -C /usr/local/nginx1.16/html/\n/usr/local/nginx1.16/html/\n├── 11.gif\n├── 50x.html\n├── img\n│       └── nolink.jpg\n├── index.html\n├── mysql_test.php\n└── test.php\n\n1 directory, 6 files\n\n\n在客户端浏览器中输入:www.test.com\n\n\n\n点击页面链接，可以看到防盗链设置已经生效\n\n\n\n# 2.验证gzip功能\n\n使用谷歌浏览器测试访问，如下图显示结果: (提示: 在访问测试页之前按F12键)\n\n\n\n用户访问test.php文件， 在上图中content-encoding:gzip表明响应给用户的数据是压缩传输。\n\n# 3.压力测试\n\n网站性能压力测试是服务器网站性能调优过程中必不可缺少的一环。只有让服务器处在高压情况下，才能真正体现出软件、硬件等各种设置不当所暴露出的问题。\n\n性能测试工具目前最常见的有以下几种: ab、http_load、webbench、siege。 ab是apache自带的压力测试工具。ab非常实用，它不仅可以对apache服务器进行网站访问压力测试，也可以对或其它类型的服务器进行压力测试。比如nginx、tomcat、 llS等。 需要安装才能使用:\n\n$ yum install httpd-tools -y\n\n\n最常用的参数:\n\n-n\t总的要执行多少个请求数\n-C\t一次要发出的请求数(并发数)\n\n\n执行以下测试命令\n\n$ ab -C 500 -n 50000 http://192.168.154.140/index.html\nThis is ApacheBench, version 2.3 <$Revision: 1430300 $>\nCopyright 1996 Adam Twiss，Zeus Technology Ltd，http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\nBenchmarking 192.168.154.140 (be patient)\nCompleted 5000 requests\nCompleted 10000 requests\nCompleted 15000 requests\nCompleted 20000 requests\nCompleted 25000 requests\nCompleted 30000 requests\nCompleted 35000 requests\nCompleted 40000 requests\nCompleted 45000 requests\nCompleted 50000 requests\nFinished 50000 requests\n\nServer Software:\tnginx\nServer Hostname :\t192.168.154.140\nServer Port:\t\t80\n\nDocument Path:\t\t/index.html\nDocument Length:\t626 bytes\n\nconcurrency Level:\t\t500\nTime taken for tests:\t32.916 seconds\nComplete requests:\t\t50000\nFailed requests :\t\t12\n\t(Connect: 0，Receive: 0，Length: 6，Exceptions: 6)\nwrite errors:\t\t\t0\nTotal transferred: \t\t42600000 bytes\nHTML transferred:\t\t31300000 bytes\nRequests per second:\t1519.01 [#/sec] (mean)\nTime per request:\t\t329.161 [ms] (mean)\nTime per request:\t\t0.658 [ms] (mean， across a11 concurrent requests )\nTransfer rate:\t\t\t1263.87 [Kbytes/sec] received\n\nConnection Times (ms )\n\t\t\tmin\tmean[+/-sd]\tmedian\tmax\nConnect :\t   0  85  26.8     83    367\nProcessing:\t   8  95  168.8    92  15002\nwaiting:       2  64  28.5     59    374\nTotal :\t\t  82 181 168.5    172  15002\n\nPercentage of the requests served within a certain time (ms)\n50%\t\t172\n66%\t\t179\n75%\t\t184\n80%\t\t187\n90%\t\t198\n95%\t\t209\n98%\t\t250\n99%\t\t370\n100% \t15002 (longest request)\n\n\nab性能指标\n\n1、吞吐率(Requests per second)\n\n服务器并发处理能力的量化描述，单位是reqs/s, 指的是在某个并发用户数下单位时间内处理的请求数。某个并发用户数下单位时间内能处理的最大请求数,称之为最大吞吐率。\n\n记住:吞吐率是基于并发用户数的。这句话代表了两个含义:\n\n * 吞吐率和并发用户数相关\n * 不同的并发用户数下,吞吐率一般是不同的\n\n计算公式:总请求数/处理完成这些请求数所花费的时间，即 Request per second=Complete requests/Time taken for tests 必须要说明的是，这个数值表示当前机器的整体性能，值越大越好。\n\n2.并发连接数(The number of concurrent connections)\n\n并发连接数指的是某个时刻服务器所接受的请求数目,简单的讲，就是一个会话\n\n3.并发用户数(Concurrency Level)\n\n要注意区分这个概念和并发连接数之间的区别，一个用户可能同时会产生多个会话，也即连接数。在HTTP/1.1下，IE7支持两个并发连接，IE8支持6个并发连接， FireFox3支持4个并发连接,所以相应的，我们的并发用户数就得除以这个基数。\n\n4.用户平均请求等待时间(Time per request)\n\n计算公式:处理完成所有请求数所花费的时间/ (总请求数/并发用户数)，即:\n\nTime per request=Time taken for tests/ (Complete requests/Concurrency Level)\n\n5.服务器平均请求等待时间(Time per request:across all concurrent requests)\n\n计算公式:处理完成所有请求数所花费的时间/总请求数,即:\n\nTime taken for/testsComplete requests\n\n可以看到，它是吞吐率的倒数。\n\n同时，它也等于用户平均请求等待时间/并发用户数,即\n\nTime per request/Concurrency Level\n\n第二次压力测试，比较两次的差异\n\n$ ab -C 1000 -n 10000 http://192.168.154.140/index.html\nThis is ApacheBench，version 2.3 <SRevision: 1430300 $>\nCopyright 1996 Adam Twiss，Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache software Foundation, http://www.apache.org/\n\nBenchmarking 192.168.154.140 (be patient)\nCompleted 10000 requests\nCompleted 20000 requests\nCompleted 30000 requests\nCompleted 40000 requests\nCompleted 50000 requests\nCompleted 60000 requests\nCompleted 70000 requests\nCompleted 80000 requests\nCompleted 90000 requests\nCompleted 100000 requests\nFinished 100000 requests\n\nServer Software:\tnginx\nServer Hostname :\t192.168.154.140\nServer Port:\t\t80\n\nDocument Path:\t\t/index.html\nDocument Length:\t626 bytes\n\nconcurrency Level:\t\t1000\nTime taken for tests:\t50.908 seconds\nComplete requests:\t\t10000\nFailed requests :\t\t39\n\t(Connect: 0，Receive: 0，Length: 6，Exceptions: 6)\nwrite errors:\t\t\t0\nTotal transferred: \t\t85200000 bytes\nHTML transferred:\t\t62600000 bytes\nRequests per second:\t1964.33 [#/sec] (mean)\nTime per request:\t\t509.080 [ms] (mean)\nTime per request:\t\t0.658 [ms] (mean， across a11 concurrent requests )\nTransfer rate:\t\t\t1634.38 [Kbytes/sec] received\n\n\nConnection Times (ms )\n\t\t\tmin\tmean[+/-sd]\tmedian\t max\nConnect :\t   0  173  \t50.7    171   638\nProcessing:\t  16  189  211.9    183  15010\nwaiting:       3  122   54.4    115    472\nTotal :\t\t 191  361  207.8    349  15010\n\nPercentage of the requests served within a certain time (ms)\n50%\t\t349\n66%\t\t359\n75%\t\t366\n80%\t\t371\n90%\t\t385\n95%\t\t400\n98%\t\t461\n99%\t\t603\n100% \t15010 (longest request)\n\n\n# 4.opcache提高PHP访向速度\n\nOpcache的前生是Optimizer+（ [ˈɑptəˌmaɪzər]优化器 ）,它是PHP的官方公司Zend开发的一款闭源但可以免费使用的PHP优化加速组件。Optimizer+将PHP代码预编译生成的脚本文件Opcode缓存在共享内存中供以后反复使用，从而避免了从磁盘读取代码再次编译的时间消耗。同时，它还应用了一些代码优化模式，使得代码执行更快。从而加速PHP的执行。 安装\n\n$ yum install php72w-opcache -y\n\n\n官方推荐配置\n\nopcache.enable=1\nopcache.memory_consumption=128\nopcache.interned_strings_buffer=8\nopcache.max_accelerated files=4000\nopcache.revalidate_freq=60\nopcache.fast_shutdown=1\nopcache.enab1e_cli=1\n\n\n测试PHP动态页面\n\n$ ab -C 1000 -n 100000 http://192.168.154.140/test.php\nThis is ApacheBench，version 2.3 <$Revision: 1430300 $>\nCopyright 1996 Adam Twiss，Zeus Technology Ltd，http://www.zeustech.net/\nLicensed to The Apache software Foundation, http://www.apache.org/\n\nBenchmarking 192.168.154.140 (be patient)\nCompleted 10000 requests\nCompleted 20000 requests\nCompleted 30000 requests\nCompleted 40000 requests\nCompleted 50000 requests\nCompleted 60000 requests\nCompleted 70000 requests\nCompleted 80000 requests\nCompleted 90000 requests\nCompleted 100000 requests\nFinished 100000 requests\n\nServer Software:\tnginx\nServer Hostname :\t192.168.154.140\nServer Port:\t\t80\n\nDocument Path:\t\t/text.php\nDocument Length:\t73746 bytes\n\nconcurrency Level:\t\t1000\nTime taken for tests:\t43.004 seconds\nComplete requests:\t\t10000\nFailed requests :\t\t0\nwrite errors:\t\t\t0\nTotal transferred: \t\t7392500000 bytes\nHTML transferred:\t\t7371600000 bytes\nRequests per second:\t2325.39 [#/sec] (mean)\nTime per request:\t\t430.036 [ms] (mean)\nTime per request:\t\t0.430 [ms] (mean， across a11 concurrent requests )\nTransfer rate:\t\t\t167875.33 [Kbytes/sec] received\n\n\nConnection Times (ms)\n\t\t\tmin\tmean[+/-sd]\tmedian\t max\nConnect :\t   1   78  \t54.3     67   524\nProcessing:\t  38  350   80.6    343   824\nwaiting:       1   51   33.8     44   404\nTotal :\t\t 112  428   77.3    409   899\n\nPercentage of the requests served within a certain time (ms)\n50%\t\t405\n66%\t\t420\n75%\t\t435\n80%\t\t449\n90%\t\t504\n95%\t\t595\n98%\t\t694\n99%\t\t767\n100% \t899 (longest request)\n',normalizedContent:'# nginx优化及防盗链\n\n在企业信息化应用环境中，服务器的安全性和响应速度需要根据实际情况进行相应参数配置,以达到最优的用户体验。默认的nginx安装参数只能提供最基本的服务，需要调整如网页缓存时间、连接超时、网页压缩等相应参数，发挥出服务器的最大作用。\n\n\n# 1、隐藏版本等信息\n\n在生产环境中，需要隐藏nginx的版本号， 以避免泄漏nginx的版本， 使攻击者不能针对特定版本进行攻击。 优化前访问:\n\nhttp/1.1 200 ok\nserver: nginx/1.16.0\t#版本信息\ndate: thu, 04 jul 2019 15:06:57 gmt\ncontent-type: text/html; charset=utf-8\ncontent-length: 626\nlast-modified: mon， 01 jul 2019 09:26:46 gmt\nconnection: keep-alive\netag: "5d19d1d6-272"\naccept-ranges: bytes\n\n\n\n# 优化方式\n\n * 修改主配置文件\n   \n   将nginx的配置文件中的server_tokens选项值设置为off,如没有该配置项,加上即可。\n   \n   http {\n   include\t\t mime.types;\n   default_type application/octet-stream;\n   server_tokens off ;\n   …………\t#省略很多内容\n   }\n   \n\n使用了php处理动态网页,如果php配置文件中配置了fastcgi_param server_software选项,则编辑php-fpm配置文件，将fastcgi_param server_software对应的值修改为fastcgi_param server_software nginx。\n\n重启服务后，再次查看：\n\n  $ curl -i http://127.0.0.1\n  http/1.1 200 ok\n  server: nginx\n  date: tue, 21 apr 2020 14:35:15 gmt\n  content-type: text/html\n  content-length: 612\n  last-modified: tue, 21 apr 2020 13:35:13 gmt\n  connection: keep-alive\n  etag: "5e9ef691-264"\n  accept-ranges: bytes\n\n\n * 编译安装前修改源码\n   \n   编译前的优化主要是用来修改程序名等等，目的更改源码隐藏软件名称和版本号。\n   \n   1.进入解压后的源码目录,进行修改\n   \n   修改前\n   \n   $ vim src/core/nginx.h\n   #define nginx_version\t   "1.16.0"\t  #定义的版本号\n   #define nginx_ver\t\t  "nginx/" nginx_version  #定义的软件名称\n   \n   \n   修改后\n   \n   $ vim src/core/nginx.h\n   #define nginx_version\t\t"7.0"\n   #define nginx_ver\t\t\t"iis/" nginx_version\n   \n   \n   2、修改http头信息中的connection字段，防止回显具体版本号\n   \n   拓展:通用http头,通用头包含请求和响应消息都支持的头，通用头包含cache-control、connection、date、 pragma、 transfer-encoding、 upgrade、 via。 对通用头的扩展要求通讯双方都支持此扩展，如果存在不支持的通用头, 一般将会作为实体头处理。那么也就是说有部分设备或者是软件能获取到connection， 要隐藏就要彻底!\n   \n   修改前：\n   \n   $ vim src/core/nginx.h\n   static u_char ngx_http_error_tail[] =\n   "<hr><center>nginx</center>" crlf\n   "</body>" crlf\n   \'</html>" crlf\n   ;\n   \n\n修改后：\n\n  static u_char ngx_http_error_tail[] =\n  "<hr><center>iis</center>" crlf\n  "</body>" crlf\n  "</html>" crlf\n  ;\n\n\n修改完毕后进行编译安装，安装完成后,查看测试:\n\n  $ curl -i http://127.0.0.1\n  http/1.1 200 ok\n  server: iis/7.0 \n  …………\t\t#省略很多内容\n\n\n\n# 2、工作进程数优化\n\nnginx默认只开启一个worker进程， 一般都设置为cpu个数，查看cpu个数使用如下命令:\n\n$ grep -c \'processor\' /proc/cpuinfo\n4\n\n\n所以应该配置成：\n\nworker_processes 4;\nworker_cpu_affinity 0001 0010 0100 1000; #将每个工作进程绑定到单独的cpu\nworker_rlimit_nofile 65535; #工作进程打开的最大文件数\n\n\n也可以这样调整(1.9.0版本后)\n\nworker_processes auto;\nworker_cpu_affinity auto;\n#1.9.10版本后允许将工作进程自动绑定到可用的cpu\n\n\n打开的最大文件数还要和系统的一致，使用ulimit -n查看，如果不一致,需要调整\n\n$ vim /etc/security/limits.conf\n* soft nofile 65535\n* hard nofile 65535\n* soft noproc 65535\n* hard noproc 65535\n\n\n\n# 3、nginx事件处理模型\n\nevents {\n\tuse epoll;\n\tworker_connections 8192;\n\taccept_mutex on;\n\tmulti_accept on;\n}\n\n\nnginx采用epoli事件模型，处理效率高。\n\nwork_connections是单个worker进程允许客户端最大连接数,这个数值一般根据服务器性能和内存来制定，实际最大值就是worker进程数乘以work_connections\n\naccept_mutex（ [əkˈsept] //,mjuː ˈtɛks//）如果启用on,工作进程将轮流接受新的连接。否则，将通知所有工作进程有关新连接的信息,但只有一个进程可以获得连接。如果新连接的数量较低，则某些工作进程可能会浪费系统资源。如果是并发连接数很大的情况，应该调整为off.新版本默认是off,在版本1.1 1.3之前，默认值为on。\n\nmulti_accept指令使得nginx worker能够在获得新连接的通知时尽可能多的接受连接。此指令的作用是立即接受所有连接放到监听队列中。如果指令被禁用, worker进程将逐个接受连接。默认是off。\n\n\n# 4、开启高效传输模式\n\nhttp {\n\tinclude\t\t\tmime.types;\n\tdefault_type \tapplication/octet-stream;\n\tsendfile\t\ton;\n\ttcp_nopush\t\ton;\n\t}\n\n\ninclude mime.types; //媒体类型,include只是一个在当前文件中包含另一个文件内容的指令。 default_type application/octet-stream; //默认媒体类型\n\nsendfile on; //开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为on,如果用来进行下载等应用磁盘i/0重负载应用，可设置为off, 以平衡磁盘与网络i/o处理速度，降低系统的负载。注意:如果图片显示不正常把这个改成off。当nginx是一个静态文件服务器的时候，开启sendfile配置项能大大提高nginx的性能。\n\ntcp_nopush on;必须在sendfile开启模式才有效,防止网路阻塞,积极的减少网络报文段的数量(告诉nginx在一个数据包里发送所有头文件,而不是一个接一个的发送。 同tcp_nodelay选项互斥)\n\n\n# 5、连接超时时间\n\n主要目的是保护服务器资源，cpu,内存,控制连接数，因为建立连接也是需要消耗资源的\n\nkeepalive_timeout 60;\ntcp_nodelay on;\nclient_header_buffer_size 4k;\nopen_file_cache max=102400 inactive=20s;\nopen_file_cache_valid 30s;\nopen_file_cache_min_uses 1;\nclient_header_timeout 15 ;\nclient_body_timeout 15;\nreset_timedout_connection on ;\nsend_timeout 15;\nserver_tokens off;\nclient_max_body_size 10m;\n\n\nkeepalived_timeout客户端连接保持会话超时时间,超过这个时间，服务器断开这个链接\n\ntcp_nodelay off,会增加通信的延时,但是会提高带宽利用率。在高延时、数据量大的通信场景中应该会有不错的效果;tcp_nodelay on,会增加小包的数量,但是可以提高响应速度。在及时性高的通信场景中应该会有不错的效果;\n\nclient_header_buffer_size 4k; 客户端请求头部的缓冲区大小，这个可以根据你的系统分页大小来设置，一般一个请求头的大小不会超过1k,不过由于一般系统分页都要大于1k, 所以这里设置为分页大小。分页大小可以用命令getconf pagesize取得。\n\nopen_file_cache max=102400 inactive=20s; 这个将为打开文件指定缓存，默认是没有启用的，max指定缓存数量,建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。\n\nopen_file_cache_valid 30s;这个是指多长时间检查一次缓存的有效信息。 open_file_cache_min_uses 1;open_file_cache 指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive时间内一次没被使用，它将被移除\n\nclient_header_timeout设置请求头的超时时间。我们也可以把这个设置低些，如果超过这个时间没有发送任何数据，nginx将返回request time out的错误\n\nclient_body_timeout设置请求体的超时时间。我们也可以把这个设置低些，超过这个时间没有发送任何数据，和上面一样的错误提示\n\nreset_timeout_connection 告诉nginx关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间。\n\nsend_timeout响应客户端超时时间，这个超时时间仅限于两个活动之间的时间，如果超过这个时间，客户端没有任何活动，nginx 关闭连接\n\nclient_max_body_size.上传文件大小限制。\n\n\n# 6、fastcgi调优\n\nfastcgi_connect_timeout 600 ;\nfastcgi_send_timeout 600;\nfastcgi_read_timeout 600;\nfastcgi_buffer_size 64k;\nfastcgi_buffers 4 64k;\nfastcgi_busy_buffers_size 128k;\nfastcgi_temp_file_write_size 128k;\nfastcgi_temp_path /usr/local/nginx1.10/nginx_tmp;\nfastcgi_intercept_errors on;\nfastcgi_cache_path /usr/1ocal/nginx1.10/fastcgi_cache levels=1:2\nkeys_zone=cache_fastcgi:128m\ninactive=1d max_size=10g;\n\n\nfastcgi_connect_timeout 600; #指定连接到后端fastcgi的超时时间。 fastcgi_send_timeout 600; #向fastcgl传送请求的超时时间。 fastcgi_read_timeout 600; #指定接收fastcgi应答的超时时间。 fastcgi_buffer_size 64k; #指定读取fastcgi应答第一部分需要用多大的缓冲区，默认的缓冲区大小为一个内存页大小(4k或者8k)，可以将这个值设置更小。\n\nfastcgi_buffers 4 64k; #指定本地需要用多少和多大的缓冲区来缓冲fastcgl的应答请求,如果一个php脚本所产生的页面大小为256kb,那么会分配4个64kb的缓冲区来缓存,如果页面大小大于256kb,那么大于256kb的部分会缓存到fastcgi_temp_path指定的路径中，但是这并不是好方法,因为内存中的数据处理速度要快于磁盘。一般这个值应该为站点中 php脚本所产生的页面大小的中间值，如果站点大部分脚本所生的页面大小为256kb,那么可以把这个值设置为“8 32k"、“4 64k”等。\n\nfastcgi_busy_buffers_size 128k; #建议设置为fastcgi_buffers的两倍，繁忙时候的buffer\n\nfastcgi_temp_file_write_size 128k; #在写入fastcgi_temp_path 时将用多大的数据块，默认值是fastcgi_ buffers的两倍,该数值设置过小时若负载上来时可能报502 bad gateway\n\nfastcgi_temp_path #缓存临时目录\n\nfastcgi_intercept_errors on;#这个指令指定是否传递4xx和5xx错误信息到客户端，或者允许nginx使用error_page处理错误信息。注:静态文件不存在会返回404页面，但是php页面则返回空白页!\n\nfastcgi_cache_path /usr/local/nginx1.1 0/fastcgi_cache levels=1:2 keys_zone=cache_fastcgi:128m inactive=1d.max_size=10g; # fastcgi_cache 缓存目录，可以设置目录层级，比如1:2会生成16*256个子目录，cache_fastcgi 是这个缓存空间的名字，cache 是用多少内存(这样热门的内容nginx直接放内存，提高访问速度)，inactive表示默认失效时间，如果缓存数据在失效时间内没有被访问，将被删除，max_size 表示最多用多少硬盘空间。\n\nfastcgi_cache cache_fastcgi; #表示开启fastcgi缓存并为其指定一个名称。开启缓存非常有用，可以有效降低cpu的负载，并且防止502的错误发生。cache_fastcgi为proxy_cache_path指令创建的缓存区名称\n\nfastcgi_cache_valid 200 302 1h;#用来指定应答代码的缓存时间,实例中的值表示将200和302应答缓存一小时，要和fastcgi. cache配合使用\n\nfastcgi_cache. valid 301 1d; #将301应答缓存一天\n\nfastcgi_cache_valid any 1m; #将其他应答缓存为1分钟 fastcgi_cache_min_uses 1; #该指令用于设置经过多少次请求的相同url将被缓存。 fastcgi_cache_key http://$host$request_uri; #该指令用来设置web缓存的key值,nginx根据key值md5哈希存储,一-般根据$host(域名)、$request_uri(请求的路径)等变量组合成proxy_cache_key\n\n总结：\n\nnginx的缓存功能有: proxy_cache和fastcgi_cache\n\n * proxy_cache的作用是缓存后端服务器的内容,可能是任何内容,包括静态的和动态。\n\n * fastcgi_cache的作用是缓存fastcgj生成的内容，很多情况是php生成的动态的内容。\n\n * proxy_cache缓存减少了nginx与后端通信的次数，节省了传输时间和后端宽带。\n\n * fastcgi_cache缓存减少了nginx与php的通信的次数， 更减轻了php和数据库(mysql)的压力。\n\n\n# 7、gzip调优\n\n使用gzip压缩功能，可节约带宽，加快传输速度,有更好的体验,也为我们节约成本,所以说这是一个重点。nginx启用压缩功能需要你来ngx_http_gzip_module模块，apache使用的是mod_deflate. 一般我们需要压缩的内容有:文本，js, html, css, 对于图片,视频，flash什么的不压缩，同时也要注意,使用gzip的功能是需要消耗cpu的。\n\ngzip on;\ngzip_min_length 2k;\ngzip_buffers 4 32k;\ngzip_http_version 1.1;\ngzip_comp_level 6;\ngzip_types text/plain text/css text/javascript application/json\napplication/javascript\napplication/x-javascript application/xml;gzip_vary on; \ngzip_proxied any;\n\n\ngzip on; #开启压缩功能 gzip_min_length 1k; #设置允许压缩的页面最小字节数，页面字节数从header头的content-length中获取，默认值是20字节,建议设置成大于1k,如果小于1 k可能会越压越大。\n\ngzip_buffers 4 32k; #压缩缓冲区大小,表示申请4个单位为32k的内存作为压缩结果流缓存,默认值是申请与原始数据大小相同的内存空间来存储gzip压缩结果。\n\ngzip_http_version 1.1; #压缩版本，用于设置识别http协议版本,默认是1.1,目前大部分浏览器已经支持gzip解压，使用默认即可\n\ngzip_comp_level 6; #压缩比例，用来指定gzip压缩比，1压缩比最小，处理速度最快，9压缩比最大,传输速度快，但是处理慢，也比较消耗cpu资源。默认是1\n\ngzip_types text/css text/xml application/javascript; #用来指定压缩的类型，\'text/html类型总是会被压缩。默认值: gzip_types text/html (默认不对js/css文件进行压缩)\n\ngzip_vary on;开启和关闭插入"vary: accept-encoding"响应头区域\n\ngzip_proxied any; #nginx作为反向代理的时候启用,根据后端服务器的相应头区域是否有"via”区域来开启或者是关闭压缩。any就是所有的代理请求都压缩。\n\n\n# 8、配置网页缓存时间\n\n当nginx将网页数据返回给客户端后，可设置缓存的时间，以方便在日后进行相同内容的请求时直接返回，以避免重复请求，加快了访问速度，一般针对静态资源进行设置, 对动态网页不用设置缓存时间。 下面对图片做缓存配置:\n\nlocation ~ \\.(gif|jpg|jpeg|png|bmp|ico)$ {\t\t#加入新的location\n\t\troot html ;\n\t\texpires 1d;\t\t\t\t#指定缓存时间\n}\n\n\n设置缓存一天的时间，一天之内浏览器访问这个页面， 都是用缓存中的数据，而不需要向nginx服务器重新发出请求，减少了服务器的使用带宽。\n\n总结：\n\nexpire功能优点:\n\n * expires可以降低网站购买的带宽， 节约成本\n * 同时提升用户访问体验\n * 减轻服务的压力，节约服务器成本，是web服务非常重要的功能。\n * expire功能缺点:\n * 被缓存的页面或数据更新了,用户看到的可能还是旧的内容,反而影响用户体验。\n * 解决办法: 。第一个缩短缓存时间，例如: 1天,但不彻底，除非更新频率大于1天; 。第二个对缓存的对象改名。\n * 网站不希望被缓存的内容: 。网站流量统计工具 。更新频繁的文件(google的logo)\n\n\n# 9、防盗链\n\n在企业网站服务中，一般都要配置防盗链功能，以避免网站内容被非法盗用，造成经济损失，也避免了不必要的带宽浪费。nginx的防盗链功能也非常强大，在默认情况下，只需要进行很简单的配置，即可实现防盗链处理。\n\nlocation ~* \\.(jpg|gif|swf)$ {\n    valid_referers none blocked web.test.cn;\n    if ($invalid_referer) {\n        rewrite ^/ http://web.test.cn/meinv02.jpg;\n    }\n    root   /usr/share/nginx/html/web;\n}\n\n\nnginx的防盗链原理是加入location项，用正则表达式过滤图片类型文件,对于信任的网址可以正常使用，不信任的网址返回相应的错误图片。\n\n\n# 10、内核参数优化\n\nfs.file-max = 999999:\n\n这个参数表示进程(比如一个worker进程)可以同时打开的最大句柄数，这个参数直线限制最大并发连接数，需根据实际情况配置。\n\nnet.ipv4.tcp_max_tw_buckets = 6000\n\n这个参数表示操作系统允许time_wait套接字数量的最大值,如果超过这个数字，time_wait套接字将立刻被清除并打印警告信息。该参数默认为180000,过多的time_wait套接字会使web服务器变慢。 注:主动关闭连接的服务端会产生 time_wait状态的连接\n\nnet.ipv4.ip_local_port_range = 1024 65000 允许系统打开的端口范围\n\nnet.ipv4.tcp_tw_recycle= 1 启用timewait快速回收\n\nnet.ipv4.tcp_tw_reuse= 1 开启重用。允许将time-wait sockets重新用于新的tcp连接。这对于服务器来说很有意义,因为服务器上总会有大量time-wait状态的连接。\n\nnet.ipv4.tcp_keepalive_time= 30 这个参数表示当keepalive启用时，tcp发送keepalive消息的频度。默认是2小时,若将其设置的小一些，可以更快地清理无效的连接。\n\nnet.ipv4.tcp_syncookies= 1 开启syn cookies当出现syn等待队列溢出时，启用cookies来处理。该参数与性能无关，用于解决tcp的syn攻击。\n\nnet.core.somaxconn = 40960 somaxconn参数:定义了系统中每一个端口最大的监听队列的长度，这是个全局的参数默认值为128，对于一个经常处理新连接的高负载web服务环境来说，默认的128太小了。大多数环境这个值建议增加到1024或者更多。大的侦听队列对防止拒绝服务dos攻击也会有所帮助。 web应用中listen函数的backlog默认会给我们内核参数的net.core.somaxconn限制到128,而nginx定义的ngx_listen_backlog 默认为511,所以有必要调整这个值。 注:对于一 个tcp连接, server与client需要通过三次握手来建立网络连接.当三次握手成功后,我们可以看到端口的状态由listen转变为established（ [ɪˈstæblɪʃt] 建立），接着这条链路上就可以开始传送数据了。每一个处于监听(listen)状态的端口,都有自己的监听队列.监听队列的长度与此somaxconn参数和使用该端口的程序中listen()函数有关\n\nnet.core.netdev_max_backlog = 262144 每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。\n\nnet.ipv4.tcp_max_syn_backlog = 262144 这个参数标示tcp三次握手建立阶段接受syn请求队列的最大长度,默认为1024,将其设置得大一些可以使出现nginx繁忙来不及accept新连接的情况时，linux 不至于丢失客户端发起的连接请求。\n\nnet.ipv4.tcp_rmem = 10240 87380 12582912 这个参数定义了tcp接受缓存(用于tcp接受滑动窗口)的最小值、默认值、最大值。\n\nnet.ipv4.tcp_wmem = 10240 87380 12582912 这个参数定义了tcp发送缓存(用于tcp发送滑动窗口)的最小值、默认值、最大值。\n\nnet.core.rmem_default = 6291456 这个参数表示内核套接字接受缓存区默认的大小。\n\nnet.core.wmem_default = 6291456 这个参数表示内核套接字发送缓存区默认的大小。\n\nnet.core.rmem_max= 12582912 这个参数表示内核套接字接受缓存区的最大大小。\n\nnet.core.wmem_max = 12582912 这个参数表示内核套接字发送缓存区的最大大小。\n\n\n# 内核优化案例\n\nfs.file-max = 99999\nnet.ipv4.ip_forward = 0\nnet.ipv4.conf.default.rp_filter = 1\nnet.ipv4.conf.default.accept_source_route = 0\nkernel.sysrq = 0\nkernel.core_uses_pid = 1\nnet.ipv4.tcp_syncookies = 1\nkernel.msgmnb = 65536\nkernel.msgmax = 65536\nkernel.shmmax = 68719476736\nkernel.shmall = 4294967296\nnet.ipv4.tcp_max_tw_buckets = 6000\nnet.ipv4.tcp_sack = 1\nnet.ipv4.tcp_window_scaling = 1\nnet.ipv4.tcp_rmem = 10240 87380 12582912\nnet.ipv4.tcp_wmem = 10240 87380 12582912\nnet.core.wmem_default = 8388608\nnet.core.rmem_default = 8388608\nnet.core.rmem_max = 16777216\nnet.core.wmem_max = 16777216\nnet.core.netdev_max_backlog = 262144\nnet.core.somaxconn = 40960\nnet.ipv4.tcp_max_orphans = 3276800\nnet.ipv4.tcp_max_syn_backlog = 262144\nnet.ipv4.tcp_timestamps = 0\nnet.ipv4.tcp_synack_retries = 1\nnet.ipv4.tcp_syn_retries = 1\nnet.ipv4.tcp_tw_recycle = 1\nnet.ipv4.tcp_tw_reuse = 1\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\nnet.ipv4.tcp_fin_timeout = 1\nnet.ipv4.tcp_keepalive_time = 30\nnet.ipv4.ip_local_port_range = 1024 65000\n\n\n执行sysctl -p 使内核修改生效\n\n\n# 实验优化案例\n\n部署实验环境\n\n1、部署lnmp环境(略)\n\n2、一个完整的nginx配置文件案例\n\nuser www www;\nworker_processes 4 :\nworker_cpu_affinity 0001 0010 0100 1000;\nworker_rlimit_nofile 65535;\nerror_log logs/error.log;\n#error_log logs/error.log notice; \n#error_log logs/error.log info; \npid logs/nginx.pid;\nevents {\n\tuse epoll;\n\tworker_connections 8192;\n\tmulti_accept on;\n}\nhttp {\n\tinclude mime.types;\n\tdefault_type application/octet-stream; \n\tlog_format main \'$remote_addr - $remote_user [$time_local] "$request" \'\n\t\t\t\t   \'$status $body_bytes_sent ”$http_referer\'\n\t\t\t\t   \'"$http_user_agent" "shttp_x_forwarded_for"\';\n\t#access_log logs/access.log main;\n\tsendfile on;\n\ttcp_nopush on;\n\tkeepalive_timeout 65;\n\ttcp_nodelay on;\n\tclient_header_buffer_size 4k;\n\topen_file_cache max=102400 inactive=20s ;\n\topen_file_cache_valid 30s;\n\topen_file_cache_min_uses 1\n\tclient_header_timeout 15;\n\tclient_body_timeout 15;\n\treset_timedout_connection on;\n\tsend_timeout 15;\n\tserver_tokens off;\n\tclient_max_body_size 10m;\n\tfastcgi_connect timeout 600;\n\tfastcgi_send timeout 600;\n\tfastcgi_read timeout 600;\n\tfastcgi_buffer_size 64k;\n\tfastcgi_buffers 4 64k;\n\tfastcgi_busy_buffers_size 128k;\n\tfastcgi_temp_file_write_size 128k;\n\tfastcgi_temp path /usr/local/nginx1.10/nginx_tmp;\n\tfastcgi_intercept_errors on;\n\tfastcgi_cache_path /usr/local/nginx1.10/fastcgi_cache levels=1:2\n\tkeys_zone=cache_fastcgi:128m inactive=1d max_size=10g;\n\tgzip on;\n\tgzip_min_length 2k;\n\tgzip_buffers 4 32k;gzip_http_version 1.1;\n\tgzip_comp_level 6;\n\tgzip_types text/plain text/css text/javascript application/json\napplication/javascript\napplication/x-javascript application/xml ;\n\tgzip_vary on;\n\tgzip_proxied any;\nserver {\n\tlisten 80; \n\tserver_name www.shengzhe.com; \n\t#charset koi8-r;\n\t#access_log logs/host.access.log main;\n\tlocation ~* ^.+\\.(jpg|gif|png|swf|flv|wma|wmv|asf|mp3|mmf|zip|rar)${\n\t\tvalid_referers none blocked www.shengzhe.com shengzhe.com;\n\t\t\tif ($invalid_referer) {\n\t\t\t\t#return 302 http://www.shengzhe.com/img/nolink.jpg;\n\t\t\t\treturn 404;\n\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\taccess_log off;\n\t\t\t}\n\t\tlocation / {\n\t\t\troot html;\n\t\t\tindex index.php index.html index.htm;\n\t\t\t}\n\t\tlocation ~* \\.(ico|jpeg|gif|png|bmp|swf|flv)$ {\n\t\t\texpires 30d;\n\t\t\t#log_not_found off;\n\t\t\taccess_log off;\n\t\t\t}\n\t\tlocation ~* \\.(js|css)$ {\n\t\t\texpires 7d;\n\t\t\tlog_not_found off;\n\t\t\taccess_log off;\n\t\t\t}\n\t\tlocation = /(favicon.ico|roboots.txt) {\n\t\t\taccess_log off;\n\t\t\tlog_not_found off;\n\t\t\t}\n\t\tlocation /status {\n\t\t\tstub_status on;\n\t\tlocation ~ . *\\.(php|php5)?$ {\n\t\t\troot html;\n\t\t\tfastcgi_pass 127.0.0.1:9000;\n\t\t\tfastcgi_index index.php;\n\t\t\tinclude fastcgi.conf;\n\t\t\tfastcgi_cache cache_fastcgi;\n\t\t\tfastcgi_cache_alid 200 302 1h;\n\t\t\tfastcgi_cache_valid 301 1d;\n\t\t\tfastcgi_cache_valid any 1m;\n\t\t\tfastcgi_cache_min_uses 1;\n\t\t\tfastcgi_cache_use_stale error timeout invalid_header http_500;\n\t\t\tfastcgi_cache_key http://$host$request_uri;\n\t\t#error_page 404 /404.html;\n\t\t# redirect server error pages to the static page /50x.html\n\t\t#\n\t\terror_page 500 502 503 504 /50x.html;\n\t\tlocation = /50x.html {\n\t\t\troot html ;\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\n# 验证、压力测试\n\n# 1.验证防盗链\n\n使用apache做为一个测试站点，域名为www.test.com,在测试页上做一个超链接， 链接nginx站点的一张图片\n\n$ cat /var/www/html/index.html\n<a href="http://www.shengzhe.com/11.gif">lianjie</a>\n\n\nnginx站点的网页目录结如下:\n\n$ tree -c /usr/local/nginx1.16/html/\n/usr/local/nginx1.16/html/\n├── 11.gif\n├── 50x.html\n├── img\n│       └── nolink.jpg\n├── index.html\n├── mysql_test.php\n└── test.php\n\n1 directory, 6 files\n\n\n在客户端浏览器中输入:www.test.com\n\n\n\n点击页面链接，可以看到防盗链设置已经生效\n\n\n\n# 2.验证gzip功能\n\n使用谷歌浏览器测试访问，如下图显示结果: (提示: 在访问测试页之前按f12键)\n\n\n\n用户访问test.php文件， 在上图中content-encoding:gzip表明响应给用户的数据是压缩传输。\n\n# 3.压力测试\n\n网站性能压力测试是服务器网站性能调优过程中必不可缺少的一环。只有让服务器处在高压情况下，才能真正体现出软件、硬件等各种设置不当所暴露出的问题。\n\n性能测试工具目前最常见的有以下几种: ab、http_load、webbench、siege。 ab是apache自带的压力测试工具。ab非常实用，它不仅可以对apache服务器进行网站访问压力测试，也可以对或其它类型的服务器进行压力测试。比如nginx、tomcat、 lls等。 需要安装才能使用:\n\n$ yum install httpd-tools -y\n\n\n最常用的参数:\n\n-n\t总的要执行多少个请求数\n-c\t一次要发出的请求数(并发数)\n\n\n执行以下测试命令\n\n$ ab -c 500 -n 50000 http://192.168.154.140/index.html\nthis is apachebench, version 2.3 <$revision: 1430300 $>\ncopyright 1996 adam twiss，zeus technology ltd，http://www.zeustech.net/\nlicensed to the apache software foundation, http://www.apache.org/\nbenchmarking 192.168.154.140 (be patient)\ncompleted 5000 requests\ncompleted 10000 requests\ncompleted 15000 requests\ncompleted 20000 requests\ncompleted 25000 requests\ncompleted 30000 requests\ncompleted 35000 requests\ncompleted 40000 requests\ncompleted 45000 requests\ncompleted 50000 requests\nfinished 50000 requests\n\nserver software:\tnginx\nserver hostname :\t192.168.154.140\nserver port:\t\t80\n\ndocument path:\t\t/index.html\ndocument length:\t626 bytes\n\nconcurrency level:\t\t500\ntime taken for tests:\t32.916 seconds\ncomplete requests:\t\t50000\nfailed requests :\t\t12\n\t(connect: 0，receive: 0，length: 6，exceptions: 6)\nwrite errors:\t\t\t0\ntotal transferred: \t\t42600000 bytes\nhtml transferred:\t\t31300000 bytes\nrequests per second:\t1519.01 [#/sec] (mean)\ntime per request:\t\t329.161 [ms] (mean)\ntime per request:\t\t0.658 [ms] (mean， across a11 concurrent requests )\ntransfer rate:\t\t\t1263.87 [kbytes/sec] received\n\nconnection times (ms )\n\t\t\tmin\tmean[+/-sd]\tmedian\tmax\nconnect :\t   0  85  26.8     83    367\nprocessing:\t   8  95  168.8    92  15002\nwaiting:       2  64  28.5     59    374\ntotal :\t\t  82 181 168.5    172  15002\n\npercentage of the requests served within a certain time (ms)\n50%\t\t172\n66%\t\t179\n75%\t\t184\n80%\t\t187\n90%\t\t198\n95%\t\t209\n98%\t\t250\n99%\t\t370\n100% \t15002 (longest request)\n\n\nab性能指标\n\n1、吞吐率(requests per second)\n\n服务器并发处理能力的量化描述，单位是reqs/s, 指的是在某个并发用户数下单位时间内处理的请求数。某个并发用户数下单位时间内能处理的最大请求数,称之为最大吞吐率。\n\n记住:吞吐率是基于并发用户数的。这句话代表了两个含义:\n\n * 吞吐率和并发用户数相关\n * 不同的并发用户数下,吞吐率一般是不同的\n\n计算公式:总请求数/处理完成这些请求数所花费的时间，即 request per second=complete requests/time taken for tests 必须要说明的是，这个数值表示当前机器的整体性能，值越大越好。\n\n2.并发连接数(the number of concurrent connections)\n\n并发连接数指的是某个时刻服务器所接受的请求数目,简单的讲，就是一个会话\n\n3.并发用户数(concurrency level)\n\n要注意区分这个概念和并发连接数之间的区别，一个用户可能同时会产生多个会话，也即连接数。在http/1.1下，ie7支持两个并发连接，ie8支持6个并发连接， firefox3支持4个并发连接,所以相应的，我们的并发用户数就得除以这个基数。\n\n4.用户平均请求等待时间(time per request)\n\n计算公式:处理完成所有请求数所花费的时间/ (总请求数/并发用户数)，即:\n\ntime per request=time taken for tests/ (complete requests/concurrency level)\n\n5.服务器平均请求等待时间(time per request:across all concurrent requests)\n\n计算公式:处理完成所有请求数所花费的时间/总请求数,即:\n\ntime taken for/testscomplete requests\n\n可以看到，它是吞吐率的倒数。\n\n同时，它也等于用户平均请求等待时间/并发用户数,即\n\ntime per request/concurrency level\n\n第二次压力测试，比较两次的差异\n\n$ ab -c 1000 -n 10000 http://192.168.154.140/index.html\nthis is apachebench，version 2.3 <srevision: 1430300 $>\ncopyright 1996 adam twiss，zeus technology ltd, http://www.zeustech.net/\nlicensed to the apache software foundation, http://www.apache.org/\n\nbenchmarking 192.168.154.140 (be patient)\ncompleted 10000 requests\ncompleted 20000 requests\ncompleted 30000 requests\ncompleted 40000 requests\ncompleted 50000 requests\ncompleted 60000 requests\ncompleted 70000 requests\ncompleted 80000 requests\ncompleted 90000 requests\ncompleted 100000 requests\nfinished 100000 requests\n\nserver software:\tnginx\nserver hostname :\t192.168.154.140\nserver port:\t\t80\n\ndocument path:\t\t/index.html\ndocument length:\t626 bytes\n\nconcurrency level:\t\t1000\ntime taken for tests:\t50.908 seconds\ncomplete requests:\t\t10000\nfailed requests :\t\t39\n\t(connect: 0，receive: 0，length: 6，exceptions: 6)\nwrite errors:\t\t\t0\ntotal transferred: \t\t85200000 bytes\nhtml transferred:\t\t62600000 bytes\nrequests per second:\t1964.33 [#/sec] (mean)\ntime per request:\t\t509.080 [ms] (mean)\ntime per request:\t\t0.658 [ms] (mean， across a11 concurrent requests )\ntransfer rate:\t\t\t1634.38 [kbytes/sec] received\n\n\nconnection times (ms )\n\t\t\tmin\tmean[+/-sd]\tmedian\t max\nconnect :\t   0  173  \t50.7    171   638\nprocessing:\t  16  189  211.9    183  15010\nwaiting:       3  122   54.4    115    472\ntotal :\t\t 191  361  207.8    349  15010\n\npercentage of the requests served within a certain time (ms)\n50%\t\t349\n66%\t\t359\n75%\t\t366\n80%\t\t371\n90%\t\t385\n95%\t\t400\n98%\t\t461\n99%\t\t603\n100% \t15010 (longest request)\n\n\n# 4.opcache提高php访向速度\n\nopcache的前生是optimizer+（ [ˈɑptəˌmaɪzər]优化器 ）,它是php的官方公司zend开发的一款闭源但可以免费使用的php优化加速组件。optimizer+将php代码预编译生成的脚本文件opcode缓存在共享内存中供以后反复使用，从而避免了从磁盘读取代码再次编译的时间消耗。同时，它还应用了一些代码优化模式，使得代码执行更快。从而加速php的执行。 安装\n\n$ yum install php72w-opcache -y\n\n\n官方推荐配置\n\nopcache.enable=1\nopcache.memory_consumption=128\nopcache.interned_strings_buffer=8\nopcache.max_accelerated files=4000\nopcache.revalidate_freq=60\nopcache.fast_shutdown=1\nopcache.enab1e_cli=1\n\n\n测试php动态页面\n\n$ ab -c 1000 -n 100000 http://192.168.154.140/test.php\nthis is apachebench，version 2.3 <$revision: 1430300 $>\ncopyright 1996 adam twiss，zeus technology ltd，http://www.zeustech.net/\nlicensed to the apache software foundation, http://www.apache.org/\n\nbenchmarking 192.168.154.140 (be patient)\ncompleted 10000 requests\ncompleted 20000 requests\ncompleted 30000 requests\ncompleted 40000 requests\ncompleted 50000 requests\ncompleted 60000 requests\ncompleted 70000 requests\ncompleted 80000 requests\ncompleted 90000 requests\ncompleted 100000 requests\nfinished 100000 requests\n\nserver software:\tnginx\nserver hostname :\t192.168.154.140\nserver port:\t\t80\n\ndocument path:\t\t/text.php\ndocument length:\t73746 bytes\n\nconcurrency level:\t\t1000\ntime taken for tests:\t43.004 seconds\ncomplete requests:\t\t10000\nfailed requests :\t\t0\nwrite errors:\t\t\t0\ntotal transferred: \t\t7392500000 bytes\nhtml transferred:\t\t7371600000 bytes\nrequests per second:\t2325.39 [#/sec] (mean)\ntime per request:\t\t430.036 [ms] (mean)\ntime per request:\t\t0.430 [ms] (mean， across a11 concurrent requests )\ntransfer rate:\t\t\t167875.33 [kbytes/sec] received\n\n\nconnection times (ms)\n\t\t\tmin\tmean[+/-sd]\tmedian\t max\nconnect :\t   1   78  \t54.3     67   524\nprocessing:\t  38  350   80.6    343   824\nwaiting:       1   51   33.8     44   404\ntotal :\t\t 112  428   77.3    409   899\n\npercentage of the requests served within a certain time (ms)\n50%\t\t405\n66%\t\t420\n75%\t\t435\n80%\t\t449\n90%\t\t504\n95%\t\t595\n98%\t\t694\n99%\t\t767\n100% \t899 (longest request)\n',charsets:{cjk:!0}},{title:"Nginx Rewrite",frontmatter:{},regularPath:"/Nginx/04_nginx%E4%BC%98%E5%8C%96%E7%AE%A1%E7%90%86/2.%20Nginx%20Rewrite/Nginx%20Rewrite.html",relativePath:"Nginx/04_nginx优化管理/2. Nginx Rewrite/Nginx Rewrite.md",key:"v-4ae56fbe",path:"/nginx/04_nginxyou-hua-guan-li/2.-nginx-rewrite/nginx-rewrite.html",headers:[{level:2,title:"Rewrite前置知识",slug:"rewrite前置知识",normalizedTitle:"rewrite前置知识",charIndex:194},{level:3,title:"1、Rewrite跳转场景",slug:"_1、rewrite跳转场景",normalizedTitle:"1、rewrite跳转场景",charIndex:210},{level:3,title:"2、Rewrite跳转实现",slug:"_2、rewrite跳转实现",normalizedTitle:"2、rewrite跳转实现",charIndex:419},{level:3,title:"3、Rewrite实际场景",slug:"_3、rewrite实际场景",normalizedTitle:"3、rewrite实际场景",charIndex:766},{level:2,title:"Rewrite必备知识",slug:"rewrite必备知识",normalizedTitle:"rewrite必备知识",charIndex:1047},{level:3,title:"1、正则表达式",slug:"_1、正则表达式",normalizedTitle:"1、正则表达式",charIndex:1063},{level:3,title:"2、Rewrite语法",slug:"_2、rewrite语法",normalizedTitle:"2、rewrite语法",charIndex:1170},{level:3,title:"3、location",slug:"_3、location",normalizedTitle:"3、location",charIndex:2543},{level:2,title:"Rewrite配置案例",slug:"rewrite配置案例",normalizedTitle:"rewrite配置案例",charIndex:4258},{level:3,title:"YUM安装Nginx",slug:"yum安装nginx",normalizedTitle:"yum安装nginx",charIndex:4274},{level:3,title:"基于域名的跳转",slug:"基于域名的跳转",normalizedTitle:"基于域名的跳转",charIndex:4697},{level:3,title:"基于客户端IP访问跳转",slug:"基于客户端ip访问跳转",normalizedTitle:"基于客户端ip访问跳转",charIndex:5541},{level:3,title:"基于旧域名跳转到新域名后面加目录",slug:"基于旧域名跳转到新域名后面加目录",normalizedTitle:"基于旧域名跳转到新域名后面加目录",charIndex:6337},{level:3,title:"基于参数匹配的跳转",slug:"基于参数匹配的跳转",normalizedTitle:"基于参数匹配的跳转",charIndex:7066},{level:3,title:"基于目录下所有php结尾的文件跳转",slug:"基于目录下所有php结尾的文件跳转",normalizedTitle:"基于目录下所有php结尾的文件跳转",charIndex:7351},{level:3,title:"基于最普通一条url请求的跳转,访问一个具体的页面跳转到首页",slug:"基于最普通一条url请求的跳转-访问一个具体的页面跳转到首页",normalizedTitle:"基于最普通一条url请求的跳转,访问一个具体的页面跳转到首页",charIndex:7595},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:7804}],headersStr:"Rewrite前置知识 1、Rewrite跳转场景 2、Rewrite跳转实现 3、Rewrite实际场景 Rewrite必备知识 1、正则表达式 2、Rewrite语法 3、location Rewrite配置案例 YUM安装Nginx 基于域名的跳转 基于客户端IP访问跳转 基于旧域名跳转到新域名后面加目录 基于参数匹配的跳转 基于目录下所有php结尾的文件跳转 基于最普通一条url请求的跳转,访问一个具体的页面跳转到首页 总结",content:'# Nginx Rewrite\n\n现在Nginx已经成为很多公司作为前端反向代理服务器的首选，在实际工作中往往会遇到很多跳转(重写URL)的需求。比如更换域名后需要保持旧的域名能跳转到新的域名上、某网页发生改变需要跳转到新的页面、网站防盗链等等需求。如果在后端使用的Apache服务器， 虽然也能做跳转,规则库也很强大，但是用Nginx跳转效率会更高，这也是学习本章的目的所在。\n\n\n# Rewrite前置知识\n\n\n# 1、Rewrite跳转场景\n\nRewrite跳转场景主要包括以下几种:\n\n1.可以调整用户浏览的URL,看起来更规范，合乎开发及产品人员的需求;\n\n2.为了让搜索引擎搜录网站内容及用户体验更好，企业会将动态URL地址伪装成静态地址提供服务;\n\n3.网址换新域名后，让旧的访问跳转到新的域名上。例如，访问京东的360buy.com会跳转到jd.com;\n\n4.根据特殊变量、目录、客户端的信息进行URL调整等。\n\n\n# 2、Rewrite跳转实现\n\nNginx 是通过ngx_http_rewrite_module模块支持url重写、支持if条件判断，但不支持else。另外该模块需要PCRE支持，应在编译Nginx时指定PCRE（PCRE库支持正则表达式）支持，默认已经安装。根据相关变量重定向和选择不同的配置，从一个location跳转到另一个location, 不过这样的循环最多可以执行10次，超过后Nginx将返回500错误。同时，重写模块包含set指令，来创建新的变量并设其值，这在有些情景下非常有用的，如记录条件标识、传递参数到其他location.记录做了什么等等。rewrite功能就是， 使用Nginx提供的全局变量或自己设置的变量，结合正则表达式和标志位实现url 重写以及重定向。\n\n\n# 3、Rewrite实际场景\n\n在实际工作场景，Nginx跳转需求有三种方式可实现。可以直接用rewrite进行匹配跳转，也可以使用if匹配全局变量后跳转，另外还可以使用location匹配再跳转，所以rewrite只能放在server{}, if{},location{}段中，例如location只能对域名后边的除去传递的参数外的字符串起作用，例如http://www.domain.com/index.php?id=1只对/index.php重写。如果想对域名或参数字符串起作用，可以使用if全局变量匹配，也可以使用proxy_ pass反向代理。\n\n\n# Rewrite必备知识\n\n\n# 1、正则表达式\n\n学习Rewrite之前要对正则表达式要很熟悉，下表中列举出一些常用的正则表达式元字符。要深刻理解和学习每个元字符的含义，并且多动手进行实验，在实际生产环境中要结合多个元字符一起使用。\n\n\n\n\n# 2、Rewrite语法\n\nSyntax: rewrite regex replacement [flag] ; \nDefault: -\nContext: server, location,if\n\n\n如果regex匹配了一个请求的URI,该URI被替换为replacement（[rɪˈpleɪsmənt] 替换）。 rewrite 指令在配置文件中按照出现的顺序执行。可使用flag中止进一步的处理。如果replacement以"http://","https://"为起始的字符串，将中止处理，并返回重定向指令给客户端。\n\nflag参数的值可以为:\n\n * last停止当前ngx_http.rewrite_module模块指令集的处理, 并为修改后的URI寻找新的匹配的location\n * break停止当前ngx_http.rewrite.module模块指令集的处理，与break（重定向模块中的break）指令作用相同，本条规则匹配完成即终止，不再匹配后面的任何规则\n * redirect返回302代码的临时重定向,当replacement不以"httpt://","https://“为起始的字符串时使用。浏览器地址会显示跳转后的URU地址，爬虫不会更新url (因为是临时)\n * permanent返回301代码的永久重定向。浏览器地址栏会显示跳转后的URL地址,爬虫更新url。\n\n如果后面不跟flag标记，那么默认是302临时重定向。在实际工作场景中，还有另一种return指定。因为301和302不能简单的只返回状态码，还必须有重定向的URL,这就是return指令无法返回301 ,302的原因了。\n\n例子:\n\nserver{\n\t...\n\trewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 last;\n\trewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  last;\n\treturn 403 ; \n\t...\n}\n\n\n但如果这些指令被放入"/download" location区块中，应将last flag替换为break,否则nginx会不断循环，达到10次后，返回500 error\n\nlocation /download {\n\t...\n\trewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 break;\n\trewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  break;\n\treturn 403 ; \n\t...\n}\n\n\nlast一般写在server和if中，而break一般使用在location中。last不终止重写后的url匹配， 即新的url会再从server走一遍匹配流程， 而break终止重写后的匹配。\n\n如果replacement包含请求参数，原来的请求参数将被追加在后面。如果不希望追加原来的请求参数,可在replacement字符串的末尾添加一个"?”符号， 例如:\n\nrewrite ^/users/(.*)$ /show?user=$1? last;\n\n\n\n# 3、location\n\nSyntax: location [ = | ~ | ~*| ^~] uri { ... }\n\tlocation @name { ... }\nDefault: -\nContext: server, location\n\n\n根据请求的URI设置配置。在一个server中location配置段可存在多个,用于实现URI到文件系统的路径映射;\n\n匹配字符串分为两种:普通字符串(literal string)和正则表达式(regular expression)，其中~和~*用于正则表达式，其他前缀和无任何前缀都用于普通字符串。\n\n@用来定义一个命名location。主要用于内部重定向，不能用来处理正常的请求。其用法如下：\n\nlocation / {\n    try_files $uri $uri/ @custom\n}\nlocation @custom {\n    # ...do something\n}\n\n\n上例中，当尝试访问url找不到对应的文件就重定向到我们自定义的命名location（此处为custom）。值得注意的是，命名location中不能再嵌套其它的命名location。\n\n匹配顺序是:\n\n1.先匹配普通字符串，将最精确的匹配暂时存储; 2.然后按照配置文件中的声明顺序进行正则表达式匹配，只要匹配到一条正则表达式，则停止匹配,取正则表达式为匹配结果; 3.如果所有正则表达式都匹配不上,则取1中存储的结果; 4.如果普通字符串和正则表达式都匹配不上,则报404 NOT FOUND 5.“^~“和"=“都能阻止继续搜索正则location。不同点是“^~”依然遵守“最大前缀”匹配规则，然而“=”不是“最大前缀"，而是必须是严格匹配 6.只要遇到\'精确匹配exact match”,即使普通location没有带"=”或”^~“前缀，也一样会终止后面的匹配。例如:\n\nlocation = /uri         =开头表示精确前缀匹配，只有完全匹配才能生效。\nlocation ^~ /uri        ^~开头表示普通字符串匹配上以后不再进行正则匹配。\nlocation ~ pattern      ~开头表示区分大小写的正则匹配。\nlocation ~* pattern      ~*开头表示不区分大小写的正则匹配。\nlocation /uri           不带任何修饰符，表示前缀匹配。\nlocation /              通用匹配，任何未匹配到其他location的请求都会匹配到。\n\n\n配置举例：\n\nlocation = / {\n\t[ configuration A ]\n}\n\nlocation / {\n\t[ configuration B ]\n}\n\nlocation /documents/ {\n\t[ configuration C ]\n}\n\nlocation ^~ /images/ {\n\t[ configuration D ]\n}\n\nlocation ~* \\. (gif|jpg|jpeg)$ {\n\t[ configuration E ]\n}\n\n#“/”请求匹配configuration A:\n#“/index. html"请求匹配configuration B:\n#"/documents/ document.html"请求匹配configuration C:\n#"/images/1.gif"请求匹配configuration D:\n#"/documents/1.jpg"请求匹配configuration E.\n\n#注意:正则匹配会根据匹配顺序，找到第一个匹配得正则表达式后将停止搜索。\n#普通字符串匹配则无视顺序，只会选择最精确的匹配。\n\n\n注:从功能看rewrite和location似乎有 点像，都能实现跳转,主要区别在于rewrite是在同一域名内更改获取资源的路径，而location是对一类路径做控制访问或反向代理，还可以proxy_pass到其他机器。很多情况下rewrite也会写在location里。\n\n\n# Rewrite配置案例\n\n\n# YUM安装Nginx\n\n安装完成后，修改配置文件(/etc/nginx/conf.d/default.conf )如下:\n\nserver {\n        listen   80;\n        server_name www.domain.com ;\n\n        #charset koi8-r;\n        access_log /var/log/nginx/www.domain.com-access.log main;\n\n        location / {\n                root /opt/nginx/html;\n                index index.html index.htm;\n        }\n    ......#省略部分内容\n}\n\n\n\n注意事项:做每一步场景测试之前请确定这个域名可以正常解析，每做下一个场景之前请删除上一个场景的配置，另外清除浏览器缓存。\n\n\n# 基于域名的跳转\n\n现在公司旧域名www.domain.com有业务需求有变更，需要使用新域名www.newdomain.com代替,但是旧域名不能废除，需要跳转到新域名上,而且后面的参数保持不变。\n\n在/etc/nginx/conf.d/default.conf 文件里的location下面添加如下内容:\n\nserver {\n    listen   80;\n    server_name www.newdomain.com www.domain.com ;\n\n    #charset koi8-r;\n    access_log /var/log/nginx/www.domain.com-access.log main;\n\n    location / {\n         root /opt/nginx/html;\n         index index.html index.htm;\n         if ($host = \'www.domain.com\'){\n             rewrite ^/(.*) http://www.newdomain.com/$1 permanent;\n         }\n    }\n    \n}\n\n\n修改配置文件后，重启nginx服务\n\n使用客户端浏览器访问旧域名，域名直接跳转,按F12可以清楚的看到从旧域名www.domain.com跳转到了新域名www.newdomain.com上，状态码是301永久重定向。\n\n\n\n域名后面加参数跳转，因为在代码中很多的请求是带参数的,所以要保证参数都能正常跳转。浏览器输入模拟访问http://www.domain.com/test/1/index.php(虽然这个请求内容是不存在的)跳转到http://www.newdomain.com/test/1/index.php，从headers里面可以看到301实现了永久重定向跳转，而且域名后的参数也正常跳转。\n\n\n\n\n# 基于客户端IP访问跳转\n\n例如今天公司业务版本上线，所有IP访问任何内容都显示-一个固定维护页面，只有公司P访问正常。\n\n在/etc/nginx/conf.d/default.conf文件里添加如下内容\n\nserver {\n    listen   80;\n    server_name www.newdomain.com www.domain.com ;\n\n    #charset koi8-r;\n    access_log /var/log/nginx/www.domain.com-access.log main;\n\n    #下面是添加的内容\n    set $rewrite true;\n    \n    if ($remote_addr = \'192.168.154.1\') {\n        set $rewrite false;\n    }\n    if ($rewrite = true) {\n        rewrite (.+) /maintenance.html;\n    }\n    \n    location = /maintenance.html {\n\t\troot /opt/nginx/html;\n\t}\n    \n   ......#省略很多内容 \n    \n}\n$ echo \'Website is Maintaining， Please visit later !’> /opt/nginx/html/maintenance.html\n$ systemctl restart nginx\n\n\n只有IP为192.1 68.154.1能正常访问，其它地址都是维护页面，使用-一个局域网的其它IP地址用浏览器访问http://www.domain.com域名和加参数都是请求的maintenance.html页面的内容，而且状态码是200\n\n\n\n\n# 基于旧域名跳转到新域名后面加目录\n\n例如现在访问的是http://bbs.domain.com,现在需要将这个域名下面的发帖都跳转到http://www.domain.com/bbs，注意保持域名跳转后的参数不变。\n\n修改/et/nginx/conf. d/default.conf配置文件如下：\n\nserver {\n    listen   80;\n    server_name www.newdomain.com www.domain.com bbs.domain.com;\n\n    #charset koi8-r;\n    access_log /var/log/nginx/www.domain.com-access.log main;\n\n    location / {\n         root /opt/nginx/html;\n         index index.html index.htm;\n         if ($host = \'www.domain.com\'){\n             rewrite ^/(.*) http://www.newdomain.com/$1 permanent;\n         }\n    }\n    \n    location /post {\n        rewrite (.+) http://www.domain.com/bbbs$1 permanent;\n    }\n    \n}\n\n\n模拟使用浏览器访问http://bbs.domain.com/post/1 .php ,跳转到http://www.ewdomain.com/bbs/post/1.php\n\n\n\n\n# 基于参数匹配的跳转\n\n例如现在访问hp://www.domain.com/100-100|200)-100.html跳转到http://www.domain.com页面\n\n编辑/etc/nginx/conf. d/default.conf文件里添加如下内容:\n\nlocation ~* /100-(100|200)-(\\d+).html$ {\n    rewrite (.*) http://www.domain.com permanent;\n}\n\n\n重启服务器后，使用浏览器访问http://www domain.com/100-200-100.html\n\n\n\n\n# 基于目录下所有php结尾的文件跳转\n\n访问http://www.domain.com/upload/1.php跳转到首页\n\n编辑/etc/nginx/conf. d/default.conf文件里添加如下内容:\n\nlocation ~* /upload/.*\\.php$ {\n\trewrite (.+) http://www.domain.com permanent;\n}\n\n\n重启服务，浏览器访问http://www.domain.com/upload/1.php即可实现跳转\n\n\n# 基于最普通一条url请求的跳转,访问一个具体的页面跳转到首页\n\n编辑/etc/nginx/conf.d/default.conf文件里添加如下内容:\n\nlocation ~* ^/1/test.html {\n\trewrite (.+) http://www.domain.com permanent;\n}\n\n\n重启服务后，浏览器访问http://www.domain.com/1/test.html跳转到首页\n\n\n# 总结\n\n关于Nginx rewrite本章的内容就这么多。其实在实际工作中远远不止这些场景，而且会更加复杂繁琐，希望同学们能举一反三，多加练习。',normalizedContent:'# nginx rewrite\n\n现在nginx已经成为很多公司作为前端反向代理服务器的首选，在实际工作中往往会遇到很多跳转(重写url)的需求。比如更换域名后需要保持旧的域名能跳转到新的域名上、某网页发生改变需要跳转到新的页面、网站防盗链等等需求。如果在后端使用的apache服务器， 虽然也能做跳转,规则库也很强大，但是用nginx跳转效率会更高，这也是学习本章的目的所在。\n\n\n# rewrite前置知识\n\n\n# 1、rewrite跳转场景\n\nrewrite跳转场景主要包括以下几种:\n\n1.可以调整用户浏览的url,看起来更规范，合乎开发及产品人员的需求;\n\n2.为了让搜索引擎搜录网站内容及用户体验更好，企业会将动态url地址伪装成静态地址提供服务;\n\n3.网址换新域名后，让旧的访问跳转到新的域名上。例如，访问京东的360buy.com会跳转到jd.com;\n\n4.根据特殊变量、目录、客户端的信息进行url调整等。\n\n\n# 2、rewrite跳转实现\n\nnginx 是通过ngx_http_rewrite_module模块支持url重写、支持if条件判断，但不支持else。另外该模块需要pcre支持，应在编译nginx时指定pcre（pcre库支持正则表达式）支持，默认已经安装。根据相关变量重定向和选择不同的配置，从一个location跳转到另一个location, 不过这样的循环最多可以执行10次，超过后nginx将返回500错误。同时，重写模块包含set指令，来创建新的变量并设其值，这在有些情景下非常有用的，如记录条件标识、传递参数到其他location.记录做了什么等等。rewrite功能就是， 使用nginx提供的全局变量或自己设置的变量，结合正则表达式和标志位实现url 重写以及重定向。\n\n\n# 3、rewrite实际场景\n\n在实际工作场景，nginx跳转需求有三种方式可实现。可以直接用rewrite进行匹配跳转，也可以使用if匹配全局变量后跳转，另外还可以使用location匹配再跳转，所以rewrite只能放在server{}, if{},location{}段中，例如location只能对域名后边的除去传递的参数外的字符串起作用，例如http://www.domain.com/index.php?id=1只对/index.php重写。如果想对域名或参数字符串起作用，可以使用if全局变量匹配，也可以使用proxy_ pass反向代理。\n\n\n# rewrite必备知识\n\n\n# 1、正则表达式\n\n学习rewrite之前要对正则表达式要很熟悉，下表中列举出一些常用的正则表达式元字符。要深刻理解和学习每个元字符的含义，并且多动手进行实验，在实际生产环境中要结合多个元字符一起使用。\n\n\n\n\n# 2、rewrite语法\n\nsyntax: rewrite regex replacement [flag] ; \ndefault: -\ncontext: server, location,if\n\n\n如果regex匹配了一个请求的uri,该uri被替换为replacement（[rɪˈpleɪsmənt] 替换）。 rewrite 指令在配置文件中按照出现的顺序执行。可使用flag中止进一步的处理。如果replacement以"http://","https://"为起始的字符串，将中止处理，并返回重定向指令给客户端。\n\nflag参数的值可以为:\n\n * last停止当前ngx_http.rewrite_module模块指令集的处理, 并为修改后的uri寻找新的匹配的location\n * break停止当前ngx_http.rewrite.module模块指令集的处理，与break（重定向模块中的break）指令作用相同，本条规则匹配完成即终止，不再匹配后面的任何规则\n * redirect返回302代码的临时重定向,当replacement不以"httpt://","https://“为起始的字符串时使用。浏览器地址会显示跳转后的uru地址，爬虫不会更新url (因为是临时)\n * permanent返回301代码的永久重定向。浏览器地址栏会显示跳转后的url地址,爬虫更新url。\n\n如果后面不跟flag标记，那么默认是302临时重定向。在实际工作场景中，还有另一种return指定。因为301和302不能简单的只返回状态码，还必须有重定向的url,这就是return指令无法返回301 ,302的原因了。\n\n例子:\n\nserver{\n\t...\n\trewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 last;\n\trewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  last;\n\treturn 403 ; \n\t...\n}\n\n\n但如果这些指令被放入"/download" location区块中，应将last flag替换为break,否则nginx会不断循环，达到10次后，返回500 error\n\nlocation /download {\n\t...\n\trewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 break;\n\trewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  break;\n\treturn 403 ; \n\t...\n}\n\n\nlast一般写在server和if中，而break一般使用在location中。last不终止重写后的url匹配， 即新的url会再从server走一遍匹配流程， 而break终止重写后的匹配。\n\n如果replacement包含请求参数，原来的请求参数将被追加在后面。如果不希望追加原来的请求参数,可在replacement字符串的末尾添加一个"?”符号， 例如:\n\nrewrite ^/users/(.*)$ /show?user=$1? last;\n\n\n\n# 3、location\n\nsyntax: location [ = | ~ | ~*| ^~] uri { ... }\n\tlocation @name { ... }\ndefault: -\ncontext: server, location\n\n\n根据请求的uri设置配置。在一个server中location配置段可存在多个,用于实现uri到文件系统的路径映射;\n\n匹配字符串分为两种:普通字符串(literal string)和正则表达式(regular expression)，其中~和~*用于正则表达式，其他前缀和无任何前缀都用于普通字符串。\n\n@用来定义一个命名location。主要用于内部重定向，不能用来处理正常的请求。其用法如下：\n\nlocation / {\n    try_files $uri $uri/ @custom\n}\nlocation @custom {\n    # ...do something\n}\n\n\n上例中，当尝试访问url找不到对应的文件就重定向到我们自定义的命名location（此处为custom）。值得注意的是，命名location中不能再嵌套其它的命名location。\n\n匹配顺序是:\n\n1.先匹配普通字符串，将最精确的匹配暂时存储; 2.然后按照配置文件中的声明顺序进行正则表达式匹配，只要匹配到一条正则表达式，则停止匹配,取正则表达式为匹配结果; 3.如果所有正则表达式都匹配不上,则取1中存储的结果; 4.如果普通字符串和正则表达式都匹配不上,则报404 not found 5.“^~“和"=“都能阻止继续搜索正则location。不同点是“^~”依然遵守“最大前缀”匹配规则，然而“=”不是“最大前缀"，而是必须是严格匹配 6.只要遇到\'精确匹配exact match”,即使普通location没有带"=”或”^~“前缀，也一样会终止后面的匹配。例如:\n\nlocation = /uri         =开头表示精确前缀匹配，只有完全匹配才能生效。\nlocation ^~ /uri        ^~开头表示普通字符串匹配上以后不再进行正则匹配。\nlocation ~ pattern      ~开头表示区分大小写的正则匹配。\nlocation ~* pattern      ~*开头表示不区分大小写的正则匹配。\nlocation /uri           不带任何修饰符，表示前缀匹配。\nlocation /              通用匹配，任何未匹配到其他location的请求都会匹配到。\n\n\n配置举例：\n\nlocation = / {\n\t[ configuration a ]\n}\n\nlocation / {\n\t[ configuration b ]\n}\n\nlocation /documents/ {\n\t[ configuration c ]\n}\n\nlocation ^~ /images/ {\n\t[ configuration d ]\n}\n\nlocation ~* \\. (gif|jpg|jpeg)$ {\n\t[ configuration e ]\n}\n\n#“/”请求匹配configuration a:\n#“/index. html"请求匹配configuration b:\n#"/documents/ document.html"请求匹配configuration c:\n#"/images/1.gif"请求匹配configuration d:\n#"/documents/1.jpg"请求匹配configuration e.\n\n#注意:正则匹配会根据匹配顺序，找到第一个匹配得正则表达式后将停止搜索。\n#普通字符串匹配则无视顺序，只会选择最精确的匹配。\n\n\n注:从功能看rewrite和location似乎有 点像，都能实现跳转,主要区别在于rewrite是在同一域名内更改获取资源的路径，而location是对一类路径做控制访问或反向代理，还可以proxy_pass到其他机器。很多情况下rewrite也会写在location里。\n\n\n# rewrite配置案例\n\n\n# yum安装nginx\n\n安装完成后，修改配置文件(/etc/nginx/conf.d/default.conf )如下:\n\nserver {\n        listen   80;\n        server_name www.domain.com ;\n\n        #charset koi8-r;\n        access_log /var/log/nginx/www.domain.com-access.log main;\n\n        location / {\n                root /opt/nginx/html;\n                index index.html index.htm;\n        }\n    ......#省略部分内容\n}\n\n\n\n注意事项:做每一步场景测试之前请确定这个域名可以正常解析，每做下一个场景之前请删除上一个场景的配置，另外清除浏览器缓存。\n\n\n# 基于域名的跳转\n\n现在公司旧域名www.domain.com有业务需求有变更，需要使用新域名www.newdomain.com代替,但是旧域名不能废除，需要跳转到新域名上,而且后面的参数保持不变。\n\n在/etc/nginx/conf.d/default.conf 文件里的location下面添加如下内容:\n\nserver {\n    listen   80;\n    server_name www.newdomain.com www.domain.com ;\n\n    #charset koi8-r;\n    access_log /var/log/nginx/www.domain.com-access.log main;\n\n    location / {\n         root /opt/nginx/html;\n         index index.html index.htm;\n         if ($host = \'www.domain.com\'){\n             rewrite ^/(.*) http://www.newdomain.com/$1 permanent;\n         }\n    }\n    \n}\n\n\n修改配置文件后，重启nginx服务\n\n使用客户端浏览器访问旧域名，域名直接跳转,按f12可以清楚的看到从旧域名www.domain.com跳转到了新域名www.newdomain.com上，状态码是301永久重定向。\n\n\n\n域名后面加参数跳转，因为在代码中很多的请求是带参数的,所以要保证参数都能正常跳转。浏览器输入模拟访问http://www.domain.com/test/1/index.php(虽然这个请求内容是不存在的)跳转到http://www.newdomain.com/test/1/index.php，从headers里面可以看到301实现了永久重定向跳转，而且域名后的参数也正常跳转。\n\n\n\n\n# 基于客户端ip访问跳转\n\n例如今天公司业务版本上线，所有ip访问任何内容都显示-一个固定维护页面，只有公司p访问正常。\n\n在/etc/nginx/conf.d/default.conf文件里添加如下内容\n\nserver {\n    listen   80;\n    server_name www.newdomain.com www.domain.com ;\n\n    #charset koi8-r;\n    access_log /var/log/nginx/www.domain.com-access.log main;\n\n    #下面是添加的内容\n    set $rewrite true;\n    \n    if ($remote_addr = \'192.168.154.1\') {\n        set $rewrite false;\n    }\n    if ($rewrite = true) {\n        rewrite (.+) /maintenance.html;\n    }\n    \n    location = /maintenance.html {\n\t\troot /opt/nginx/html;\n\t}\n    \n   ......#省略很多内容 \n    \n}\n$ echo \'website is maintaining， please visit later !’> /opt/nginx/html/maintenance.html\n$ systemctl restart nginx\n\n\n只有ip为192.1 68.154.1能正常访问，其它地址都是维护页面，使用-一个局域网的其它ip地址用浏览器访问http://www.domain.com域名和加参数都是请求的maintenance.html页面的内容，而且状态码是200\n\n\n\n\n# 基于旧域名跳转到新域名后面加目录\n\n例如现在访问的是http://bbs.domain.com,现在需要将这个域名下面的发帖都跳转到http://www.domain.com/bbs，注意保持域名跳转后的参数不变。\n\n修改/et/nginx/conf. d/default.conf配置文件如下：\n\nserver {\n    listen   80;\n    server_name www.newdomain.com www.domain.com bbs.domain.com;\n\n    #charset koi8-r;\n    access_log /var/log/nginx/www.domain.com-access.log main;\n\n    location / {\n         root /opt/nginx/html;\n         index index.html index.htm;\n         if ($host = \'www.domain.com\'){\n             rewrite ^/(.*) http://www.newdomain.com/$1 permanent;\n         }\n    }\n    \n    location /post {\n        rewrite (.+) http://www.domain.com/bbbs$1 permanent;\n    }\n    \n}\n\n\n模拟使用浏览器访问http://bbs.domain.com/post/1 .php ,跳转到http://www.ewdomain.com/bbs/post/1.php\n\n\n\n\n# 基于参数匹配的跳转\n\n例如现在访问hp://www.domain.com/100-100|200)-100.html跳转到http://www.domain.com页面\n\n编辑/etc/nginx/conf. d/default.conf文件里添加如下内容:\n\nlocation ~* /100-(100|200)-(\\d+).html$ {\n    rewrite (.*) http://www.domain.com permanent;\n}\n\n\n重启服务器后，使用浏览器访问http://www domain.com/100-200-100.html\n\n\n\n\n# 基于目录下所有php结尾的文件跳转\n\n访问http://www.domain.com/upload/1.php跳转到首页\n\n编辑/etc/nginx/conf. d/default.conf文件里添加如下内容:\n\nlocation ~* /upload/.*\\.php$ {\n\trewrite (.+) http://www.domain.com permanent;\n}\n\n\n重启服务，浏览器访问http://www.domain.com/upload/1.php即可实现跳转\n\n\n# 基于最普通一条url请求的跳转,访问一个具体的页面跳转到首页\n\n编辑/etc/nginx/conf.d/default.conf文件里添加如下内容:\n\nlocation ~* ^/1/test.html {\n\trewrite (.+) http://www.domain.com permanent;\n}\n\n\n重启服务后，浏览器访问http://www.domain.com/1/test.html跳转到首页\n\n\n# 总结\n\n关于nginx rewrite本章的内容就这么多。其实在实际工作中远远不止这些场景，而且会更加复杂繁琐，希望同学们能举一反三，多加练习。',charsets:{cjk:!0}},{title:"内容构建中",frontmatter:{},regularPath:"/",relativePath:"README.md",key:"v-75be7fd3",path:"/",headersStr:null,content:"# 内容构建中\n\n每周写一两篇技术方面内容。",normalizedContent:"# 内容构建中\n\n每周写一两篇技术方面内容。",charsets:{cjk:!0}},{title:"出现两年的 uniCloud",frontmatter:{},regularPath:"/uniCloud.html",relativePath:"uniCloud.md",key:"v-0d5263ec",path:"/unicloud.html",headers:[{level:3,title:"写在前面",slug:"写在前面",normalizedTitle:"写在前面",charIndex:21},{level:3,title:"云数据库",slug:"云数据库",normalizedTitle:"云数据库",charIndex:253},{level:3,title:"云函数",slug:"云函数",normalizedTitle:"云函数",charIndex:258},{level:3,title:"云存储",slug:"云存储",normalizedTitle:"云存储",charIndex:161},{level:3,title:"缺点",slug:"缺点",normalizedTitle:"缺点",charIndex:721},{level:3,title:"优点",slug:"优点",normalizedTitle:"优点",charIndex:848}],headersStr:"写在前面 云数据库 云函数 云存储 缺点 优点",content:"# 出现两年的 uniCloud\n\n\n# 写在前面\n\n近些年来，随着云计算的流行，就有人提出了Serverless想法。\n\n什么是Serverless ?\n\nServerless 就是不考虑服务器资源的编程，Serverless + js 编程就是简化后端处理，能在前端处理就在前端处理，不需要调用后端借口直接调用数据库和云存储等等内容。\n\nuniCloud 是 DCloud 联合阿里云、腾讯云，为开发者提供的基于 serverless 模式和 js 编程的云开发平台。\n\n在uniCloud平台集成了，云数据库、云函数、云存储等等内容资源，我们可以通过 js 直接连接云数据库，也可在服务器部署云函数，也可以通过 js 上传文件到云存储空间。\n\n\n# 云数据库\n\nuniCloud平台提供多种方式操作数据库，包括在云函数内使用传统方式操作数据库、在前端或者在云函数使用JQL语法直接操作数据库、在前端使用<unicloud-db>查询数据库。\n\n当然我个人在使用中比较喜欢使用在前端使用JQL操作数据库，但是我发现在前端操作数据库的时候，一些连表查询比较，因为uniCloud平台对一些操作进行了简化、优化处理。\n\n\n# 云函数\n\n云函数是运行在云端的 JavaScript 代码，是基于 Node.js 的扩展。\n\nuniCloud就是在Node.js的基础上增加了uniCloud对象，uniCloud对象内置了一下操作数据库、网络云存储的一些内容。\n\n云函数可以定时执行，可以把一些定时任务等内容写到云函数内。\n\n\n# 云存储\n\n使用uniCloud云存储，无需再像传统模式那样单独去购买存储空间、CDN映射、流量采购等。\n\n\n# 缺点\n\n 1. 官方文档比较混乱，案例比较少，不利于快速上手\n 2. 多表关联查询场景下不理想，特别是要开发一些统计页面的时候\n 3. 没有类似navicat的可视化展示内容\n 4. 没有类似MySQL的分析器，不太容易发现你的查询语句哪里出错\n\n\n# 优点\n\n提高开发小路\n\n 1. 开发成本大幅下降、开发效率大幅提升、上线和迭代速度大幅提速；\n\n 2. 如果你已拥有掌握php和js的全栈，那么改用新的技术栈，一样可以大幅提升开发效率、降低成本；\n\n专注业务\n\n 1. 你只需专注于你的业务，其他什么服务器运维、弹性扩容、大并发承载、防DDoS攻击，全都不需要操心；\n\n降低运维成本\n\n 1. 除了开发成本，云资源租用成本也将大幅下降；\n\n 2. 如果不发布H5版，你将不需要购买备案域名。小程序和App可以免域名使用服务器；",normalizedContent:"# 出现两年的 unicloud\n\n\n# 写在前面\n\n近些年来，随着云计算的流行，就有人提出了serverless想法。\n\n什么是serverless ?\n\nserverless 就是不考虑服务器资源的编程，serverless + js 编程就是简化后端处理，能在前端处理就在前端处理，不需要调用后端借口直接调用数据库和云存储等等内容。\n\nunicloud 是 dcloud 联合阿里云、腾讯云，为开发者提供的基于 serverless 模式和 js 编程的云开发平台。\n\n在unicloud平台集成了，云数据库、云函数、云存储等等内容资源，我们可以通过 js 直接连接云数据库，也可在服务器部署云函数，也可以通过 js 上传文件到云存储空间。\n\n\n# 云数据库\n\nunicloud平台提供多种方式操作数据库，包括在云函数内使用传统方式操作数据库、在前端或者在云函数使用jql语法直接操作数据库、在前端使用<unicloud-db>查询数据库。\n\n当然我个人在使用中比较喜欢使用在前端使用jql操作数据库，但是我发现在前端操作数据库的时候，一些连表查询比较，因为unicloud平台对一些操作进行了简化、优化处理。\n\n\n# 云函数\n\n云函数是运行在云端的 javascript 代码，是基于 node.js 的扩展。\n\nunicloud就是在node.js的基础上增加了unicloud对象，unicloud对象内置了一下操作数据库、网络云存储的一些内容。\n\n云函数可以定时执行，可以把一些定时任务等内容写到云函数内。\n\n\n# 云存储\n\n使用unicloud云存储，无需再像传统模式那样单独去购买存储空间、cdn映射、流量采购等。\n\n\n# 缺点\n\n 1. 官方文档比较混乱，案例比较少，不利于快速上手\n 2. 多表关联查询场景下不理想，特别是要开发一些统计页面的时候\n 3. 没有类似navicat的可视化展示内容\n 4. 没有类似mysql的分析器，不太容易发现你的查询语句哪里出错\n\n\n# 优点\n\n提高开发小路\n\n 1. 开发成本大幅下降、开发效率大幅提升、上线和迭代速度大幅提速；\n\n 2. 如果你已拥有掌握php和js的全栈，那么改用新的技术栈，一样可以大幅提升开发效率、降低成本；\n\n专注业务\n\n 1. 你只需专注于你的业务，其他什么服务器运维、弹性扩容、大并发承载、防ddos攻击，全都不需要操心；\n\n降低运维成本\n\n 1. 除了开发成本，云资源租用成本也将大幅下降；\n\n 2. 如果不发布h5版，你将不需要购买备案域名。小程序和app可以免域名使用服务器；",charsets:{cjk:!0}},{frontmatter:{},regularPath:"/%E5%87%BD%E6%95%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E7%A0%94%E7%A9%B6.html",relativePath:"函数的一些研究.md",key:"v-4a574a03",path:"/han-shu-de-yi-xie-yan-jiu.html",headers:[{level:2,title:"this指向",slug:"this指向",normalizedTitle:"this指向",charIndex:118},{level:3,title:"更改this指向",slug:"更改this指向",normalizedTitle:"更改this指向",charIndex:573}],headersStr:"this指向 更改this指向",content:"在创建函数的时候，我们可以使用函数表达式，函数声明，new 函数，和箭头函数方式的创建函数，但是我们在创建对象内部函数的时候又额外可以使用{key(){}}的方式创建函数。\n\n这篇文章主要是对对象内容的多种函数创建方式的研究。\n\n\n# this指向\n\n首先我们创建一个对象：\n\nlet obj = {\n  a: function(){\n    console.log(this)\n  },\n  b(){\n    console.log(this)\n  },\n  c:()=>{\n\t\tconsole.log(this)  \n\t}\n}\n\n\n我们运行一下obj.a() obj.b() obj.c()可以得到如下打印机内容：\n\n// obj.a()\n{a: ƒ, b: ƒ, c: ƒ}\n// obj.b() \n{a: ƒ, b: ƒ, c: ƒ}\n// obj.c()\nWindow {window: Window, self: Window, document: document, name: '', location: Location, …}\n\n\n我们可以看到函数a和函数b的this指向都是对象obj，但是箭头函数c的this指向了Window对象，这是根据以往的普通函数和箭头函数的区别，我们知道现在的this指向是没有问题的。\n\n\n# 更改this指向\n\n我们使用call更改this指向为{},执行得到如下打印内容：\n\n// obj.a.call({})\n{}\n// obj.b.call({})\n{}\n// obj.c.call({})\nWindow {window: Window, self: Window, document: document, name: '', location: Location, …}\n\n\n我们现在发现this的指向也如同我们熟悉的普通函数和箭头函数的区别一样，箭头函数无法直接更改this指向，随后我们尝试更改obj.c()的父级函数的this指向，当然现在的obj对象已经无法通过操作更改父级函数的this指向，我们需要重新创建函数func：\n\nfunction func(){\n  let obj = {\n    a: function(){\n      console.log(this)\n    },\n    b(){\n      console.log(this)\n    },\n    c:()=>{\n      console.log(this)  \n    }\n }\n obj.a()\n obj.b()\n obj.c()\n obj.a.call({})\n obj.b.call({})\n obj.c.call({})\n}\n\n\n我们直接执行func()我们会发现以下结果：\n\n{a: ƒ, b: ƒ, c: ƒ} // obj.a()\n{a: ƒ, b: ƒ, c: ƒ} // obj.b()\nWindow {window: Window, self: Window, document: document, name: '', location: Location, …} // obj.c()\n{} // obj.a.call({})\n{} // obj.b.call({})\nWindow {window: Window, self: Window, document: document, name: '', location: Location, …} //obj.c.call({})\n\n\n我们更改父级函数的this指向后，得到：\n\n{a: ƒ, b: ƒ, c: ƒ} // obj.a()\n{a: ƒ, b: ƒ, c: ƒ} // obj.a()\n{} // obj.a()\n{} // obj.b.call({})\n{} // obj.b.call({})\n{} // obj.b.call({})\n\n\n我们发现更改对象内的箭头函数的父级对象的this指向时，箭头函数的this只想也会改变，而函数b与函数a的this指向可以直接修改。",normalizedContent:"在创建函数的时候，我们可以使用函数表达式，函数声明，new 函数，和箭头函数方式的创建函数，但是我们在创建对象内部函数的时候又额外可以使用{key(){}}的方式创建函数。\n\n这篇文章主要是对对象内容的多种函数创建方式的研究。\n\n\n# this指向\n\n首先我们创建一个对象：\n\nlet obj = {\n  a: function(){\n    console.log(this)\n  },\n  b(){\n    console.log(this)\n  },\n  c:()=>{\n\t\tconsole.log(this)  \n\t}\n}\n\n\n我们运行一下obj.a() obj.b() obj.c()可以得到如下打印机内容：\n\n// obj.a()\n{a: ƒ, b: ƒ, c: ƒ}\n// obj.b() \n{a: ƒ, b: ƒ, c: ƒ}\n// obj.c()\nwindow {window: window, self: window, document: document, name: '', location: location, …}\n\n\n我们可以看到函数a和函数b的this指向都是对象obj，但是箭头函数c的this指向了window对象，这是根据以往的普通函数和箭头函数的区别，我们知道现在的this指向是没有问题的。\n\n\n# 更改this指向\n\n我们使用call更改this指向为{},执行得到如下打印内容：\n\n// obj.a.call({})\n{}\n// obj.b.call({})\n{}\n// obj.c.call({})\nwindow {window: window, self: window, document: document, name: '', location: location, …}\n\n\n我们现在发现this的指向也如同我们熟悉的普通函数和箭头函数的区别一样，箭头函数无法直接更改this指向，随后我们尝试更改obj.c()的父级函数的this指向，当然现在的obj对象已经无法通过操作更改父级函数的this指向，我们需要重新创建函数func：\n\nfunction func(){\n  let obj = {\n    a: function(){\n      console.log(this)\n    },\n    b(){\n      console.log(this)\n    },\n    c:()=>{\n      console.log(this)  \n    }\n }\n obj.a()\n obj.b()\n obj.c()\n obj.a.call({})\n obj.b.call({})\n obj.c.call({})\n}\n\n\n我们直接执行func()我们会发现以下结果：\n\n{a: ƒ, b: ƒ, c: ƒ} // obj.a()\n{a: ƒ, b: ƒ, c: ƒ} // obj.b()\nwindow {window: window, self: window, document: document, name: '', location: location, …} // obj.c()\n{} // obj.a.call({})\n{} // obj.b.call({})\nwindow {window: window, self: window, document: document, name: '', location: location, …} //obj.c.call({})\n\n\n我们更改父级函数的this指向后，得到：\n\n{a: ƒ, b: ƒ, c: ƒ} // obj.a()\n{a: ƒ, b: ƒ, c: ƒ} // obj.a()\n{} // obj.a()\n{} // obj.b.call({})\n{} // obj.b.call({})\n{} // obj.b.call({})\n\n\n我们发现更改对象内的箭头函数的父级对象的this指向时，箭头函数的this只想也会改变，而函数b与函数a的this指向可以直接修改。",charsets:{cjk:!0}},{title:"常见 css 代码库",frontmatter:{},regularPath:"/%E4%BB%A3%E7%A0%81/%E5%B8%B8%E8%A7%81%20css%20%E4%BB%A3%E7%A0%81%E5%BA%93.html",relativePath:"代码/常见 css 代码库.md",key:"v-34f6f7a4",path:"/dai-ma/chang-jian-css-dai-ma-ku.html",headers:[{level:3,title:"常见 css 代码库",slug:"常见-css-代码库",normalizedTitle:"常见 css 代码库",charIndex:2}],headersStr:"常见 css 代码库",content:"# 常见 css 代码库",normalizedContent:"# 常见 css 代码库",charsets:{cjk:!0}},{title:"常见 js 代码库",frontmatter:{},regularPath:"/%E4%BB%A3%E7%A0%81/%E5%B8%B8%E8%A7%81%20js%20%E4%BB%A3%E7%A0%81%E5%BA%93.html",relativePath:"代码/常见 js 代码库.md",key:"v-cc890f28",path:"/dai-ma/chang-jian-js-dai-ma-ku.html",headers:[{level:3,title:"指定范围内的随机数",slug:"指定范围内的随机数",normalizedTitle:"指定范围内的随机数",charIndex:16},{level:3,title:"时间格式化",slug:"时间格式化",normalizedTitle:"时间格式化",charIndex:227},{level:3,title:"时间轴(不考虑时间，只考虑几秒前，几分钟前，几小时前，几天前，几月前，几年前)",slug:"时间轴-不考虑时间-只考虑几秒前-几分钟前-几小时前-几天前-几月前-几年前",normalizedTitle:"时间轴(不考虑时间，只考虑几秒前，几分钟前，几小时前，几天前，几月前，几年前)",charIndex:1159},{level:3,title:"过滤对象中为空的值",slug:"过滤对象中为空的值",normalizedTitle:"过滤对象中为空的值",charIndex:2080},{level:3,title:"数组去重",slug:"数组去重",normalizedTitle:"数组去重",charIndex:2593}],headersStr:"指定范围内的随机数 时间格式化 时间轴(不考虑时间，只考虑几秒前，几分钟前，几小时前，几天前，几月前，几年前) 过滤对象中为空的值 数组去重",content:"# 常见 js 代码库\n\n\n# 指定范围内的随机数\n\n/*\n* @param {String|*}\n* @returns {String}\n* @example  randoms(10,2);    //8\n*/\n  function randoms(max,min){\n    if(min===undefined) min=0;\n    return Math.floor(Math.random()*(max-min)+min);\n }\n\n\n\n# 时间格式化\n\n/**\n * 转换格式\n * @param {String} formatStr\n * @param {String|*} time 时间\n * @returns {String}\n * @example formatDate('YYYY-MM-DD hh:mm:ss', new Date())\n */\nfunction formatDate(formatStr, time) {\n  const date = time && new Date(time) || new Date()\n  const o = {\n    'M+': date.getMonth() + 1, // month\n    'D+': date.getDate(), // day\n    'h+': date.getHours(), // hour\n    'm+': date.getMinutes(), // minute\n    's+': date.getSeconds(), // second\n    'q+': Math.floor((date.getMonth() + 3) / 3), // quarter\n    'S': date.getMilliseconds() // millisecond\n  }\n  if (/(Y+)/.test(formatStr)) {\n    formatStr = formatStr.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n  }\n  for (const k in o) {\n    if (new RegExp('(' + k + ')').test(formatStr)) {\n      formatStr = formatStr.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length))\n    }\n  }\n  return formatStr\n}\n\n\n\n# 时间轴(不考虑时间，只考虑几秒前，几分钟前，几小时前，几天前，几月前，几年前)\n\n/**\n * 转换格式\n * @param {String} str 时间\n * @returns {String}\n * @example formatTime(new Date()) // 4分钟前\n */\nfunction formatAgo(str) {\n  if (!str) return '';\n  const date = new Date(Number(str));\n  const time = new Date().getTime() - date.getTime(); // 现在的时间-传入的时间 = 相差的时间（单位 = 毫秒）\n  if (time < 0) {\n    return '';\n  } else if (time / 1000 < 30) {\n    return '刚刚';\n  } else if (time / 1000 < 60) {\n    return parseInt(String(time / 1000)) + '秒前';\n  } else if (time / 60000 < 60) {\n    return parseInt(String(time / 60000)) + '分钟前';\n  } else if (time / 3600000 < 24) {\n    return parseInt(String(time / 3600000)) + '小时前';\n  } else if (time / 86400000 < 31) {\n    return parseInt(String(time / 86400000)) + '天前';\n  } else if (time / 2592000000 < 12) {\n    return parseInt(String(time / 2592000000)) + '月前';\n  } else {\n    return parseInt(String(time / 31536000000)) + '年前';\n  }\n}\n\n\n\n# 过滤对象中为空的值\n\n/**\n * 过滤对象中为空的值\n * description：因为在有的对象中本身没有赋值，但是往后台传值还是会把undefined传过去，该方法就是过滤掉对象中为空或者null或者undefined的值，本方法采用了递归，可以层层过滤\n * @param {object} data\n * @return {object}\n */\nfunction filterObj(data) {\n  const objClone = {}\n  for (const i in data) {\n    if (data[i] && typeof data[i] === 'object') {\n      objClone[i] = filterObj(data[i])\n    } else {\n      if (!data[i] || data[i].length === 0) {\n        delete data[i]\n      } else {\n        objClone[i] = data[i]\n      }\n    }\n  }\n  return objClone\n}\n\n\n\n# 数组去重\n\n/*\n* @param [] arr\n* @returns []\n* @example  unique([1,1,1,2,3,4,4,5,7,7]); // [1,2,3,4,5,7]\n*/\n  function unique(arr) {\n            if (!arr) {\n                return '参数为数组必传'\n            }\n            for (var i = 0; i < arr.length; i++) {\n                for (var j = i + 1; j < arr.length; j++) {\n                    if (arr[i] == arr[j]) {\n                        arr.splice(j, 1);\n                        j--\n                    }\n                }\n            }\n            return arr\n        }\n",normalizedContent:"# 常见 js 代码库\n\n\n# 指定范围内的随机数\n\n/*\n* @param {string|*}\n* @returns {string}\n* @example  randoms(10,2);    //8\n*/\n  function randoms(max,min){\n    if(min===undefined) min=0;\n    return math.floor(math.random()*(max-min)+min);\n }\n\n\n\n# 时间格式化\n\n/**\n * 转换格式\n * @param {string} formatstr\n * @param {string|*} time 时间\n * @returns {string}\n * @example formatdate('yyyy-mm-dd hh:mm:ss', new date())\n */\nfunction formatdate(formatstr, time) {\n  const date = time && new date(time) || new date()\n  const o = {\n    'm+': date.getmonth() + 1, // month\n    'd+': date.getdate(), // day\n    'h+': date.gethours(), // hour\n    'm+': date.getminutes(), // minute\n    's+': date.getseconds(), // second\n    'q+': math.floor((date.getmonth() + 3) / 3), // quarter\n    's': date.getmilliseconds() // millisecond\n  }\n  if (/(y+)/.test(formatstr)) {\n    formatstr = formatstr.replace(regexp.$1, (date.getfullyear() + '').substr(4 - regexp.$1.length))\n  }\n  for (const k in o) {\n    if (new regexp('(' + k + ')').test(formatstr)) {\n      formatstr = formatstr.replace(regexp.$1, regexp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length))\n    }\n  }\n  return formatstr\n}\n\n\n\n# 时间轴(不考虑时间，只考虑几秒前，几分钟前，几小时前，几天前，几月前，几年前)\n\n/**\n * 转换格式\n * @param {string} str 时间\n * @returns {string}\n * @example formattime(new date()) // 4分钟前\n */\nfunction formatago(str) {\n  if (!str) return '';\n  const date = new date(number(str));\n  const time = new date().gettime() - date.gettime(); // 现在的时间-传入的时间 = 相差的时间（单位 = 毫秒）\n  if (time < 0) {\n    return '';\n  } else if (time / 1000 < 30) {\n    return '刚刚';\n  } else if (time / 1000 < 60) {\n    return parseint(string(time / 1000)) + '秒前';\n  } else if (time / 60000 < 60) {\n    return parseint(string(time / 60000)) + '分钟前';\n  } else if (time / 3600000 < 24) {\n    return parseint(string(time / 3600000)) + '小时前';\n  } else if (time / 86400000 < 31) {\n    return parseint(string(time / 86400000)) + '天前';\n  } else if (time / 2592000000 < 12) {\n    return parseint(string(time / 2592000000)) + '月前';\n  } else {\n    return parseint(string(time / 31536000000)) + '年前';\n  }\n}\n\n\n\n# 过滤对象中为空的值\n\n/**\n * 过滤对象中为空的值\n * description：因为在有的对象中本身没有赋值，但是往后台传值还是会把undefined传过去，该方法就是过滤掉对象中为空或者null或者undefined的值，本方法采用了递归，可以层层过滤\n * @param {object} data\n * @return {object}\n */\nfunction filterobj(data) {\n  const objclone = {}\n  for (const i in data) {\n    if (data[i] && typeof data[i] === 'object') {\n      objclone[i] = filterobj(data[i])\n    } else {\n      if (!data[i] || data[i].length === 0) {\n        delete data[i]\n      } else {\n        objclone[i] = data[i]\n      }\n    }\n  }\n  return objclone\n}\n\n\n\n# 数组去重\n\n/*\n* @param [] arr\n* @returns []\n* @example  unique([1,1,1,2,3,4,4,5,7,7]); // [1,2,3,4,5,7]\n*/\n  function unique(arr) {\n            if (!arr) {\n                return '参数为数组必传'\n            }\n            for (var i = 0; i < arr.length; i++) {\n                for (var j = i + 1; j < arr.length; j++) {\n                    if (arr[i] == arr[j]) {\n                        arr.splice(j, 1);\n                        j--\n                    }\n                }\n            }\n            return arr\n        }\n",charsets:{cjk:!0}},{title:"写给女朋友的中级前端面试秘籍（含详细答案，15k级别）",frontmatter:{},regularPath:"/%E6%94%B6%E8%97%8F%E6%96%87%E7%AB%A0/%E5%86%99%E7%BB%99%E5%A5%B3%E6%9C%8B%E5%8F%8B%E7%9A%84%E4%B8%AD%E7%BA%A7%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E7%A7%98%E7%B1%8D%EF%BC%88%E5%90%AB%E8%AF%A6%E7%BB%86%E7%AD%94%E6%A1%88%EF%BC%8C15k%E7%BA%A7%E5%88%AB%EF%BC%89.html",relativePath:"收藏文章/写给女朋友的中级前端面试秘籍（含详细答案，15k级别）.md",key:"v-6695a75d",path:"/shou-cang-wen-zhang/xie-gei-nu-peng-you-de-zhong-ji-qian-duan-mian-shi-mi-ji-han-xiang-xi-da-an-15kji-bie-.html",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:155},{level:2,title:"HTML篇",slug:"html篇",normalizedTitle:"html篇",charIndex:248},{level:2,title:"CSS篇",slug:"css篇",normalizedTitle:"css篇",charIndex:322},{level:2,title:"JS基础篇",slug:"js基础篇",normalizedTitle:"js基础篇",charIndex:561},{level:2,title:"框架篇",slug:"框架篇",normalizedTitle:"框架篇",charIndex:1858},{level:3,title:"React",slug:"react",normalizedTitle:"react",charIndex:1866},{level:2,title:"工具",slug:"工具",normalizedTitle:"工具",charIndex:2371},{level:3,title:"webpack的基础知识",slug:"webpack的基础知识",normalizedTitle:"webpack的基础知识",charIndex:2378},{level:2,title:"性能优化",slug:"性能优化",normalizedTitle:"性能优化",charIndex:1915},{level:3,title:"讲讲web各个阶段的性能优化？",slug:"讲讲web各个阶段的性能优化",normalizedTitle:"讲讲web各个阶段的性能优化？",charIndex:2443},{level:3,title:"webpack代码分割是怎么做的？",slug:"webpack代码分割是怎么做的",normalizedTitle:"webpack代码分割是怎么做的？",charIndex:2529},{level:2,title:"网络",slug:"网络",normalizedTitle:"网络",charIndex:2619},{level:2,title:"手写系列",slug:"手写系列",normalizedTitle:"手写系列",charIndex:3082},{level:3,title:"基础",slug:"基础",normalizedTitle:"基础",charIndex:358},{level:3,title:"进阶",slug:"进阶",normalizedTitle:"进阶",charIndex:207}],headersStr:"前言 HTML篇 CSS篇 JS基础篇 框架篇 React 工具 webpack的基础知识 性能优化 讲讲web各个阶段的性能优化？ webpack代码分割是怎么做的？ 网络 手写系列 基础 进阶",content:"# 写给女朋友的中级前端面试秘籍（含详细答案，15k级别）\n\n> 作者：ssh_晨曦时梦见兮\n> \n> 链接：https://juejin.cn/post/6844904115428917255\n> \n> 来源：稀土掘金\n> \n> 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n\n# 前言\n\n本篇文章，献给我家女朋友，祝她在杭州找一个965的好公司！\n\n> 题外话：关于中级 -> 高级的进阶，我也写了一篇文章，希望对你有帮助：\n\n写给初中级前端的高级进阶指南\n\n\n# HTML篇\n\n# HTML5语义化\n\nhtml5语义化标签\n\n> 百度ife的h5语义化文章，讲得很好，很多不错的公司都会问语义化的问题。\n\n\n# CSS篇\n\n# CSS常见面试题\n\n50道CSS经典面试题\n\n> CSS基础有的公司很重视，在面试前还是需要好好复习一遍的。\n\n# 能不能讲一讲Flex布局，以及常用的属性？。\n\n阮一峰的flex系列\n\n> Flex布局是高频考点，而且是平常开发中最常用的布局方式之一，一定要熟悉。\n\n# BFC是什么？能解决什么问题？\n\n什么是BFC？什么条件下会触发？应用场景有哪些？\n\n> 关于bfc，可以看看三元大佬总结的文章\n\n这篇文章里，顺便也把外边距重叠的问题讲了一下。\n\n\n# JS基础篇\n\n# 讲讲JS的数据类型？\n\n最新的 ECMAScript 标准定义了 8种数据类型:\n\n * 6 种原始类型\n   * Boolean\n   * Undefined\n   * Number\n   * BigInt\n   * String\n   * Symbol\n * null\n * Object\n * Function\n\n> developer.mozilla.org/en-US/docs/…\n\n# 讲讲Map和Set？\n\n 1. Map的key相比较普通对象来说更为灵活，普通对象的key只能以基础数据类型作为key值，并且所有传入的key值都会被转化成string类型，而Map的key可以是各种数据类型格式。\n 2. Set可以讲讲它去重的特性。\n\n# WeakMap和Map之间的区别？\n\nWeakMap只能以复杂数据类型作为key，并且key值是弱引用，对于垃圾回收更加友好。\n\n# 讲讲原型链？\n\nJavaScript深入之从原型到原型链\n\n> 关于原型链，虽然现在用的不太多了，但是__proto__和prototype之间的关系，以及对于属性的向上查找这些还是一定要清楚的，其余不用看的太细。\n\n# 讲讲this？\n\nJavaScript中的this\n\n>  1. this指向调用者这个关系一定要清楚\n>  2. 要知道改变this指向的几种方式(call, bind, apply)\n>  3. 箭头函数中this的特殊性要能讲清楚\n\n# 浅拷贝和深拷贝的区别\n\n * 浅拷贝：一般指的是把对象的第一层拷贝到一个新对象上去，比如\n\nvar a = { count: 1, deep: { count: 2 } }\nvar b = Object.assign({}, a)\n// 或者\nvar b = {...a}\n复制代码\n\n\n * 深拷贝：一般需要借助递归实现，如果对象的值还是个对象，要进一步的深入拷贝，完全替换掉每一个复杂类型的引用。\n\nvar deepCopy = (obj) => {\n    var ret = {}\n    for (var key in obj) {\n        var value = obj[key]\n        ret[key] = typeof value === 'object' ? deepCopy(value) : value\n    }\n    return ret\n}\n复制代码\n\n\n对于同一个用例来说\n\n// 浅拷贝\nvar a = { count: 1, deep: { count: 2 } }\nvar b = {...a}\n\na.deep.count = 5\nb.deep.count // 5\n\nvar a = { count: 1, deep: { count: 2 } }\nvar b = deepCopy(a)\na.deep.count = 5\nb.deep.count // 2\n\n\n# 讲讲事件冒泡和事件捕获以及事件代理？\n\n你真的理解 事件冒泡 和 事件捕获 吗？\n\n\n# 框架篇\n\n\n# React\n\nReact需要尽可能的保证熟练。因为作为中级工程师来说，公司可能不会让你去写框架，调性能优化，但是一定是会让你保质保量的完成开发任务的，这需要你能熟练掌握框架。\n\n# React2019高频面试题\n\n2019年17道高频React面试题及详解\n\n> 这些题可以先过一下，如果暂时不能理解的就先跳过，不需要死磕。\n\n# 有没有使用过 React Hooks？\n\n * 常用的有哪些？都有什么作用？\n * 如何使用hook在依赖改变的时候重新发送请求？\n * 写过自定义hook吗？解决了哪些问题。\n * 讲讲React Hooks的闭包陷阱，你是怎么解决的？\n\nuseEffect 完整指南\n\n> 其实关于Hook的问题，把Dan的博文稍微过一遍，基本上就可以和面试官谈笑风生了。\n\n# 讲讲React中的组件复用？\n\n【React深入】从Mixin到HOC再到Hook\n\n> 这篇文章从mixin到HOC到Hook，详细的讲解了React在组件复用中做的一些探索和发展，能把这个好好讲明白，面试官也会对你的React实力刮目相看。\n\n另外这篇文章中的高阶组件和Hook本身也是高频考点。\n\n\n# 工具\n\n\n# webpack的基础知识\n\n这个系列从基础到优化都有，可以自己选择深入 掘金刘小夕的webpack系列\n\n\n# 性能优化\n\n\n# 讲讲web各个阶段的性能优化？\n\nReact 16 加载性能优化指南\n\n> 这个很长，很细节，一样不要死磕其中的某一个点，对于你大概知道的点再巩固一下印象就ok。\n\n\n# webpack代码分割是怎么做的？\n\nwebpack的代码分割（路由懒加载同理）\n\n> 路由懒加载和webpack异步加载模块都是这个import()语法，值得仔细看看。\n\n\n# 网络\n\n# 讲讲http的基本结构？\n\nhttp的基础结构\n\n# 说说常用的http状态码？\n\nhttp状态码\n\n# 浏览器从输入url到渲染页面，发生了什么？\n\n细说浏览器输入URL后发生了什么\n\n# 讲讲你对cookie的理解？包括SameSite属性。\n\n预测最近面试会考 Cookie 的 SameSite 属性\n\n> 这篇文章可以主要讲chrome80新增的cookie的SameSite属性，另外对于cookie整体也可以复习和回顾一遍，非常棒~\n\n# 谈谈https的原理？为什么https能保证安全？\n\n谈谈 HTTPS\n\n> https也是一个高频考点，需要过一遍https的加密原理。\n\n# 谈谈前端的安全知识？XSS、CSRF，以及如何防范。\n\n寒冬求职之你必须要懂的Web安全\n\n> 安全问题也是很多公司必问的，毕竟谁也不希望自己的前端写的网站漏洞百出嘛。\n\n# 讲讲http的缓存机制吧，强缓存，协商缓存？\n\n深入理解浏览器的缓存机制\n\n> 浏览器缓存基本上是必问的，这篇文章非常值得一看。\n\n\n# 手写系列\n\n\n# 基础\n\n# 手写各种原生方法\n\n如何模拟实现一个new的效果？ 如何模拟实现一个 bind 的效果？ 如何实现一个 call/apply 函数？ 三元-手写代码系列\n\n> 说实话我不太喜欢手写代码的面试题，但是很多公司喜欢考这个，有余力的话还是过一遍吧。\n\n\n# 进阶\n\n手写Promise 20行\n\n> 精力有限的情况下，就先别背A+规范的promise手写了，但是如果有时间的话，可以大概过一遍文章，然后如果面试的时候考到了，再用简短的方式写出来。\n\n剖析Promise内部结构，一步一步实现一个完整的、能通过所有Test case的Promise类",normalizedContent:"# 写给女朋友的中级前端面试秘籍（含详细答案，15k级别）\n\n> 作者：ssh_晨曦时梦见兮\n> \n> 链接：https://juejin.cn/post/6844904115428917255\n> \n> 来源：稀土掘金\n> \n> 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n\n# 前言\n\n本篇文章，献给我家女朋友，祝她在杭州找一个965的好公司！\n\n> 题外话：关于中级 -> 高级的进阶，我也写了一篇文章，希望对你有帮助：\n\n写给初中级前端的高级进阶指南\n\n\n# html篇\n\n# html5语义化\n\nhtml5语义化标签\n\n> 百度ife的h5语义化文章，讲得很好，很多不错的公司都会问语义化的问题。\n\n\n# css篇\n\n# css常见面试题\n\n50道css经典面试题\n\n> css基础有的公司很重视，在面试前还是需要好好复习一遍的。\n\n# 能不能讲一讲flex布局，以及常用的属性？。\n\n阮一峰的flex系列\n\n> flex布局是高频考点，而且是平常开发中最常用的布局方式之一，一定要熟悉。\n\n# bfc是什么？能解决什么问题？\n\n什么是bfc？什么条件下会触发？应用场景有哪些？\n\n> 关于bfc，可以看看三元大佬总结的文章\n\n这篇文章里，顺便也把外边距重叠的问题讲了一下。\n\n\n# js基础篇\n\n# 讲讲js的数据类型？\n\n最新的 ecmascript 标准定义了 8种数据类型:\n\n * 6 种原始类型\n   * boolean\n   * undefined\n   * number\n   * bigint\n   * string\n   * symbol\n * null\n * object\n * function\n\n> developer.mozilla.org/en-us/docs/…\n\n# 讲讲map和set？\n\n 1. map的key相比较普通对象来说更为灵活，普通对象的key只能以基础数据类型作为key值，并且所有传入的key值都会被转化成string类型，而map的key可以是各种数据类型格式。\n 2. set可以讲讲它去重的特性。\n\n# weakmap和map之间的区别？\n\nweakmap只能以复杂数据类型作为key，并且key值是弱引用，对于垃圾回收更加友好。\n\n# 讲讲原型链？\n\njavascript深入之从原型到原型链\n\n> 关于原型链，虽然现在用的不太多了，但是__proto__和prototype之间的关系，以及对于属性的向上查找这些还是一定要清楚的，其余不用看的太细。\n\n# 讲讲this？\n\njavascript中的this\n\n>  1. this指向调用者这个关系一定要清楚\n>  2. 要知道改变this指向的几种方式(call, bind, apply)\n>  3. 箭头函数中this的特殊性要能讲清楚\n\n# 浅拷贝和深拷贝的区别\n\n * 浅拷贝：一般指的是把对象的第一层拷贝到一个新对象上去，比如\n\nvar a = { count: 1, deep: { count: 2 } }\nvar b = object.assign({}, a)\n// 或者\nvar b = {...a}\n复制代码\n\n\n * 深拷贝：一般需要借助递归实现，如果对象的值还是个对象，要进一步的深入拷贝，完全替换掉每一个复杂类型的引用。\n\nvar deepcopy = (obj) => {\n    var ret = {}\n    for (var key in obj) {\n        var value = obj[key]\n        ret[key] = typeof value === 'object' ? deepcopy(value) : value\n    }\n    return ret\n}\n复制代码\n\n\n对于同一个用例来说\n\n// 浅拷贝\nvar a = { count: 1, deep: { count: 2 } }\nvar b = {...a}\n\na.deep.count = 5\nb.deep.count // 5\n\nvar a = { count: 1, deep: { count: 2 } }\nvar b = deepcopy(a)\na.deep.count = 5\nb.deep.count // 2\n\n\n# 讲讲事件冒泡和事件捕获以及事件代理？\n\n你真的理解 事件冒泡 和 事件捕获 吗？\n\n\n# 框架篇\n\n\n# react\n\nreact需要尽可能的保证熟练。因为作为中级工程师来说，公司可能不会让你去写框架，调性能优化，但是一定是会让你保质保量的完成开发任务的，这需要你能熟练掌握框架。\n\n# react2019高频面试题\n\n2019年17道高频react面试题及详解\n\n> 这些题可以先过一下，如果暂时不能理解的就先跳过，不需要死磕。\n\n# 有没有使用过 react hooks？\n\n * 常用的有哪些？都有什么作用？\n * 如何使用hook在依赖改变的时候重新发送请求？\n * 写过自定义hook吗？解决了哪些问题。\n * 讲讲react hooks的闭包陷阱，你是怎么解决的？\n\nuseeffect 完整指南\n\n> 其实关于hook的问题，把dan的博文稍微过一遍，基本上就可以和面试官谈笑风生了。\n\n# 讲讲react中的组件复用？\n\n【react深入】从mixin到hoc再到hook\n\n> 这篇文章从mixin到hoc到hook，详细的讲解了react在组件复用中做的一些探索和发展，能把这个好好讲明白，面试官也会对你的react实力刮目相看。\n\n另外这篇文章中的高阶组件和hook本身也是高频考点。\n\n\n# 工具\n\n\n# webpack的基础知识\n\n这个系列从基础到优化都有，可以自己选择深入 掘金刘小夕的webpack系列\n\n\n# 性能优化\n\n\n# 讲讲web各个阶段的性能优化？\n\nreact 16 加载性能优化指南\n\n> 这个很长，很细节，一样不要死磕其中的某一个点，对于你大概知道的点再巩固一下印象就ok。\n\n\n# webpack代码分割是怎么做的？\n\nwebpack的代码分割（路由懒加载同理）\n\n> 路由懒加载和webpack异步加载模块都是这个import()语法，值得仔细看看。\n\n\n# 网络\n\n# 讲讲http的基本结构？\n\nhttp的基础结构\n\n# 说说常用的http状态码？\n\nhttp状态码\n\n# 浏览器从输入url到渲染页面，发生了什么？\n\n细说浏览器输入url后发生了什么\n\n# 讲讲你对cookie的理解？包括samesite属性。\n\n预测最近面试会考 cookie 的 samesite 属性\n\n> 这篇文章可以主要讲chrome80新增的cookie的samesite属性，另外对于cookie整体也可以复习和回顾一遍，非常棒~\n\n# 谈谈https的原理？为什么https能保证安全？\n\n谈谈 https\n\n> https也是一个高频考点，需要过一遍https的加密原理。\n\n# 谈谈前端的安全知识？xss、csrf，以及如何防范。\n\n寒冬求职之你必须要懂的web安全\n\n> 安全问题也是很多公司必问的，毕竟谁也不希望自己的前端写的网站漏洞百出嘛。\n\n# 讲讲http的缓存机制吧，强缓存，协商缓存？\n\n深入理解浏览器的缓存机制\n\n> 浏览器缓存基本上是必问的，这篇文章非常值得一看。\n\n\n# 手写系列\n\n\n# 基础\n\n# 手写各种原生方法\n\n如何模拟实现一个new的效果？ 如何模拟实现一个 bind 的效果？ 如何实现一个 call/apply 函数？ 三元-手写代码系列\n\n> 说实话我不太喜欢手写代码的面试题，但是很多公司喜欢考这个，有余力的话还是过一遍吧。\n\n\n# 进阶\n\n手写promise 20行\n\n> 精力有限的情况下，就先别背a+规范的promise手写了，但是如果有时间的话，可以大概过一遍文章，然后如果面试的时候考到了，再用简短的方式写出来。\n\n剖析promise内部结构，一步一步实现一个完整的、能通过所有test case的promise类",charsets:{cjk:!0}},{title:"面试汇总",frontmatter:{},regularPath:"/%E9%9D%A2%E8%AF%95.html",relativePath:"面试.md",key:"v-33b03a91",path:"/mian-shi.html",headers:[{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:11},{level:3,title:"数据类型",slug:"数据类型",normalizedTitle:"数据类型",charIndex:26},{level:3,title:"数据类型的转换",slug:"数据类型的转换",normalizedTitle:"数据类型的转换",charIndex:372},{level:3,title:"逻辑判断",slug:"逻辑判断",normalizedTitle:"逻辑判断",charIndex:583},{level:3,title:"try-catch-finally",slug:"try-catch-finally",normalizedTitle:"try-catch-finally",charIndex:709}],headersStr:"JavaScript 数据类型 数据类型的转换 逻辑判断 try-catch-finally",content:"# 面试汇总\n\n\n# JavaScript\n\n\n# 数据类型\n\n * 基本数据类型\n   1. Boolean\n   2. null\n   3. undefined 表示变量未赋值时的属性.\n   4. Number 整数或浮点数，在做浮点数计算时可能会因为精度问题导致计算出错 （0.1+0.2 = 0.30000000000000004）\n   5. Bigint 任意精度的整数，甚至可以超过数字的安全整数限制(Number.MAX_VALUE)\n   6. String 字符串\n   7. Symbol 一种实例是唯一且不可改变的数据类型。\n * Object\n\n> 对象（Objects）和函数（functions）是这门语言的另外两个基本元素。你可以把对象当作存放值的一个命名容器，然后将函数当作你的程序能够执行的步骤。\n\n\n# 数据类型的转换\n\n> JavaScript是一种动态类型语言(dynamically typed language)。这意味着你在声明变量时可以不必指定数据类型，而数据类型会在代码执行时会根据需要自动转换。\n\n * 包含的数字和字符串的表达式中使用加法运算符（+），JavaScript 会把数字转换成字符串。\n * 在涉及其它运算符（译注：如下面的减号'-'）时，JavaScript语言不会把数字变为字符串。\n\n\n# 逻辑判断\n\n * 下面这些值将被计算出 false (also known as Falsy values):\n   * false\n   * undefined\n   * null\n   * 0\n   * NaN\n   * 空字符串（\"\"）\n\n\n# try-catch-finally",normalizedContent:"# 面试汇总\n\n\n# javascript\n\n\n# 数据类型\n\n * 基本数据类型\n   1. boolean\n   2. null\n   3. undefined 表示变量未赋值时的属性.\n   4. number 整数或浮点数，在做浮点数计算时可能会因为精度问题导致计算出错 （0.1+0.2 = 0.30000000000000004）\n   5. bigint 任意精度的整数，甚至可以超过数字的安全整数限制(number.max_value)\n   6. string 字符串\n   7. symbol 一种实例是唯一且不可改变的数据类型。\n * object\n\n> 对象（objects）和函数（functions）是这门语言的另外两个基本元素。你可以把对象当作存放值的一个命名容器，然后将函数当作你的程序能够执行的步骤。\n\n\n# 数据类型的转换\n\n> javascript是一种动态类型语言(dynamically typed language)。这意味着你在声明变量时可以不必指定数据类型，而数据类型会在代码执行时会根据需要自动转换。\n\n * 包含的数字和字符串的表达式中使用加法运算符（+），javascript 会把数字转换成字符串。\n * 在涉及其它运算符（译注：如下面的减号'-'）时，javascript语言不会把数字变为字符串。\n\n\n# 逻辑判断\n\n * 下面这些值将被计算出 false (also known as falsy values):\n   * false\n   * undefined\n   * null\n   * 0\n   * nan\n   * 空字符串（\"\"）\n\n\n# try-catch-finally",charsets:{cjk:!0}},{title:"常见 正则 代码库",frontmatter:{},regularPath:"/%E4%BB%A3%E7%A0%81/%E5%B8%B8%E8%A7%81%20%E6%AD%A3%E5%88%99%20%E4%BB%A3%E7%A0%81%E5%BA%93.html",relativePath:"代码/常见 正则 代码库.md",key:"v-ee533d90",path:"/dai-ma/chang-jian-zheng-ze-dai-ma-ku.html",headers:[{level:3,title:"常见 正则 代码库",slug:"常见-正则-代码库",normalizedTitle:"常见 正则 代码库",charIndex:2}],headersStr:"常见 正则 代码库",content:"# 常见 正则 代码库",normalizedContent:"# 常见 正则 代码库",charsets:{cjk:!0}}],themeConfig:{nav:[],sidebar:["","uniCloud","函数的一些研究","面试",{title:"Java Script",children:["JavaScript/同步异步"]},{title:"Nginx",children:[{title:"Nginx安装及配置",children:["Nginx/01_Nginx安装及配置/1.Nginx简介","Nginx/01_Nginx安装及配置/2.Nginx安装","Nginx/01_Nginx安装及配置/3.Nginx配置文件"]},{title:"Nginx模块管理",children:["Nginx/02_Nginx模块管理/Nginx常用模块01","Nginx/02_Nginx模块管理/Nginx常用模块02","Nginx/02_Nginx模块管理/Nginx常用模块03"]},{title:"LNMP环境部署",children:["Nginx/03_LNMP环境部署/1.Nginx网站服务","Nginx/03_LNMP环境部署/2.LNMP环境部署"]},{title:"Nginx优化管理",children:["Nginx/04_nginx优化管理/1. Nginx优化及防盗链/Nginx优化及防盗链","Nginx/04_nginx优化管理/2. Nginx Rewrite/Nginx Rewrite"]}]},{title:"代码",children:["代码/常见 css 代码库","代码/常见 js 代码库","代码/常见 正则 代码库"]},{title:"收藏文章",children:["收藏文章/写给女朋友的中级前端面试秘籍（含详细答案，15k级别）"]}]}};e(343);Ii.component("Badge",(function(){return Promise.all([e.e(0),e.e(3)]).then(e.bind(null,441))})),Ii.component("CodeGroup",(function(){return Promise.all([e.e(0),e.e(5)]).then(e.bind(null,420))})),Ii.component("CodeBlock",(function(){return Promise.all([e.e(0),e.e(4)]).then(e.bind(null,421))}));e(344);var hs=[{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{}],ms=[];function gs(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}e(123);function vs(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function _s(n,t,e){return t&&vs(n.prototype,t),e&&vs(n,e),Object.defineProperty(n,"prototype",{writable:!1}),n}e(194);e(183);function xs(n,t){return(xs=Object.setPrototypeOf||function(n,t){return n.__proto__=t,n})(n,t)}e(184),e(185);function ys(n){return(ys=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function ws(n,t){if(t&&("object"===za(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}function bs(n){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var e,r=ys(n);if(t){var i=ys(this).constructor;e=Reflect.construct(r,arguments,i)}else e=r.apply(this,arguments);return ws(this,e)}}var ks=function(n){!function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&xs(n,t)}(e,n);var t=bs(e);function e(){return gs(this,e),t.apply(this,arguments)}return _s(e)}(function(){function n(){gs(this,n),this.store=new Ii({data:{state:{}}})}return _s(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,t){Ii.set(this.store.state,n,t)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(ks.prototype,{getPageAsyncComponent:Fa,getLayoutAsyncComponent:Ba,getAsyncComponent:Ha,getVueComponent:Ga});var $s={install:function(n){var t=new ks;n.$vuepress=t,n.prototype.$vuepress=t}};e(115);function Ss(n){n.beforeEach((function(t,e,r){if(zs(n,t.path))r();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){var i=t.path.replace(/\/$/,"")+".html";zs(n,i)?r(i):r()}else r();else{var o=t.path+"/",a=t.path+".html";zs(n,a)?r(a):zs(n,o)?r(o):r()}}))}function zs(n,t){var e=t.toLowerCase();return n.options.routes.some((function(n){return n.path.toLowerCase()===e}))}var js={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var t=this.pageKey||this.$parent.$page.key;return Va("pageKey",t),Ii.component(t)||Ii.component(t,Fa(t)),Ii.component(t)?n(t):n("")}},Ts={functional:!0,props:{slotKey:String,required:!0},render:function(n,t){var e=t.props,r=t.slots;return n("div",{class:["content__".concat(e.slotKey)]},r()[e.slotKey])}},Cs={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Es=(e(346),e(347),Object(us.a)(Cs,(function(){var n=this.$createElement,t=this._self._c||n;return t("span",[t("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[t("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),t("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),t("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function Ps(){return(Ps=Object(r.a)(regeneratorRuntime.mark((function n(t){var e,r,i,o;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:ds.routerBase||ds.base,Ss(r=new $a({base:e,mode:"history",fallback:!1,routes:fs,scrollBehavior:function(n,t,e){return e||(n.hash?!Ii.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})}})),i={},n.prev=4,n.next=7,Promise.all(hs.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:Ii,options:i,router:r,siteData:ds,isServer:t})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return o=new Ii(Object.assign(i,{router:r,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},ms.map((function(t){return n(t)})))])}})),n.abrupt("return",{app:o,router:r});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}Ii.config.productionTip=!1,Ii.use($a),Ii.use($s),Ii.mixin(function(n,t){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ii;Sa(t),e.$vuepress.$set("siteData",t);var r=n(e.$vuepress.$get("siteData")),i=new r,o=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(i)),a={};return Object.keys(o).reduce((function(n,t){return t.startsWith("$")&&(n[t]=o[t].get),n}),a),{computed:a}}((function(n){return function(){function t(){gs(this,t)}return _s(t,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,t,e=this.$site.locales,r=void 0===e?{}:e;for(var i in r)"/"===i?t=r[i]:0===this.$page.path.indexOf(i)&&(n=r[i]);return n||t||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var n=this.$page.frontmatter.canonicalUrl;return"string"==typeof n&&n}},{key:"$title",get:function(){var n=this.$page,t=this.$page.frontmatter.metaTitle;if("string"==typeof t)return t;var e=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return e?r?r+" | "+e:e:r||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var t=n.filter((function(n){return"description"===n.name}))[0];if(t)return t.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,t){for(var e=0;e<n.length;e++){var r=n[e];if(r.path.toLowerCase()===t.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),t}()}),ds)),Ii.component("Content",js),Ii.component("ContentSlotsDistributor",Ts),Ii.component("OutboundLink",Es),Ii.component("ClientOnly",{functional:!0,render:function(n,t){var e=t.parent,r=t.children;if(e._isMounted)return r;e.$once("hook:mounted",(function(){e.$forceUpdate()}))}}),Ii.component("Layout",Ba("Layout")),Ii.component("NotFound",Ba("NotFound")),Ii.prototype.$withBase=function(n){var t=this.$site.base;return"/"===n.charAt(0)?t+n.slice(1):n},window.__VUEPRESS__={version:"1.9.7",hash:"93285ce"},function(n){return Ps.apply(this,arguments)}(!1).then((function(n){var t=n.app;n.router.onReady((function(){t.$mount("#app")}))}))}]);