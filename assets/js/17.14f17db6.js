(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{432:function(t,a,s){"use strict";s.r(a);var n=s(56),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx-rewrite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-rewrite"}},[t._v("#")]),t._v(" Nginx Rewrite")]),t._v(" "),s("p",[t._v("现在Nginx已经成为很多公司作为前端反向代理服务器的首选，在实际工作中往往会遇到很多跳转(重写URL)的需求。比如更换域名后需要保持旧的域名能跳转到新的域名上、某网页发生改变需要跳转到新的页面、网站防盗链等等需求。如果在后端使用的Apache服务器， 虽然也能做跳转,规则库也很强大，但是用Nginx跳转效率会更高，这也是学习本章的目的所在。")]),t._v(" "),s("h2",{attrs:{id:"rewrite前置知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rewrite前置知识"}},[t._v("#")]),t._v(" Rewrite前置知识")]),t._v(" "),s("h3",{attrs:{id:"_1、rewrite跳转场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、rewrite跳转场景"}},[t._v("#")]),t._v(" 1、Rewrite跳转场景")]),t._v(" "),s("p",[t._v("Rewrite跳转场景主要包括以下几种:")]),t._v(" "),s("p",[t._v("​        1.可以调整用户浏览的URL,看起来更规范，合乎开发及产品人员的需求;")]),t._v(" "),s("p",[t._v("​        2.为了让搜索引擎搜录网站内容及用户体验更好，企业会将动态URL地址伪装成静态地址提供服务;")]),t._v(" "),s("p",[t._v("​        3.网址换新域名后，让旧的访问跳转到新的域名上。例如，访问京东的360buy.com会跳转到jd.com;")]),t._v(" "),s("p",[t._v("​        4.根据特殊变量、目录、客户端的信息进行URL调整等。")]),t._v(" "),s("h3",{attrs:{id:"_2、rewrite跳转实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、rewrite跳转实现"}},[t._v("#")]),t._v(" 2、Rewrite跳转实现")]),t._v(" "),s("p",[t._v("Nginx 是通过ngx_http_rewrite_module模块支持url重写、支持if条件判断，但不支持else。另外该模块需要PCRE支持，应在编译Nginx时指定PCRE（PCRE库支持正则表达式）支持，默认已经安装。根据相关变量重定向和选择不同的配置，从一个location跳转到另一个location, 不过这样的循环最多可以执行10次，超过后Nginx将返回500错误。同时，重写模块包含set指令，来创建新的变量并设其值，这在有些情景下非常有用的，如记录条件标识、传递参数到其他location.记录做了什么等等。rewrite功能就是， 使用Nginx提供的全局变量或自己设置的变量，结合正则表达式和标志位实现url 重写以及重定向。")]),t._v(" "),s("h3",{attrs:{id:"_3、rewrite实际场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、rewrite实际场景"}},[t._v("#")]),t._v(" 3、Rewrite实际场景")]),t._v(" "),s("p",[t._v("在实际工作场景，Nginx跳转需求有三种方式可实现。可以直接用rewrite进行匹配跳转，也可以使用if匹配全局变量后跳转，另外还可以使用location匹配再跳转，所以rewrite只能放在server{}, if{},location{}段中，例如location只能对域名后边的除去传递的参数外的字符串起作用，例如http://www.domain.com/index.php?id=1只对/index.php重写。如果想对域名或参数字符串起作用，可以使用if全局变量匹配，也可以使用proxy_ pass反向代理。")]),t._v(" "),s("h2",{attrs:{id:"rewrite必备知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rewrite必备知识"}},[t._v("#")]),t._v(" Rewrite必备知识")]),t._v(" "),s("h3",{attrs:{id:"_1、正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、正则表达式"}},[t._v("#")]),t._v(" 1、正则表达式")]),t._v(" "),s("p",[t._v("学习Rewrite之前要对正则表达式要很熟悉，下表中列举出一些常用的正则表达式元字符。要深刻理解和学习每个元字符的含义，并且多动手进行实验，在实际生产环境中要结合多个元字符一起使用。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://pic-onemue-cn.oss-cn-beijing.aliyuncs.com/docs/onemue1647250052OQFGU8.png",alt:"A"}}),s("img",{attrs:{src:"images/2.png",alt:"sss"}})]),t._v(" "),s("h3",{attrs:{id:"_2、rewrite语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、rewrite语法"}},[t._v("#")]),t._v(" 2、Rewrite语法")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" rewrite regex replacement [flag]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nDefault: -\nContext: server, location,if\n")])])]),s("p",[t._v('如果regex匹配了一个请求的URI,该URI被替换为replacement（[rɪˈpleɪsmənt] 替换）。 rewrite 指令在配置文件中按照出现的顺序执行。可使用flag中止进一步的处理。如果replacement以"http://","https://"为起始的字符串，将中止处理，并返回重定向指令给客户端。')]),t._v(" "),s("p",[t._v("flag参数的值可以为:")]),t._v(" "),s("ul",[s("li",[t._v("last停止当前ngx_http.rewrite_module模块指令集的处理, 并为修改后的URI寻找新的匹配的location")]),t._v(" "),s("li",[t._v("break停止当前ngx_http.rewrite.module模块指令集的处理，与break（重定向模块中的break）指令作用相同，本条规则匹配完成即终止，不再匹配后面的任何规则")]),t._v(" "),s("li",[t._v('redirect返回302代码的临时重定向,当replacement不以"httpt://","https://“为起始的字符串时使用。浏览器地址会显示跳转后的URU地址，爬虫不会更新url (因为是临时)')]),t._v(" "),s("li",[t._v("permanent返回301代码的永久重定向。浏览器地址栏会显示跳转后的URL地址,爬虫更新url。")])]),t._v(" "),s("p",[t._v("如果后面不跟flag标记，那么默认是302临时重定向。在实际工作场景中，还有另一种return指定。因为301和302不能简单的只返回状态码，还必须有重定向的URL,这就是return指令无法返回301 ,302的原因了。")]),t._v(" "),s("p",[t._v("例子:")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t...\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^(/download/.*)/media/(.*)\\..*$ "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("/mp3/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v(".mp3 last")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^(/download/.*)/audio/(.*)\\..*$ "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("/mp3/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v(".ra  last")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t...\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v('但如果这些指令被放入"/download" location区块中，应将last flag替换为break,否则nginx会不断循环，达到10次后，返回500 error')]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /download")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t...\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^(/download/.*)/media/(.*)\\..*$ "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("/mp3/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v(".mp3 break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^(/download/.*)/audio/(.*)\\..*$ "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("/mp3/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v(".ra  break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t...\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("last一般写在server和if中，而break一般使用在location中。last不终止重写后的url匹配， 即新的url会再从server走一遍匹配流程， 而break终止重写后的匹配。")]),t._v(" "),s("p",[t._v('如果replacement包含请求参数，原来的请求参数将被追加在后面。如果不希望追加原来的请求参数,可在replacement字符串的末尾添加一个"?”符号， 例如:')]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^/users/(.*)$ /show?user="),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("? last")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3、location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、location"}},[t._v("#")]),t._v(" 3、location")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" location [ = | ~ | ~*| ^~] uri")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" @name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nDefault: -\nContext: server, location\n")])])]),s("p",[t._v("根据请求的URI设置配置。在一个server中location配置段可存在多个,用于实现URI到文件系统的路径映射;")]),t._v(" "),s("p",[t._v("匹配字符串分为两种:普通字符串(literal string)和正则表达式(regular expression)，其中~和~*用于正则表达式，其他前缀和无任何前缀都用于普通字符串。")]),t._v(" "),s("p",[t._v("@用来定义一个命名location。主要用于内部重定向，不能用来处理正常的请求。其用法如下：")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    try_files $uri $uri/ @custom\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" @custom")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...do something")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上例中，当尝试访问url找不到对应的文件就重定向到我们自定义的命名location（此处为custom）。"),s("strong",[t._v("值得注意的是，命名location中不能再嵌套其它的命名location")]),t._v("。")]),t._v(" "),s("p",[t._v("匹配顺序是:")]),t._v(" "),s("p",[t._v('1.先匹配普通字符串，将最精确的匹配暂时存储;\n2.然后按照配置文件中的声明顺序进行正则表达式匹配，只要匹配到一条正则表达式，则停止匹配,取正则表达式为匹配结果;\n3.如果所有正则表达式都匹配不上,则取1中存储的结果;\n4.如果普通字符串和正则表达式都匹配不上,则报404 NOT FOUND\n5.“^~“和"=“都能阻止继续搜索正则location。不同点是“^~”依然遵守“最大前缀”匹配规则，然而“=”不是“最大前缀"，而是必须是严格匹配\n6.只要遇到\'精确匹配exact match”,即使普通location没有带"=”或”^~“前缀，也一样会终止后面的匹配。例如:')]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("location = /uri         =开头表示精确前缀匹配，只有完全匹配才能生效。\nlocation ^~ /uri        ^~开头表示普通字符串匹配上以后不再进行正则匹配。\nlocation ~ pattern      ~开头表示区分大小写的正则匹配。\nlocation ~* pattern      ~*开头表示不区分大小写的正则匹配。\nlocation /uri           不带任何修饰符，表示前缀匹配。\nlocation /              通用匹配，任何未匹配到其他location的请求都会匹配到。\n")])])]),s("p",[t._v("配置举例：")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t[ configuration A ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t[ configuration B ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /documents/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t[ configuration C ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ^~ /images/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t[ configuration D ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* \\. (gif|jpg|jpeg)$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t[ configuration E ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#“/”请求匹配configuration A:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#“/index. html"请求匹配configuration B:')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#"/documents/ document.html"请求匹配configuration C:')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#"/images/1.gif"请求匹配configuration D:')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#"/documents/1.jpg"请求匹配configuration E.')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注意:正则匹配会根据匹配顺序，找到第一个匹配得正则表达式后将停止搜索。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#普通字符串匹配则无视顺序，只会选择最精确的匹配。")]),t._v("\n")])])]),s("p",[t._v("注:从功能看rewrite和location似乎有 点像，都能实现跳转,主要区别在于rewrite是在同一域名内更改获取资源的路径，而location是对一类路径做控制访问或反向代理，还可以proxy_pass到其他机器。很多情况下rewrite也会写在location里。")]),t._v(" "),s("h2",{attrs:{id:"rewrite配置案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rewrite配置案例"}},[t._v("#")]),t._v(" Rewrite配置案例")]),t._v(" "),s("h3",{attrs:{id:"yum安装nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yum安装nginx"}},[t._v("#")]),t._v(" YUM安装Nginx")]),t._v(" "),s("p",[t._v("安装完成后，修改配置文件(/etc/nginx/conf.d/default.conf )如下:")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" www.domain.com")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v(" /var/log/nginx/www.domain.com-access.log main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /opt/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index.html index.htm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    ......#省略部分内容\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("注意事项:做每一步场景测试之前请确定这个域名可以正常解析，每做下一个场景之前请删除上一个场景的配置，另外清除浏览器缓存。")]),t._v(" "),s("h3",{attrs:{id:"基于域名的跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于域名的跳转"}},[t._v("#")]),t._v(" 基于域名的跳转")]),t._v(" "),s("p",[t._v("现在公司旧域名www.domain.com有业务需求有变更，需要使用新域名www.newdomain.com代替,但是旧域名不能废除，需要跳转到新域名上,而且后面的参数保持不变。")]),t._v(" "),s("p",[t._v("在/etc/nginx/conf.d/default.conf 文件里的location下面添加如下内容:")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" www.newdomain.com www.domain.com")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v(" /var/log/nginx/www.domain.com-access.log main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /opt/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index.html index.htm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'www.domain.com'")]),t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^/(.*) http://www.newdomain.com/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" permanent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("修改配置文件后，重启nginx服务")]),t._v(" "),s("p",[t._v("使用客户端浏览器访问旧域名，域名直接跳转,按F12可以清楚的看到从旧域名www.domain.com跳转到了新域名www.newdomain.com上，状态码是301永久重定向。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://pic-onemue-cn.oss-cn-beijing.aliyuncs.com/docs/onemue1647250062WQPArz.png",alt:"image-20200420224452128"}})]),t._v(" "),s("p",[t._v("域名后面加参数跳转，因为在代码中很多的请求是带参数的,所以要保证参数都能正常跳转。浏览器输入模拟访问http://www.domain.com/test/1/index.php(虽然这个请求内容是不存在的)跳转到http://www.newdomain.com/test/1/index.php，从headers里面可以看到301实现了永久重定向跳转，而且域名后的参数也正常跳转。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://pic-onemue-cn.oss-cn-beijing.aliyuncs.com/docs/onemue16472500707ArGrS.png",alt:"image-20200420224508853"}})]),t._v(" "),s("h3",{attrs:{id:"基于客户端ip访问跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于客户端ip访问跳转"}},[t._v("#")]),t._v(" 基于客户端IP访问跳转")]),t._v(" "),s("p",[t._v("例如今天公司业务版本上线，所有IP访问任何内容都显示-一个固定维护页面，只有公司P访问正常。")]),t._v(" "),s("p",[t._v("在/etc/nginx/conf.d/default.conf文件里添加如下内容")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" www.newdomain.com www.domain.com")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v(" /var/log/nginx/www.domain.com-access.log main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#下面是添加的内容")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$rewrite")]),t._v(" true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'192.168.154.1'")]),t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$rewrite")]),t._v(" false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$rewrite")]),t._v(" = true)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" (.+) /maintenance.html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /maintenance.html")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /opt/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n   ......#省略很多内容 \n    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n$ echo 'Website is Maintaining， Please visit later !’> /opt/nginx/html/maintenance.html\n$ systemctl restart nginx\n")])])]),s("p",[t._v("只有IP为192.1 68.154.1能正常访问，其它地址都是维护页面，使用-一个局域网的其它IP地址用浏览器访问http://www.domain.com域名和加参数都是请求的maintenance.html页面的内容，而且状态码是200")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://pic-onemue-cn.oss-cn-beijing.aliyuncs.com/docs/onemue1647250076jF3K9c.png",alt:"image-20200420225020781"}})]),t._v(" "),s("h3",{attrs:{id:"基于旧域名跳转到新域名后面加目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于旧域名跳转到新域名后面加目录"}},[t._v("#")]),t._v(" 基于旧域名跳转到新域名后面加目录")]),t._v(" "),s("p",[t._v("例如现在访问的是http://bbs.domain.com,现在需要将这个域名下面的发帖都跳转到http://www.domain.com/bbs，注意保持域名跳转后的参数不变。")]),t._v(" "),s("p",[t._v("修改/et/nginx/conf. d/default.conf配置文件如下：")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" www.newdomain.com www.domain.com bbs.domain.com")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v(" /var/log/nginx/www.domain.com-access.log main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /opt/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index.html index.htm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'www.domain.com'")]),t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^/(.*) http://www.newdomain.com/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" permanent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /post")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" (.+) http://www.domain.com/bbbs"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" permanent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("模拟使用浏览器访问http://bbs.domain.com/post/1 .php ,跳转到http://www.ewdomain.com/bbs/post/1.php")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://pic-onemue-cn.oss-cn-beijing.aliyuncs.com/docs/onemue1647250082odF3xA.png",alt:"image-20200420225558188"}})]),t._v(" "),s("h3",{attrs:{id:"基于参数匹配的跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于参数匹配的跳转"}},[t._v("#")]),t._v(" 基于参数匹配的跳转")]),t._v(" "),s("p",[t._v("例如现在访问hp://www.domain.com/100-100|200)-100.html跳转到http://www.domain.com页面")]),t._v(" "),s("p",[t._v("编辑/etc/nginx/conf. d/default.conf文件里添加如下内容:")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* /100-(100|200)-(\\d+).html$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" (.*) http://www.domain.com permanent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("重启服务器后，使用浏览器访问http://www domain.com/100-200-100.html")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://pic-onemue-cn.oss-cn-beijing.aliyuncs.com/docs/onemue1647250089OyHGhK.png",alt:"image-20200420225829017"}})]),t._v(" "),s("h3",{attrs:{id:"基于目录下所有php结尾的文件跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于目录下所有php结尾的文件跳转"}},[t._v("#")]),t._v(" 基于目录下所有php结尾的文件跳转")]),t._v(" "),s("p",[t._v("访问http://www.domain.com/upload/1.php跳转到首页")]),t._v(" "),s("p",[t._v("编辑/etc/nginx/conf. d/default.conf文件里添加如下内容:")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* /upload/.*\\.php$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" (.+) http://www.domain.com permanent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("重启服务，浏览器访问http://www.domain.com/upload/1.php即可实现跳转")]),t._v(" "),s("h3",{attrs:{id:"基于最普通一条url请求的跳转-访问一个具体的页面跳转到首页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于最普通一条url请求的跳转-访问一个具体的页面跳转到首页"}},[t._v("#")]),t._v(" 基于最普通一条url请求的跳转,访问一个具体的页面跳转到首页")]),t._v(" "),s("p",[t._v("编辑/etc/nginx/conf.d/default.conf文件里添加如下内容:")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* ^/1/test.html")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" (.+) http://www.domain.com permanent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("重启服务后，浏览器访问http://www.domain.com/1/test.html跳转到首页")]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("关于Nginx rewrite本章的内容就这么多。其实在实际工作中远远不止这些场景，而且会更加复杂繁琐，希望同学们能举一反三，多加练习。")])])}),[],!1,null,null,null);a.default=e.exports}}]);