(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{426:function(t,s,a){"use strict";a.r(s);var e=a(56),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nginx常用模块一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx常用模块一"}},[t._v("#")]),t._v(" Nginx常用模块一")]),t._v(" "),a("p",[t._v("​\tNginx由内核和模块组成。Nginx本身做的工作实际很少，当它接到一个HTTP请求时，它仅仅是通过查找配置文件将此次请求映射到一个location block,而此location中所配置的各个指令则会启动不同的模块去完成工作，因此模块可以看做Nginx真正的劳动工作者. 通常一个location中的指令会涉及一个handler模块和多个filter模块(当然，多个location可以复用同一个模块) 。 handler模块负责处理请求,完成响应内容的生成，而filter模块对响应内容进行处理。用户根据自己的需要所开发的模块都属于第三方模块。正是有了这么多模块的支撑，Nginx的功能才会如此强大。")]),t._v(" "),a("p",[t._v("Nginx的模块从结构上分为核心模块、基础模块和第三方模块:")]),t._v(" "),a("ul",[a("li",[t._v("核心模块: HTTP模块、EVENT模块和MAIL模块;")]),t._v(" "),a("li",[t._v("基础模块: HTTP Access模块、HTTP FastCGI模块、HTTP Proxy模块和HTTP Rewrite模块;")]),t._v(" "),a("li",[t._v("第三方模块: HTTP Upstream Request Hash模块、 Notice模块和HTTP Access Key模块。")])]),t._v(" "),a("p",[t._v("Nginx的模块从功能上分为如下三类:")]),t._v(" "),a("ul",[a("li",[t._v("Handlers (处理器模块)：此类模块直接处理请求,并进行输出内容和修改headers信息等操作。Handlers处理器模块般只能有一个;")]),t._v(" "),a("li",[t._v("Filters (过滤器模块)：此类模块主要对其他处理器模块输出的内容进行修改操作,最后Nginx输出;")]),t._v(" "),a("li",[t._v("Proxies (代理类模块)：此类模块是Nginx的HTTP Upstream之类的模块，这些模块主要与后端一些服务比如FastCG|等进行交互，实现服务代理和负载均衡等功能。")])]),t._v(" "),a("h2",{attrs:{id:"_1、核心功能-core-functionality"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、核心功能-core-functionality"}},[t._v("#")]),t._v(" 1、核心功能(Core functionality)")]),t._v(" "),a("p",[t._v("functionality [ˌfʌŋkʃəˈnæləti] 功能")]),t._v(" "),a("ul",[a("li",[t._v("worker_processes")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" worker_processes number | auto")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" worker_processes "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: main\n")])])]),a("p",[t._v("最佳值取决于许多因素，包括(但不限于) CPU核心的数量、存储数据的硬盘驱动器的数量和负载模式。一般将其设置为可用CPU核心的数量。")]),t._v(" "),a("ul",[a("li",[t._v("worker_cpu_affinity ( [əˈfɪnəti] )")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" worker_cpu_affinity cpumask ...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_cpu_affinity")]),t._v(" auto [cpumask]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDefault: -\nContext: main\n")])])]),a("p",[t._v("将工作进程绑定到CPU集。每个CPU集由允许的CPU的位掩码表示。应该为每个工作进程定义一个单独的集合。默认情况下,工作进程不绑定到任何特定的CPU。该指令仅在FreeBSD和Linux上可用。")]),t._v(" "),a("p",[t._v("例如:")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_cpu_affinity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0010")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将每个工作进程绑定到单独的CPU")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_cpu_affinity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0101")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1010")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将第一个工作进程绑定到CPU0/CPU2,将第二个工作进程绑定到CPU1/CPU3，这个例子适用于超线程情况")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v(" auto")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_cpu_affinity")]),t._v(" auto")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1.9.10版本后允许将工作进程自动绑定到可用的CPU")]),t._v("\n")])])]),a("ul",[a("li",[t._v("worker_priority ( [praɪˈɔːrəti])")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" worker_priority number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" worker_priority "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: main\n")])])]),a("p",[t._v("为工作进程定义调度优先级，就像由nice命令执行一样: 负数表示优先级更高。允许范围通常在20到20之间")]),t._v(" "),a("ul",[a("li",[t._v("worker_rlimit_nofile")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" worker_rlimit_nofile number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDefault: -\nContext: main\n")])])]),a("p",[t._v("更改工作进程的最大打开文件数(rlimit_nofile)限制，默认较小，生产环境一般需要调高，如: 65535.（需要同时修改linux同一时间开启的文件数）")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改linux的同一时间最多可开启的文件数")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("ulimit")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果需要永久修改 则需要修改配置文件/etc/security/limits.conf")]),t._v("\n* soft nofile "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65536")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# open files  (-n)")]),t._v("\n* hard nofile "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65536")]),t._v("\n \n* soft nproc "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65565")]),t._v("\n* hard nproc "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65565")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# max user processes   (-u)")]),t._v("\n")])])]),a("ul",[a("li",[t._v("worker_connection")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" worker_connections number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" worker_connections "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: events\n")])])]),a("p",[t._v("设置能够被一个工作进程打开的最大并发连接数。应该记住，这个数字包括所有连接(例如，与代理服务器的连接等)，而不仅仅是与客户机的连接。另一个需要考虑的问题是，实际同时连接的数量不能超过打开文件的最大数量的当前限制( worker_rlimit_nofile.) 。")]),t._v(" "),a("ul",[a("li",[t._v("use")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" use method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDefault: -\nContext: events\n")])])]),a("p",[t._v("指定要使用的连接处理方法。通常不需要显式地指定它，因为nginx默认使用最有效的方法。如: useepoll;")]),t._v(" "),a("ul",[a("li",[t._v("accept_mutex （ [əkˈsept]  //,mjuː ˈtɛks// 接受互斥）")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" accept_mutex on|off")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" accept_mutex "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: events\n")])])]),a("p",[t._v("如果启用:on，工作进程将轮流接受新的连接。否则将通知所有工作进程有关新连接的信息，但只有一个进程可以获得连接。如果新连接的数量较低，则某些工作进程可能会浪费系统资源。在版本1.11.3之前，默认值为on。并发多的时候建议开启。")]),t._v(" "),a("h2",{attrs:{id:"_2、http核心模块-ngx-http-core-module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、http核心模块-ngx-http-core-module"}},[t._v("#")]),t._v(" 2、http核心模块 （ngx _http_core_module）")]),t._v(" "),a("ul",[a("li",[t._v("http")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" http")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nDefault: -\nContext: main\n")])])]),a("p",[t._v("提供配置文件上下文，其里面指定HTTP服务器指令")]),t._v(" "),a("ul",[a("li",[t._v("server")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nDefault: -\nContext: http\n")])])]),a("p",[t._v("配置虚拟主机。基于IP的和基于域名的虚拟主机。listen指令描述了接收连接的所有地址和端口 , server_name指令列出了所有的域名。")]),t._v(" "),a("ul",[a("li",[t._v("listen")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" listen address [:port] [defau1t_server] [ss1] [http2 | spdy]\n[proxy_protoco1] [setfib=number] [fastopen=number] [backlog=number]\n[rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind]\n[ipv6only=on|off] [reuseport] [so_keepalive=on|off| [keepid1e] : [keepintv1]:[keepcnt]]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" port [default_server] [ss1] [http2|spdy] [proxy_protoco1]\n[setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size]\n[accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport]\n[so_keepalive=on|off|[keepid1e] : [keepintv1] : [keepcnt]]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" unix:path [default_server] [ssl] [http2|spdy] [proxy_protoco1]\n[backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred]\n[bind] [so_keepalive=on|off|[keepidle]:[keepintv1]:[keepcnt]]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" listen *:80 | *:8000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认值")]),t._v("\nContext: server "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用字段：server")]),t._v("\n")])])]),a("p",[t._v("设置IP的地址和端口，或服务器将接受请求的Unix域套接字的路径,例如:")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" 127.0.0.1:8000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" 127.0.0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" *:8000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" localhost:8000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ipv6地址格式（0.7.36）在一个方括号中指定：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" [::]:8000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" [fe80::1]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0.8.21版本以后nginx可以监听unix套接口：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" unix:/tmp/nginx1.sock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("server_name")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" server_name name ...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" server_name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: server\n")])])]),a("p",[t._v("设置虚拟服务器的名字。例如:")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" example.com www.example.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#服务器名称可以包括星号("*") 来替换名称的第一部分或最后一部分:')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" example.com * .example.com www.example.*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#支持~起始的字符做正则表达式模式匹配，性能原因慎用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" www.example.com~^www\\d+\\.example\\.com$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# \\d表示[0-9]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("匹配优先级机制从高到低:")]),t._v(" "),a("ol",[a("li",[t._v("首先是字符串精确匹配如:https://www.cnblogs.com/ykzou/p/5840729.html")]),t._v(" "),a("li",[t._v("左侧通配符如：*.demo")]),t._v(" "),a("li",[t._v("右侧通配符如：demo.*")]),t._v(" "),a("li",[t._v("正则表达式如：-^.*.demo")]),t._v(" "),a("li",[t._v("default_server")])]),t._v(" "),a("ul",[a("li",[t._v("root")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" root path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" root html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: http, server, location, if in location\n")])])]),a("p",[t._v("设置请求的根目录，例如：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /i/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /data/w3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# /data/w3/i/top.gif文件将响应"/i/top.gif"请求而发送')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路径值可以包含变量，除了$document_root和$realpath_root。")]),t._v("\n")])])]),a("ul",[a("li",[t._v("alias [ˈeɪliəs]")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" alias path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDefault: -\nContext：1ocation\n")])])]),a("p",[t._v("定义指定的location的一个替换")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /i/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alias")]),t._v(" /data/w3/images/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#对于"/i/top.gif"的请求,将发送文件/data/w3/images/top.gif。')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#路径值可以包含变量，除了$document_root和$realpath_root")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#alias后面必须要用 "/" 结束，否则会找不到文件')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果alias配置在正则匹配的location内，则正则表达式中必须包含捕获语句(也就是括号())，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#而且alias配置中也要引用这些捕获值。如:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ ^/users/(.+\\.(?:gif|jpe?g|png))$")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alias")]),t._v(" /data/w3/images/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关于alias和root的区别： ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# root和alias是系统文件路径的设置。 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# root用来设置根目录，而alias用来重置当前文件的目录。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /img/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alias")]),t._v(" /var/www/image/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#若按照上述配置的话，则访问/img/目录里面的文件时，ningx会自动去/var/www/image/目录找文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /img/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /var/www/image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#若按照这种配置的话，则访问/img/目录下的文件时，nginx会去/var/www/image/img/目录下找文件。")]),t._v("\n")])])]),a("ul",[a("li",[t._v("location")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" location [ = | ~ | ~* | ^~ ] uri")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" @name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nDefault: -\nContext: server, location\n")])])]),a("p",[t._v("根据请求的URI设置配置。\n在一个server中location配置段可存在多个，用于实现URI到文件系统的路径映射；")]),t._v(" "),a("p",[t._v("匹配字符串分为两种：普通字符串 (literal string) 和正则表达式 (regular expression) ，其中 ~ 和 ~* 用于正则表达式，其他前缀和无任何前缀都用于普通字符串。")]),t._v(" "),a("p",[a("strong",[t._v("匹配顺序是")])]),t._v(" "),a("ol",[a("li",[t._v("先匹配普通字符串，将相对最精确的匹配暂时存储；")]),t._v(" "),a("li",[t._v("然后按照配置文件中的声明顺序进行正则表达式匹配，只要匹配到一条正则表达式，则停止匹配，取正则表达式为匹配结果;")]),t._v(" "),a("li",[t._v("如果所有正则表达式都匹配不上,则取1中存储的结果；")]),t._v(" "),a("li",[t._v("如果普通字符串和正则表达式都匹配不上，则报404 NOT FOUND")]),t._v(" "),a("li",[t._v('"^~ "和"="都能阻止继续搜索正则location。不同点是"^~“依然遵守"最大前缀"匹配规则，然而"="不是"最大前缀”，而是必须是严格匹配')]),t._v(" "),a("li",[t._v('只要遇到"完全匹配（exact match[ɪɡˈzækt mætʃ]）"，即使普通location 没有带"="或"^~"前缀，也一样会终止后面的匹配。')])]),t._v(" "),a("p",[t._v("例如:")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[t._v("location = /uri\t\t=开头表示精确前缀匹配，只有完全匹配才能生效。\nlocation ^~ /uri\t^~开头表示普通字符串匹配上以后不再进行正则匹配。\nlocation ~ pattern\t~开头表示区分大小写的正则匹配。\nlocation ~* pattern\t~*开头表示不区分大小写的正则匹配。\nlocation /uri\t不带任何修饰符，表示前缀匹配。\nlocation /\t通用匹配，任何未匹配到其他location的请求都会匹配到。\n")])])]),a("p",[t._v("配置举例：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t[ configuration A ]\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t[ configuration B ]\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /documents/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t[ configuration C ]\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ^~ /images/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t[ configuration D ]\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* \\. (gif | jpg | jpeg)$")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t[ configuration E ]\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "/"请求匹配configuration A:')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "/index.html"请求匹配configuration B:')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "/documents/document. . html"请求匹配configuration C:')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "/images/1.gif"请求匹配configuration D: ')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "/documents/1.jpg"请求匹配configuration E。')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意:正则匹配会根据匹配顺序，找到第一个匹配的正则表达式后将停止搜索。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 普通字符串匹配则无视顺序，只会选择最精确的匹配。")]),t._v("\n")])])]),a("ul",[a("li",[t._v("tcp_nodelay （delay  [dɪˈleɪ]  延迟）")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" tcp_nodelay "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" tcp_nodelay "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncontext: http, server, location\n")])])]),a("p",[t._v("当连接转换为保持活动(keep-alive)状态时，启用该选项。此外，它在SSL连接、无缓冲代理和WebSocket代理上也要启用。（这个选项仅在将连接转变为长连接的时候才被启用。）（需要频繁的发送一些小包数据并且不希望放置缓冲区而是直接发送时开启）")]),t._v(" "),a("ul",[a("li",[t._v("tcp_nopush（push [pʊʃ]）")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" tcp_nopush "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" tcp_nopush "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncontext: http, server, location\n")])])]),a("p",[t._v("启用或禁FreeBSD上的tcp_nopush socket选项或Linux上的tcp_cork socket选项。只有在使用sendfile时才启用这些选项。（其功能和tcp_nodelay功能正好相反）")]),t._v(" "),a("ul",[a("li",[t._v("senfile")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" sendfile "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" sendfile "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: http, server, location, if in location\n")])])]),a("p",[t._v("启用或禁用sendfile()的使用。从nginx 0.8.12和FreeBSD 5.2.1开始，AIO（即Async非阻塞，是异步非阻塞的IO）可用于预加载sendfile()的数据。")]),t._v(" "),a("p",[t._v("不开启sendfile():\n硬盘 >> kernel buffer >> user buffer >> kernel socket buffer >>协议栈")]),t._v(" "),a("p",[t._v("开启sendfile():\n硬盘 >> kernel buffer (快速拷贝到ker nelsocket buffer) >>协议栈")]),t._v(" "),a("p",[t._v("当 Nginx是一个静态文件服务器的时候，开启sendfile配置项能大大提高Nginx的性能。")]),t._v(" "),a("p",[t._v("例如:")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /video/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tcp_")]),t._v(" nopush\t"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("aio")]),t._v("\t\t    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("server_tokens")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" server_tokens "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")]),t._v(" | build | string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" server_tokens "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncontext: http, server, location\n")])])]),a("p",[t._v("在错误页和”服务器”响应头字段中启用或禁用发出nginx版本。")]),t._v(" "),a("ul",[a("li",[t._v("error_page")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" error_page code ... [=[response]] uri")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDefault: -\nContext: http, server, location, if in location\n")])])]),a("p",[t._v("定义为指定错误显示的URI。URI值可以包含变量。")]),t._v(" "),a("p",[t._v("例如:")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v("\t\t/404.html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v(" /50x.html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 这将导致内部重定向到指定的URI,客户端请求方法更改为"GET" (对于除"GET"和"HEAD"之外的所有方法)。')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 此外，可以使用"=response"语法将响应代码更改为其他代码，例如:')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ror_page")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" =200 /empty.gif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("keepalive_timeout")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" keepalive_timeout timeout [header_timeout]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" keepalive_timeout "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("75s")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: http, server, location\n")])])]),a("p",[t._v("设定客户端保持连接超时时长，0表示禁止。 Mozilla和Konqueror可以识别， MSIE自己会在60s后关闭连接。")]),t._v(" "),a("p",[t._v("Konqueror （孔克洛）是 KDE 桌面系统的一部分，主要用于 Linux 和 BSD家族的操作系统。在微软的 Windows 系统下，也有零星使用，当然功能相对有限。Konqueror主要用于文件管理、浏览，以及网页浏览。Konqueror 按照 GPL 进行发布。")]),t._v(" "),a("ul",[a("li",[t._v("keepalive_requests")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" keepalive_requests number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" keepalive_requests "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: http, server, location\n")])])]),a("p",[t._v("设置通过一个保持活动连接可以提供服务的最大请求数。在发出最大请求数后，连接将关闭。")]),t._v(" "),a("ul",[a("li",[t._v("keepalive_disable")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" keepalive_disable none | browser ...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" keepalive_disab1e msie6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: http, server, location\n")])])]),a("p",[t._v("禁止与那些行为不正常的浏览器保持活动连接。")]),t._v(" "),a("ul",[a("li",[t._v("send_timeout")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" send_timeout time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" send_timeout "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60s")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: http, server, location\n")])])]),a("p",[t._v("设置向客户端发送响应的超时时间。超时仅在两个连续的写入操作之间设置，不用于传输整个响应。如果客户端在此时间内未收到任何内容，则连接将关闭。")]),t._v(" "),a("ul",[a("li",[t._v("client_body_buffer_size")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" client_body_buffer_size size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" client_body_buffer_size "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8k")]),t._v(" |16k")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: http, server, location\n")])])]),a("p",[t._v("设置读取客户端请求body部分的buffer大小。如果请求body大于缓冲区，则整个body或其部分将写入临时文件。默认情况下，缓冲区大小等于两个内存页。x86平台默认是8k，x86_ 64平台是16k。")]),t._v(" "),a("ul",[a("li",[t._v("client_body_temp_path")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" client_body_temp_path path [1evel1 [1evel2 [leve13]]]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" client_body_temp_path client_body_temp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: http, server, location\n")])])]),a("p",[t._v("定义用于存储保存客户端请求body的临时文件的目录。指定目录下最多可以使用三级子目录层次结构。例如:")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的level1,2,3如果有值就代表存在一级，二级，三级子目录。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 目录名是由数字进行命名的，所以这里的具体的值就是代表目录名的数字位数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_body_temp_path")]),t._v(" /spoo1/nginx/client_temp "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 临时文件的路径可能看起来像下面所示:")]),t._v("\n/spoo1/nginx/client_temp/7/45/00000123457\n")])])]),a("ul",[a("li",[t._v("client_max_body_size")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" client_max_body_size size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" client_max_body_size "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1m")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: http, server, location\n")])])]),a("p",[t._v('设置客户端请求body部分的最大值。指定在请求头的"Content-Length"区域。 如果超出这个值，则返回413错误。将大小设置为0将禁用对客户端请求body大小的检查。')]),t._v(" "),a("ul",[a("li",[t._v("limit_rate ([reɪt])")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" limit_rate rate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" limit_rate "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncontext: http, server, location, if in location\n")])])]),a("p",[t._v("限制响应给客户端的传输速率，单位是bytes/second,默认值0表示无限制。")]),t._v(" "),a("ul",[a("li",[t._v("limit_except ( [ɪkˈsept] )")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("syntax:")]),t._v(" limit_except method ...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nDefault: -\nContext: location\n")])])]),a("p",[t._v("限制在location内使用的http方法。方法包括: GET, HEAD, POST, PUT, DELETE, MKCOL, COPY, MOVE,OPTIONS, PROPFIND, PROPPATCH, LOCK, UNLOCK, PATCH。允许GET方法时, HEAD方法也会被允许。例如:")]),t._v(" "),a("p",[t._v("（allow [əˈlaʊ]   deny  [dɪˈnaɪ] ）")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit_except")]),t._v(" GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" 192.168.1.0/24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deny")]),t._v(" all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#除了GET和HEAD之外其它方法仅允许192.168.1.0/24网段主机使用")]),t._v("\n")])])]),a("h2",{attrs:{id:"_3-访问控制模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-访问控制模块"}},[t._v("#")]),t._v(" 3，访问控制模块")]),t._v(" "),a("p",[t._v("此模块允许限制对特定客户机地址的访问")]),t._v(" "),a("ul",[a("li",[t._v("allow")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" allow address | CIDR | unix: | all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDefault: -\nContext: http, server, location, limit_except\n")])])]),a("p",[t._v("指定允许访问的地址或网格")]),t._v(" "),a("ul",[a("li",[t._v("deny")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" deny address | CIDR | unix: | a11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDefault: -\nContext: http, server, location, limit_except\n")])])]),a("p",[t._v("指定拒绝的地址或网络")]),t._v(" "),a("p",[t._v("例如:")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deny")]),t._v(" 192.168.1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" 192.168.1.0/24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" 10.1.1.0/16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" 2001:0db8::/32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deny")]),t._v(" all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 规则按顺序检查，直到找到第一个匹配项。")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4、用户认证模块-ngx-http-auth-basic-module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、用户认证模块-ngx-http-auth-basic-module"}},[t._v("#")]),t._v(" 4、用户认证模块(ngx_ http_ "),a("em",[t._v("auth")]),t._v(" basic_ module)")]),t._v(" "),a("p",[t._v("此模块使用HTTP Basic Authentication协议限制对资源的访问，通过用户名和密码方式。")]),t._v(" "),a("ul",[a("li",[t._v("auth_basic")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("syntax:")]),t._v(" auth_basic string | "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" auth_basic "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nContext: http, server, location, limit_except\n")])])]),a("p",[t._v("激活和关闭认证功能。")]),t._v(" "),a("ul",[a("li",[t._v("auth_basic_user_file")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" auth_basic_user_file file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDefault: -\nContext: http, server, location, limit_except\n")])])]),a("p",[t._v("指定保存用户名和密码的文件。格式如下:")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# comment")]),t._v("\nname1: password1\nname2: password2:comment\nname3: password3\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也可以使用密文。可以通过使用apatch的htpasswd命令(http-tools提供)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者openssl passwd命令")]),t._v("\n")])])]),a("p",[t._v("配置案例：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /admin/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auth_basic")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Admin Area"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auth_basic_user_file")]),t._v(" /etc/nginx/.ngxpasswd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auth_basic")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"closed site"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auth_basic_user_file")]),t._v(" conf/htpasswd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5、基本状态查看模块-ngx-http-stub-status-module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、基本状态查看模块-ngx-http-stub-status-module"}},[t._v("#")]),t._v(" 5、基本状态查看模块(ngx_http_stub_status_module)")]),t._v(" "),a("p",[t._v("提供对基本状态信息的访问")]),t._v(" "),a("ul",[a("li",[t._v("stub_status")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" stub_status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDefault: -\nContext: server, location\n")])])]),a("p",[t._v('在1.7.5之前的版本:"stub_status on"。\n配置案例:')]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /basic_status")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("stub_status")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /status")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("stub_status")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" 172.16.0.0/16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deny")]),t._v(" all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出nginx的基本状态信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Active connections:当前状态, 活动状态的连接数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# accepts: 统计总值, 已经接受的客户端请求的总数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# handled: 统计总值, 已经处理完成的客户端请求的总数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# requests: 统计总值, 客户端发来的总的请求数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Reading: 当前状态, 正在读取客户端请求报文首部的连接的连接数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# writing: 当前状态, 正在向客户端发送响应报文过程中的连接数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# waiting: 当前状态, 正在等待客户端发出请求的空闲连接数")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);